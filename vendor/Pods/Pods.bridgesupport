<?xml version='1.0'?>
<signatures version='1.0'>
<constant name='AFNetworkingErrorDomain' const='true' declared_type='NSString*' type='@'/>
<constant name='AFNetworkingOperationDidFinishNotification' const='true' declared_type='NSString*' type='@'/>
<constant name='AFNetworkingOperationDidStartNotification' const='true' declared_type='NSString*' type='@'/>
<constant name='AFNetworkingOperationFailingURLRequestErrorKey' const='true' declared_type='NSString*' type='@'/>
<constant name='AFNetworkingOperationFailingURLResponseErrorKey' const='true' declared_type='NSString*' type='@'/>
<constant name='RKDetailedErrorsKey' const='true' declared_type='NSString*' type='@'/>
<constant name='RKEntityIdentificationAttributesUserInfoKey' const='true' declared_type='NSString*' type='@'/>
<constant name='RKErrorDomain' const='true' declared_type='NSString*' type='@'/>
<constant name='RKErrorNotificationErrorKey' const='true' declared_type='NSString*' type='@'/>
<constant name='RKISO8601DefaultTimeSeparatorCharacter' declared_type='unichar' type='S'/>
<constant name='RKMIMETypeErrorKey' const='true' declared_type='NSString*' type='@'/>
<constant name='RKMIMETypeFormURLEncoded' const='true' declared_type='NSString*' type='@'/>
<constant name='RKMIMETypeJSON' const='true' declared_type='NSString*' type='@'/>
<constant name='RKMIMETypeTextXML' const='true' declared_type='NSString*' type='@'/>
<constant name='RKMIMETypeXML' const='true' declared_type='NSString*' type='@'/>
<constant name='RKMappingErrorKeyPathErrorKey' const='true' declared_type='NSString*' type='@'/>
<constant name='RKObjectMapperErrorObjectsKey' const='true' declared_type='NSString*' type='@'/>
<constant name='RKObjectRequestOperationDidFinishNotification' const='true' declared_type='NSString*' type='@'/>
<constant name='RKObjectRequestOperationDidStartNotification' const='true' declared_type='NSString*' type='@'/>
<constant name='RKPropertyInspectionIsPrimitiveKey' const='true' declared_type='NSString*' type='@'/>
<constant name='RKPropertyInspectionKeyValueCodingClassKey' const='true' declared_type='NSString*' type='@'/>
<constant name='RKPropertyInspectionNameKey' const='true' declared_type='NSString*' type='@'/>
<constant name='RKRequestMethodAny' const='true' declared_type='RKRequestMethod' type='i'/>
<constant name='RKSQLitePersistentStoreSeedDatabasePathOption' const='true' declared_type='NSString*' type='@'/>
<constant name='kAFUploadStream3GSuggestedDelay' const='true' declared_type='NSTimeInterval' type='d'/>
<constant name='kAFUploadStream3GSuggestedPacketSize' const='true' declared_type='NSUInteger' type='I'/>
<enum name='AFFormURLParameterEncoding' value='0'/>
<enum name='AFJSONParameterEncoding' value='1'/>
<enum name='AFPropertyListParameterEncoding' value='2'/>
<enum name='RKLogComponent' value='0'/>
<enum name='RKLogLevelCritical' value='1'/>
<enum name='RKLogLevelDebug' value='5'/>
<enum name='RKLogLevelDefault' value='3'/>
<enum name='RKLogLevelError' value='2'/>
<enum name='RKLogLevelInfo' value='4'/>
<enum name='RKLogLevelOff' value='0'/>
<enum name='RKLogLevelTrace' value='6'/>
<enum name='RKLogLevelWarning' value='3'/>
<enum name='RKMappingErrorFromMappingResult' value='1004'/>
<enum name='RKMappingErrorInvalidAssignmentPolicy' value='1010'/>
<enum name='RKMappingErrorMappingDeclined' value='1009'/>
<enum name='RKMappingErrorNilDestinationObject' value='1007'/>
<enum name='RKMappingErrorNilManagedObjectCache' value='1008'/>
<enum name='RKMappingErrorNotFound' value='1001'/>
<enum name='RKMappingErrorTypeMismatch' value='1002'/>
<enum name='RKMappingErrorUnableToDetermineMapping' value='1006'/>
<enum name='RKMappingErrorUnmappableRepresentation' value='1003'/>
<enum name='RKMappingErrorValidationFailure' value='1005'/>
<enum name='RKObjectLoaderRemoteSystemError' value='1'/>
<enum name='RKObjectLoaderUnexpectedResponseError' value='4'/>
<enum name='RKReplaceAssignmentPolicy' value='1'/>
<enum name='RKRequestBaseURLOfflineError' value='2'/>
<enum name='RKRequestConnectionTimeoutError' value='5'/>
<enum name='RKRequestMethodDELETE' value='3'/>
<enum name='RKRequestMethodGET' value='0'/>
<enum name='RKRequestMethodHEAD' value='4'/>
<enum name='RKRequestMethodInvalid' value='-1'/>
<enum name='RKRequestMethodOPTIONS' value='6'/>
<enum name='RKRequestMethodPATCH' value='5'/>
<enum name='RKRequestMethodPOST' value='1'/>
<enum name='RKRequestMethodPUT' value='2'/>
<enum name='RKRequestUnexpectedResponseError' value='3'/>
<enum name='RKSetAssignmentPolicy' value='0'/>
<enum name='RKStatusCodeClassClientError' value='400'/>
<enum name='RKStatusCodeClassInformational' value='100'/>
<enum name='RKStatusCodeClassRedirection' value='300'/>
<enum name='RKStatusCodeClassServerError' value='500'/>
<enum name='RKStatusCodeClassSuccessful' value='200'/>
<enum name='RKUnionAssignmentPolicy' value='2'/>
<enum name='RKUnsupportedMIMETypeError' value='6'/>
<enum name='RKlcl_cApp' value='0'/>
<enum name='RKlcl_cRestKit' value='1'/>
<enum name='RKlcl_cRestKitCoreData' value='2'/>
<enum name='RKlcl_cRestKitCoreDataCache' value='3'/>
<enum name='RKlcl_cRestKitNetwork' value='4'/>
<enum name='RKlcl_cRestKitObjectMapping' value='5'/>
<enum name='RKlcl_cRestKitSearch' value='6'/>
<enum name='RKlcl_cRestKitSupport' value='7'/>
<enum name='RKlcl_cRestKitTesting' value='8'/>
<enum name='RKlcl_cRestKitUI' value='9'/>
<enum name='RKlcl_vCritical' value='1'/>
<enum name='RKlcl_vDebug' value='5'/>
<enum name='RKlcl_vError' value='2'/>
<enum name='RKlcl_vInfo' value='4'/>
<enum name='RKlcl_vOff' value='0'/>
<enum name='RKlcl_vTrace' value='6'/>
<enum name='RKlcl_vWarning' value='3'/>
<enum name='SVProgressHUDMaskTypeBlack' value='3'/>
<enum name='SVProgressHUDMaskTypeClear' value='2'/>
<enum name='SVProgressHUDMaskTypeGradient' value='4'/>
<enum name='SVProgressHUDMaskTypeNone' value='1'/>
<function name='AFContentTypesFromHTTPHeader'>
<arg name='string' declared_type='NSString*' type='@'/>
<retval declared_type='NSSet*' type='@'/>
</function>
<function name='AFQueryStringFromParametersWithEncoding'>
<arg name='parameters' declared_type='NSDictionary*' type='@'/>
<arg name='encoding' declared_type='NSStringEncoding' type='I'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKApplicationDataDirectory'>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKArrayOfFetchRequestFromBlocksWithURL'>
<arg name='fetchRequestBlocks' declared_type='NSArray*' type='@'/>
<arg name='URL' declared_type='NSURL*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</function>
<function name='RKCachesDirectory'>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKClassIsCollection'>
<arg name='aClass' declared_type='Class' type='#'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKDateFromHTTPDateString'>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='NSDate*' type='@'/>
</function>
<function name='RKDateFromString'>
<arg name='dateString' declared_type='NSString*' type='@'/>
<retval declared_type='NSDate*' type='@'/>
</function>
<function name='RKDictionaryByMergingDictionaryWithDictionary'>
<arg name='dict1' declared_type='NSDictionary*' type='@'/>
<arg name='dict2' declared_type='NSDictionary*' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</function>
<function name='RKDictionaryByReplacingPercentEscapesInEntriesFromDictionary'>
<arg name='dictionary' declared_type='NSDictionary*' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</function>
<function name='RKDictionaryFromURLEncodedStringWithEncoding'>
<arg name='URLEncodedString' declared_type='NSString*' type='@'/>
<arg name='encoding' declared_type='NSStringEncoding' type='I'/>
<retval declared_type='NSDictionary*' type='@'/>
</function>
<function name='RKEnsureDirectoryExistsAtPath'>
<arg name='path' declared_type='NSString*' type='@'/>
<arg name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKErrorFromMappingResult'>
<arg name='mappingResult' declared_type='RKMappingResult*' type='@'/>
<retval declared_type='NSError*' type='@'/>
</function>
<function name='RKHTTPCacheExpirationDateFromHeadersWithStatusCode'>
<arg name='headers' declared_type='NSDictionary*' type='@'/>
<arg name='statusCode' declared_type='NSInteger' type='i'/>
<retval declared_type='NSDate*' type='@'/>
</function>
<function name='RKIdentificationAttributesInferredFromEntity'>
<arg name='entity' declared_type='NSEntityDescription*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</function>
<function name='RKKeyValueCodingClassForObjCType'>
<arg name='type' const='true' declared_type='char*' type='*'/>
<retval declared_type='Class' type='#'/>
</function>
<function name='RKKeyValueCodingClassFromPropertyAttributes'>
<arg name='attr' const='true' declared_type='char*' type='*'/>
<retval declared_type='Class' type='#'/>
</function>
<function name='RKLogConfigureFromEnvironment'>
<retval declared_type='void' type='v'/>
</function>
<function name='RKLogCoreDataError'>
<arg name='error' declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RKLogIntegerAsBinary'>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RKLogValidationError'>
<arg name='error' declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RKMIMETypeFromPathExtension'>
<arg name='path' declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKMIMETypeInSet'>
<arg name='MIMEType' declared_type='NSString*' type='@'/>
<arg name='MIMETypes' declared_type='NSSet*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKObjectIsCollection'>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKObjectIsCollectionContainingOnlyManagedObjects'>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKObjectIsCollectionOfCollections'>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKObjectIsEqualToObject'>
<arg name='object' declared_type='id' type='@'/>
<arg name='anotherObject' declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKPathAndQueryStringFromURLRelativeToURL'>
<arg name='URL' declared_type='NSURL*' type='@'/>
<arg name='baseURL' declared_type='NSURL*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKPathFromPatternWithObject'>
<arg name='pathPattern' declared_type='NSString*' type='@'/>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKPercentEscapedQueryStringFromStringWithEncoding'>
<arg name='string' declared_type='NSString*' type='@'/>
<arg name='encoding' declared_type='NSStringEncoding' type='I'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKPropertyInspectorGetClassForPropertyAtKeyPathOfObject'>
<arg name='keyPath' declared_type='NSString*' type='@'/>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='Class' type='#'/>
</function>
<function name='RKPropertyInspectorIsPropertyAtKeyPathOfObjectPrimitive'>
<arg name='keyPath' declared_type='NSString*' type='@'/>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKPropertyTypeFromAttributeString'>
<arg name='attributeString' declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKQueryParametersFromStringWithEncoding'>
<arg name='string' declared_type='NSString*' type='@'/>
<arg name='encoding' declared_type='NSStringEncoding' type='I'/>
<retval declared_type='NSDictionary*' type='@'/>
</function>
<function name='RKRequestMethodFromString'>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='RKRequestMethod' type='i'/>
</function>
<function name='RKSetExcludeFromBackupAttributeForItemAtPath'>
<arg name='path' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RKStatusCodeIndexSetForClass'>
<arg name='statusCodeClass' declared_type='RKStatusCodeClass' type='I'/>
<retval declared_type='NSIndexSet*' type='@'/>
</function>
<function name='RKStatusCodeRangeForClass'>
<arg name='statusCodeClass' declared_type='RKStatusCodeClass' type='I'/>
<retval declared_type='NSRange' type='{_NSRange=II}'/>
</function>
<function name='RKStringFromDate'>
<arg name='date' declared_type='NSDate*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKStringFromRequestMethod'>
<arg declared_type='RKRequestMethod' type='i'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKStringFromStatusCode'>
<arg name='statusCode' declared_type='NSInteger' type='i'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKURLEncodedStringFromDictionaryWithEncoding'>
<arg name='dictionary' declared_type='NSDictionary*' type='@'/>
<arg name='encoding' declared_type='NSStringEncoding' type='I'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKURLIsRelativeToURL'>
<arg name='URL' declared_type='NSURL*' type='@'/>
<arg name='baseURL' declared_type='NSURL*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKlcl_configure_by_component'>
<arg name='component' declared_type='_RKlcl_component_t' type='I'/>
<arg name='level' declared_type='_RKlcl_level_t' type='I'/>
<retval declared_type='uint32_t' type='I'/>
</function>
<function name='RKlcl_configure_by_header'>
<arg name='header' const='true' declared_type='char*' type='*'/>
<arg name='level' declared_type='_RKlcl_level_t' type='I'/>
<retval declared_type='uint32_t' type='I'/>
</function>
<function name='RKlcl_configure_by_identifier'>
<arg name='identifier' const='true' declared_type='char*' type='*'/>
<arg name='level' declared_type='_RKlcl_level_t' type='I'/>
<retval declared_type='uint32_t' type='I'/>
</function>
<function name='RKlcl_configure_by_name'>
<arg name='name' const='true' declared_type='char*' type='*'/>
<arg name='level' declared_type='_RKlcl_level_t' type='I'/>
<retval declared_type='uint32_t' type='I'/>
</function>
<function name='SOCStringFromStringWithObject'>
<arg name='string' declared_type='NSString*' type='@'/>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<class name='AFHTTPClient'>
<method selector='HTTPRequestOperationWithRequest:success:failure:'>
<arg index='0' name='urlRequest' declared_type='NSURLRequest*' type='@'/>
<arg index='1' name='success' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='2' name='failure' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='cancelAllHTTPOperationsWithMethod:path:'>
<arg index='0' name='method' declared_type='NSString*' type='@'/>
<arg index='1' name='path' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearAuthorizationHeader'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clientWithBaseURL:' class_method='true'>
<arg index='0' name='url' declared_type='NSURL*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='defaultHeaders'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='defaultValueForHeader:'>
<arg index='0' name='header' declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='deletePath:parameters:success:failure:'>
<arg index='0' name='path' declared_type='NSString*' type='@'/>
<arg index='1' name='parameters' declared_type='NSDictionary*' type='@'/>
<arg index='2' name='success' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' name='failure' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfHTTPRequestOperations:progressBlock:completionBlock:'>
<arg index='0' name='operations' declared_type='NSArray*' type='@'/>
<arg index='1' name='progressBlock' function_pointer='true' declared_type='void (^)(NSUInteger, NSUInteger)' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='2' name='completionBlock' function_pointer='true' declared_type='void (^)(NSArray *)' type='@?'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfHTTPRequestOperationsWithRequests:progressBlock:completionBlock:'>
<arg index='0' name='urlRequests' declared_type='NSArray*' type='@'/>
<arg index='1' name='progressBlock' function_pointer='true' declared_type='void (^)(NSUInteger, NSUInteger)' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='2' name='completionBlock' function_pointer='true' declared_type='void (^)(NSArray *)' type='@?'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueHTTPRequestOperation:'>
<arg index='0' name='operation' declared_type='AFHTTPRequestOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getPath:parameters:success:failure:'>
<arg index='0' name='path' declared_type='NSString*' type='@'/>
<arg index='1' name='parameters' declared_type='NSDictionary*' type='@'/>
<arg index='2' name='success' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' name='failure' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithBaseURL:'>
<arg index='0' name='url' declared_type='NSURL*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='multipartFormRequestWithMethod:path:parameters:constructingBodyWithBlock:'>
<arg index='0' name='method' declared_type='NSString*' type='@'/>
<arg index='1' name='path' declared_type='NSString*' type='@'/>
<arg index='2' name='parameters' declared_type='NSDictionary*' type='@'/>
<arg index='3' name='block' function_pointer='true' declared_type='void (^)(id)' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='parameterEncoding'>
<retval declared_type='AFHTTPClientParameterEncoding' type='i'/>
</method>
<method selector='patchPath:parameters:success:failure:'>
<arg index='0' name='path' declared_type='NSString*' type='@'/>
<arg index='1' name='parameters' declared_type='NSDictionary*' type='@'/>
<arg index='2' name='success' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' name='failure' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='postPath:parameters:success:failure:'>
<arg index='0' name='path' declared_type='NSString*' type='@'/>
<arg index='1' name='parameters' declared_type='NSDictionary*' type='@'/>
<arg index='2' name='success' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' name='failure' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='putPath:parameters:success:failure:'>
<arg index='0' name='path' declared_type='NSString*' type='@'/>
<arg index='1' name='parameters' declared_type='NSDictionary*' type='@'/>
<arg index='2' name='success' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' name='failure' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerHTTPOperationClass:'>
<arg index='0' name='operationClass' declared_type='Class' type='#'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='requestWithMethod:path:parameters:'>
<arg index='0' name='method' declared_type='NSString*' type='@'/>
<arg index='1' name='path' declared_type='NSString*' type='@'/>
<arg index='2' name='parameters' declared_type='NSDictionary*' type='@'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='setAuthorizationHeaderWithToken:'>
<arg index='0' name='token' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthorizationHeaderWithUsername:password:'>
<arg index='0' name='username' declared_type='NSString*' type='@'/>
<arg index='1' name='password' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultHeader:value:'>
<arg index='0' name='header' declared_type='NSString*' type='@'/>
<arg index='1' name='value' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParameterEncoding:'>
<arg index='0' name='parameterEncoding' declared_type='AFHTTPClientParameterEncoding' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStringEncoding:'>
<arg index='0' name='stringEncoding' declared_type='NSStringEncoding' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringEncoding'>
<retval declared_type='NSStringEncoding' type='I'/>
</method>
<method selector='unregisterHTTPOperationClass:'>
<arg index='0' name='operationClass' declared_type='Class' type='#'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFHTTPRequestOperation'>
<method selector='acceptableContentTypes' class_method='true'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='acceptableStatusCodes' class_method='true'>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
<method selector='addAcceptableContentTypes:' class_method='true'>
<arg index='0' name='contentTypes' declared_type='NSSet*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAcceptableStatusCodes:' class_method='true'>
<arg index='0' name='statusCodes' declared_type='NSIndexSet*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='canProcessRequest:' class_method='true'>
<arg index='0' name='urlRequest' declared_type='NSURLRequest*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='failureCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='hasAcceptableContentType'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasAcceptableStatusCode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='response'>
<retval declared_type='NSHTTPURLResponse*' type='@'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg index='0' name='success' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='1' name='failure' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFailureCallbackQueue:'>
<arg index='0' name='failureCallbackQueue' declared_type='dispatch_queue_t' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSuccessCallbackQueue:'>
<arg index='0' name='successCallbackQueue' declared_type='dispatch_queue_t' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='successCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
</class>
<class name='AFImageRequestOperation'>
<method selector='imageRequestOperationWithRequest:imageProcessingBlock:success:failure:' class_method='true'>
<arg index='0' name='urlRequest' declared_type='NSURLRequest*' type='@'/>
<arg index='1' name='imageProcessingBlock' function_pointer='true' declared_type='UIImage *(^)(UIImage *)' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</arg>
<arg index='2' name='success' function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' name='failure' function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='imageRequestOperationWithRequest:success:' class_method='true'>
<arg index='0' name='urlRequest' declared_type='NSURLRequest*' type='@'/>
<arg index='1' name='success' function_pointer='true' declared_type='void (^)(UIImage *)' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='imageScale'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='responseImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='setImageScale:'>
<arg index='0' name='imageScale' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFJSONRequestOperation'>
<method selector='JSONReadingOptions'>
<retval declared_type='NSJSONReadingOptions' type='I'/>
</method>
<method selector='JSONRequestOperationWithRequest:success:failure:' class_method='true'>
<arg index='0' name='urlRequest' declared_type='NSURLRequest*' type='@'/>
<arg index='1' name='success' function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, id)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='2' name='failure' function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, id)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='responseJSON'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setJSONReadingOptions:'>
<arg index='0' name='JSONReadingOptions' declared_type='NSJSONReadingOptions' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFNetworkActivityIndicatorManager'>
<method selector='decrementActivityCount'>
<retval declared_type='void' type='v'/>
</method>
<method selector='incrementActivityCount'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNetworkActivityIndicatorVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setEnabled:'>
<arg index='0' name='enabled' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedManager' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='AFPropertyListRequestOperation'>
<method selector='propertyListReadOptions'>
<retval declared_type='NSPropertyListReadOptions' type='I'/>
</method>
<method selector='propertyListRequestOperationWithRequest:success:failure:' class_method='true'>
<arg index='0' name='urlRequest' declared_type='NSURLRequest*' type='@'/>
<arg index='1' name='success' function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, id)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='2' name='failure' function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, id)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='responsePropertyList'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setPropertyListReadOptions:'>
<arg index='0' name='propertyListReadOptions' declared_type='NSPropertyListReadOptions' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFURLConnectionOperation'>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='initWithRequest:'>
<arg index='0' name='urlRequest' declared_type='NSURLRequest*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='inputStream'>
<retval declared_type='NSInputStream*' type='@'/>
</method>
<method selector='isPaused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outputStream'>
<retval declared_type='NSOutputStream*' type='@'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='request'>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='response'>
<retval declared_type='NSURLResponse*' type='@'/>
</method>
<method selector='responseData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='responseString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='responseStringEncoding'>
<retval declared_type='NSStringEncoding' type='I'/>
</method>
<method selector='resume'>
<retval declared_type='void' type='v'/>
</method>
<method selector='runLoopModes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='setAuthenticationAgainstProtectionSpaceBlock:'>
<arg index='0' name='block' function_pointer='true' declared_type='BOOL (^)(NSURLConnection *, NSURLProtectionSpace *)' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLProtectionSpace*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthenticationChallengeBlock:'>
<arg index='0' name='block' function_pointer='true' declared_type='void (^)(NSURLConnection *, NSURLAuthenticationChallenge *)' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLAuthenticationChallenge*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheResponseBlock:'>
<arg index='0' name='block' function_pointer='true' declared_type='NSCachedURLResponse *(^)(NSURLConnection *, NSCachedURLResponse *)' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSCachedURLResponse*' type='@'/>
<retval declared_type='NSCachedURLResponse*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadProgressBlock:'>
<arg index='0' name='block' function_pointer='true' declared_type='void (^)(NSUInteger, long long, long long)' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInputStream:'>
<arg index='0' name='inputStream' declared_type='NSInputStream*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOutputStream:'>
<arg index='0' name='outputStream' declared_type='NSOutputStream*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRedirectResponseBlock:'>
<arg index='0' name='block' function_pointer='true' declared_type='NSURLRequest *(^)(NSURLConnection *, NSURLRequest *, NSURLResponse *)' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<retval declared_type='NSURLRequest*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRunLoopModes:'>
<arg index='0' name='runLoopModes' declared_type='NSSet*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldExecuteAsBackgroundTaskWithExpirationHandler:'>
<arg index='0' name='handler' function_pointer='true' declared_type='void (^)(void)' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUploadProgressBlock:'>
<arg index='0' name='block' function_pointer='true' declared_type='void (^)(NSUInteger, long long, long long)' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg index='0' name='userInfo' declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='AFXMLRequestOperation'>
<method selector='XMLParserRequestOperationWithRequest:success:failure:' class_method='true'>
<arg index='0' name='urlRequest' declared_type='NSURLRequest*' type='@'/>
<arg index='1' name='success' function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSXMLParser *)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSXMLParser*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='2' name='failure' function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, NSXMLParser *)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='NSXMLParser*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='responseXMLParser'>
<retval declared_type='NSXMLParser*' type='@'/>
</method>
</class>
<class name='CustomBadge'>
<method selector='autoBadgeSizeWithString:'>
<arg index='0' name='badgeString' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='badgeCornerRoundness'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='badgeFrame'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='badgeFrameColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='badgeInsetColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='badgeScaleFactor'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='badgeShining'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='badgeText'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='badgeTextColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='customBadgeWithString:' class_method='true'>
<arg index='0' name='badgeString' declared_type='NSString*' type='@'/>
<retval declared_type='CustomBadge*' type='@'/>
</method>
<method selector='customBadgeWithString:withStringColor:withInsetColor:withBadgeFrame:withBadgeFrameColor:withScale:withShining:' class_method='true'>
<arg index='0' name='badgeString' declared_type='NSString*' type='@'/>
<arg index='1' name='stringColor' declared_type='UIColor*' type='@'/>
<arg index='2' name='insetColor' declared_type='UIColor*' type='@'/>
<arg index='3' name='badgeFrameYesNo' declared_type='BOOL' type='B'/>
<arg index='4' name='frameColor' declared_type='UIColor*' type='@'/>
<arg index='5' name='scale' declared_type='CGFloat' type='f'/>
<arg index='6' name='shining' declared_type='BOOL' type='B'/>
<retval declared_type='CustomBadge*' type='@'/>
</method>
<method selector='setBadgeCornerRoundness:'>
<arg index='0' name='badgeCornerRoundness' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadgeFrame:'>
<arg index='0' name='badgeFrame' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadgeFrameColor:'>
<arg index='0' name='badgeFrameColor' declared_type='UIColor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadgeInsetColor:'>
<arg index='0' name='badgeInsetColor' declared_type='UIColor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadgeScaleFactor:'>
<arg index='0' name='badgeScaleFactor' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadgeShining:'>
<arg index='0' name='badgeShining' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadgeText:'>
<arg index='0' name='badgeText' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadgeTextColor:'>
<arg index='0' name='badgeTextColor' declared_type='UIColor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSManagedObject'>
<method selector='hasBeenDeleted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNew'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSManagedObjectContext'>
<method selector='countForEntityForName:predicate:error:'>
<arg index='0' name='entityName' declared_type='NSString*' type='@'/>
<arg index='1' name='predicate' declared_type='NSPredicate*' type='@'/>
<arg index='2' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='insertNewObjectForEntityForName:'>
<arg index='0' name='entityName' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='saveToPersistentStore:'>
<arg index='0' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSObject'>
<method selector='appendPartWithFileData:name:fileName:mimeType:'>
<arg index='0' name='data' declared_type='NSData*' type='@'/>
<arg index='1' name='name' declared_type='NSString*' type='@'/>
<arg index='2' name='fileName' declared_type='NSString*' type='@'/>
<arg index='3' name='mimeType' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithFileURL:name:error:'>
<arg index='0' name='fileURL' declared_type='NSURL*' type='@'/>
<arg index='1' name='name' declared_type='NSString*' type='@'/>
<arg index='2' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFormData:name:'>
<arg index='0' name='data' declared_type='NSData*' type='@'/>
<arg index='1' name='name' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithHeaders:body:'>
<arg index='0' name='headers' declared_type='NSDictionary*' type='@'/>
<arg index='1' name='body' declared_type='NSData*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='commitChangesForMappingOperation:error:'>
<arg index='0' name='mappingOperation' declared_type='RKMappingOperation*' type='@'/>
<arg index='1' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dataFromObject:error:' class_method='true'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='didCreateObject:'>
<arg index='0' name='object' declared_type='NSManagedObject*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didDeleteObject:'>
<arg index='0' name='object' declared_type='NSManagedObject*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didFetchObject:'>
<arg index='0' name='object' declared_type='NSManagedObject*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='managedObjectsWithEntity:attributeValues:inManagedObjectContext:'>
<arg index='0' name='entity' declared_type='NSEntityDescription*' type='@'/>
<arg index='1' name='attributeValues' declared_type='NSDictionary*' type='@'/>
<arg index='2' name='managedObjectContext' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='mapper:didFailMappingOperation:forKeyPath:withError:'>
<arg index='0' name='mapper' declared_type='RKMapperOperation*' type='@'/>
<arg index='1' name='mappingOperation' declared_type='RKMappingOperation*' type='@'/>
<arg index='2' name='keyPath' declared_type='NSString*' type='@'/>
<arg index='3' name='error' declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:didFindRepresentationOrArrayOfRepresentations:atKeyPath:'>
<arg index='0' name='mapper' declared_type='RKMapperOperation*' type='@'/>
<arg index='1' name='dictionaryOrArrayOfDictionaries' declared_type='id' type='@'/>
<arg index='2' name='keyPath' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:didFinishMappingOperation:forKeyPath:'>
<arg index='0' name='mapper' declared_type='RKMapperOperation*' type='@'/>
<arg index='1' name='mappingOperation' declared_type='RKMappingOperation*' type='@'/>
<arg index='2' name='keyPath' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:didNotFindRepresentationOrArrayOfRepresentationsAtKeyPath:'>
<arg index='0' name='mapper' declared_type='RKMapperOperation*' type='@'/>
<arg index='1' name='keyPath' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:willStartMappingOperation:forKeyPath:'>
<arg index='0' name='mapper' declared_type='RKMapperOperation*' type='@'/>
<arg index='1' name='mappingOperation' declared_type='RKMappingOperation*' type='@'/>
<arg index='2' name='keyPath' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapperDidCancelMapping:'>
<arg index='0' name='mapper' declared_type='RKMapperOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapperDidFinishMapping:'>
<arg index='0' name='mapper' declared_type='RKMapperOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapperWillStartMapping:'>
<arg index='0' name='mapper' declared_type='RKMapperOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:deleteExistingValueOfRelationshipWithMapping:error:'>
<arg index='0' name='mappingOperation' declared_type='RKMappingOperation*' type='@'/>
<arg index='1' name='relationshipMapping' declared_type='RKRelationshipMapping*' type='@'/>
<arg index='2' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mappingOperation:didConnectRelationship:toValue:usingConnection:'>
<arg index='0' name='operation' declared_type='RKMappingOperation*' type='@'/>
<arg index='1' name='relationship' declared_type='NSRelationshipDescription*' type='@'/>
<arg index='2' name='value' declared_type='id' type='@'/>
<arg index='3' name='connection' declared_type='RKConnectionDescription*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didFailToConnectRelationship:usingConnection:'>
<arg index='0' name='operation' declared_type='RKMappingOperation*' type='@'/>
<arg index='1' name='relationship' declared_type='NSRelationshipDescription*' type='@'/>
<arg index='2' name='connection' declared_type='RKConnectionDescription*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didFailWithError:'>
<arg index='0' name='operation' declared_type='RKMappingOperation*' type='@'/>
<arg index='1' name='error' declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didFindValue:forKeyPath:mapping:'>
<arg index='0' name='operation' declared_type='RKMappingOperation*' type='@'/>
<arg index='1' name='value' declared_type='id' type='@'/>
<arg index='2' name='keyPath' declared_type='NSString*' type='@'/>
<arg index='3' name='propertyMapping' declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didNotFindValueForKeyPath:mapping:'>
<arg index='0' name='operation' declared_type='RKMappingOperation*' type='@'/>
<arg index='1' name='keyPath' declared_type='NSString*' type='@'/>
<arg index='2' name='propertyMapping' declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didNotSetUnchangedValue:forKeyPath:usingMapping:'>
<arg index='0' name='operation' declared_type='RKMappingOperation*' type='@'/>
<arg index='1' name='value' declared_type='id' type='@'/>
<arg index='2' name='keyPath' declared_type='NSString*' type='@'/>
<arg index='3' name='propertyMapping' declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didSelectObjectMapping:forDynamicMapping:'>
<arg index='0' name='operation' declared_type='RKMappingOperation*' type='@'/>
<arg index='1' name='objectMapping' declared_type='RKObjectMapping*' type='@'/>
<arg index='2' name='dynamicMapping' declared_type='RKDynamicMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didSetValue:forKeyPath:usingMapping:'>
<arg index='0' name='operation' declared_type='RKMappingOperation*' type='@'/>
<arg index='1' name='value' declared_type='id' type='@'/>
<arg index='2' name='keyPath' declared_type='NSString*' type='@'/>
<arg index='3' name='propertyMapping' declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:targetObjectForRepresentation:withMapping:inRelationship:'>
<arg index='0' name='mappingOperation' declared_type='RKMappingOperation*' type='@'/>
<arg index='1' name='representation' declared_type='NSDictionary*' type='@'/>
<arg index='2' name='mapping' declared_type='RKObjectMapping*' type='@'/>
<arg index='3' name='relationshipMapping' declared_type='RKRelationshipMapping*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectFromData:error:' class_method='true'>
<arg index='0' name='data' declared_type='NSData*' type='@'/>
<arg index='1' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='throttleBandwidthWithPacketSize:delay:'>
<arg index='0' name='numberOfBytes' declared_type='NSUInteger' type='I'/>
<arg index='1' name='delay' declared_type='NSTimeInterval' type='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NVUIGradientButton'>
<method selector='borderColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='borderWidth'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='cornerRadius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='disabledText'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='highlightedBorderColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='highlightedText'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='highlightedTextColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='highlightedTextShadowColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='highlightedTintColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='initWithFrame:cornerRadius:borderWidth:andText:'>
<arg index='0' name='frame' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='1' name='cornerRadius' declared_type='CGFloat' type='f'/>
<arg index='2' name='borderWidth' declared_type='CGFloat' type='f'/>
<arg index='3' name='text' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFrame:style:'>
<arg index='0' name='frame' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='1' name='style' declared_type='NVUIGradientButtonStyle' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFrame:style:cornerRadius:borderWidth:andText:'>
<arg index='0' name='frame' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='1' name='style' declared_type='NVUIGradientButtonStyle' type='I'/>
<arg index='2' name='cornerRadius' declared_type='CGFloat' type='f'/>
<arg index='3' name='borderWidth' declared_type='CGFloat' type='f'/>
<arg index='4' name='text' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isGradientEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='leftAccessoryImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='leftHighlightedAccessoryImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='rightAccessoryImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='rightHighlightedAccessoryImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='setBorderColor:'>
<arg index='0' name='borderColor' declared_type='UIColor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBorderColor:forState:'>
<arg index='0' name='borderColor' declared_type='UIColor*' type='@'/>
<arg index='1' name='state' declared_type='UIControlState' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBorderWidth:'>
<arg index='0' name='borderWidth' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCornerRadius:'>
<arg index='0' name='cornerRadius' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisabledText:'>
<arg index='0' name='disabledText' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGradientEnabled:'>
<arg index='0' name='gradientEnabled' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightedBorderColor:'>
<arg index='0' name='highlightedBorderColor' declared_type='UIColor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightedText:'>
<arg index='0' name='highlightedText' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightedTextColor:'>
<arg index='0' name='highlightedTextColor' declared_type='UIColor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightedTextShadowColor:'>
<arg index='0' name='highlightedTextShadowColor' declared_type='UIColor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightedTintColor:'>
<arg index='0' name='highlightedTintColor' declared_type='UIColor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeftAccessoryImage:'>
<arg index='0' name='leftAccessoryImage' declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeftAccessoryImage:forState:'>
<arg index='0' name='leftAccessoryImage' declared_type='UIImage*' type='@'/>
<arg index='1' name='state' declared_type='UIControlState' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeftHighlightedAccessoryImage:'>
<arg index='0' name='leftHighlightedAccessoryImage' declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightAccessoryImage:'>
<arg index='0' name='rightAccessoryImage' declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightAccessoryImage:forState:'>
<arg index='0' name='rightAccessoryImage' declared_type='UIImage*' type='@'/>
<arg index='1' name='state' declared_type='UIControlState' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightHighlightedAccessoryImage:'>
<arg index='0' name='rightHighlightedAccessoryImage' declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyle:'>
<arg index='0' name='style' declared_type='NVUIGradientButtonStyle' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setText:'>
<arg index='0' name='text' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setText:forState:'>
<arg index='0' name='text' declared_type='NSString*' type='@'/>
<arg index='1' name='state' declared_type='UIControlState' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextColor:'>
<arg index='0' name='textColor' declared_type='UIColor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextColor:forState:'>
<arg index='0' name='textColor' declared_type='UIColor*' type='@'/>
<arg index='1' name='state' declared_type='UIControlState' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextShadowColor:'>
<arg index='0' name='textShadowColor' declared_type='UIColor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextShadowColor:forState:'>
<arg index='0' name='textShadowColor' declared_type='UIColor*' type='@'/>
<arg index='1' name='state' declared_type='UIControlState' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTintColor:'>
<arg index='0' name='tintColor' declared_type='UIColor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTintColor:forState:'>
<arg index='0' name='tintColor' declared_type='UIColor*' type='@'/>
<arg index='1' name='state' declared_type='UIControlState' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleLabel:'>
<arg index='0' name='titleLabel' declared_type='UILabel*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='style'>
<retval declared_type='NVUIGradientButtonStyle' type='I'/>
</method>
<method selector='text'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='textColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='textShadowColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='tintColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='titleLabel'>
<retval declared_type='UILabel*' type='@'/>
</method>
</class>
<class name='RKAttributeMapping'>
<method selector='attributeMappingFromKeyPath:toKeyPath:' class_method='true'>
<arg index='0' name='sourceKeyPath' declared_type='NSString*' type='@'/>
<arg index='1' name='destinationKeyPath' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKConnectionDescription'>
<method selector='attributes'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='destinationPredicate'>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method selector='includesSubentities'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithRelationship:attributes:'>
<arg index='0' name='relationship' declared_type='NSRelationshipDescription*' type='@'/>
<arg index='1' name='sourceToDestinationEntityAttributes' declared_type='NSDictionary*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRelationship:keyPath:'>
<arg index='0' name='relationship' declared_type='NSRelationshipDescription*' type='@'/>
<arg index='1' name='keyPath' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isForeignKeyConnection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isKeyPathConnection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='relationship'>
<retval declared_type='NSRelationshipDescription*' type='@'/>
</method>
<method selector='setDestinationPredicate:'>
<arg index='0' name='destinationPredicate' declared_type='NSPredicate*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludesSubentities:'>
<arg index='0' name='includesSubentities' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRelationship:'>
<arg index='0' name='relationship' declared_type='NSRelationshipDescription*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourcePredicate:'>
<arg index='0' name='sourcePredicate' declared_type='NSPredicate*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourcePredicate'>
<retval declared_type='NSPredicate*' type='@'/>
</method>
</class>
<class name='RKDateToStringValueTransformer'>
<method selector='dateToStringFormatter'>
<retval declared_type='NSFormatter*' type='@'/>
</method>
<method selector='initWithDateToStringFormatter:stringToDateFormatters:'>
<arg index='0' name='dateToStringFormatter' declared_type='NSFormatter*' type='@'/>
<arg index='1' name='stringToDateFormatters' declared_type='NSArray*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDateToStringFormatter:'>
<arg index='0' name='dateToStringFormatter' declared_type='NSFormatter*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStringToDateFormatters:'>
<arg index='0' name='stringToDateFormatters' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringToDateFormatters'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='RKDotNetDateFormatter'>
<method selector='dateFromString:'>
<arg index='0' name='string' declared_type='NSString*' type='@'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dotNetDateFormatterWithTimeZone:' class_method='true'>
<arg index='0' name='timeZone' declared_type='NSTimeZone*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='stringFromDate:'>
<arg index='0' name='date' declared_type='NSDate*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='RKDynamicMapping'>
<method selector='addMatcher:'>
<arg index='0' name='matcher' declared_type='RKObjectMappingMatcher*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='matchers'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='objectMappingForRepresentation:'>
<arg index='0' name='representation' declared_type='id' type='@'/>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='objectMappings'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removeMatcher:'>
<arg index='0' name='matcher' declared_type='RKObjectMappingMatcher*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMatchers:'>
<arg index='0' name='matchers' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectMappingForRepresentationBlock:'>
<arg index='0' name='block' function_pointer='true' declared_type='RKObjectMapping *(^)(id)' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='RKObjectMapping*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKEntityByAttributeCache'>
<method selector='addObject:'>
<arg index='0' name='object' declared_type='NSManagedObject*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='attributes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='containsObject:'>
<arg index='0' name='object' declared_type='NSManagedObject*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='containsObjectWithAttributeValues:'>
<arg index='0' name='attributeValues' declared_type='NSDictionary*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='countOfAttributeValues'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='countWithAttributeValues:'>
<arg index='0' name='attributeValues' declared_type='NSDictionary*' type='@'/>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='entity'>
<retval declared_type='NSEntityDescription*' type='@'/>
</method>
<method selector='flush'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithEntity:attributes:managedObjectContext:'>
<arg index='0' name='entity' declared_type='NSEntityDescription*' type='@'/>
<arg index='1' name='attributeNames' declared_type='NSArray*' type='@'/>
<arg index='2' name='context' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='load'>
<retval declared_type='void' type='v'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='monitorsContextForChanges'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectWithAttributeValues:inContext:'>
<arg index='0' name='attributeValues' declared_type='NSDictionary*' type='@'/>
<arg index='1' name='context' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='NSManagedObject*' type='@'/>
</method>
<method selector='objectsWithAttributeValues:inContext:'>
<arg index='0' name='attributeValues' declared_type='NSDictionary*' type='@'/>
<arg index='1' name='context' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='removeObject:'>
<arg index='0' name='object' declared_type='NSManagedObject*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMonitorsContextForChanges:'>
<arg index='0' name='monitorsContextForChanges' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKEntityCache'>
<method selector='addObject:'>
<arg index='0' name='object' declared_type='NSManagedObject*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='attributeCacheForEntity:attributes:'>
<arg index='0' name='entity' declared_type='NSEntityDescription*' type='@'/>
<arg index='1' name='attributeNames' declared_type='NSArray*' type='@'/>
<retval declared_type='RKEntityByAttributeCache*' type='@'/>
</method>
<method selector='attributeCachesForEntity:'>
<arg index='0' name='entity' declared_type='NSEntityDescription*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='cacheObjectsForEntity:byAttributes:'>
<arg index='0' name='entity' declared_type='NSEntityDescription*' type='@'/>
<arg index='1' name='attributeNames' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='flush'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithManagedObjectContext:'>
<arg index='0' name='context' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEntity:cachedByAttributes:'>
<arg index='0' name='entity' declared_type='NSEntityDescription*' type='@'/>
<arg index='1' name='attributeNames' declared_type='NSArray*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='objectForEntity:withAttributeValues:inContext:'>
<arg index='0' name='entity' declared_type='NSEntityDescription*' type='@'/>
<arg index='1' name='attributeValues' declared_type='NSDictionary*' type='@'/>
<arg index='2' name='context' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='NSManagedObject*' type='@'/>
</method>
<method selector='objectsForEntity:withAttributeValues:inContext:'>
<arg index='0' name='entity' declared_type='NSEntityDescription*' type='@'/>
<arg index='1' name='attributeValues' declared_type='NSDictionary*' type='@'/>
<arg index='2' name='context' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='removeObject:'>
<arg index='0' name='object' declared_type='NSManagedObject*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg index='0' name='managedObjectContext' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKEntityMapping'>
<method selector='addConnection:'>
<arg index='0' name='connection' declared_type='RKConnectionDescription*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addConnectionForRelationship:connectedBy:'>
<arg index='0' name='relationshipOrName' declared_type='id' type='@'/>
<arg index='1' name='connectionSpecifier' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='connectionForRelationship:'>
<arg index='0' name='relationshipOrName' declared_type='id' type='@'/>
<retval declared_type='RKConnectionDescription*' type='@'/>
</method>
<method selector='connections'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='defaultValueForAttribute:'>
<arg index='0' name='attributeName' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='deletionPredicate'>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method selector='entity'>
<retval declared_type='NSEntityDescription*' type='@'/>
</method>
<method selector='identificationAttributes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='identificationPredicate'>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method selector='initWithEntity:'>
<arg index='0' name='entity' declared_type='NSEntityDescription*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEntityIdentificationInferenceEnabled' class_method='true'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mappingForEntityForName:inManagedObjectStore:' class_method='true'>
<arg index='0' name='entityName' declared_type='NSString*' type='@'/>
<arg index='1' name='managedObjectStore' declared_type='RKManagedObjectStore*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='removeConnection:'>
<arg index='0' name='connection' declared_type='RKConnectionDescription*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDeletionPredicate:'>
<arg index='0' name='deletionPredicate' declared_type='NSPredicate*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEntity:'>
<arg index='0' name='entity' declared_type='NSEntityDescription*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEntityIdentificationInferenceEnabled:' class_method='true'>
<arg index='0' name='enabled' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIdentificationAttributes:'>
<arg index='0' name='identificationAttributes' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIdentificationPredicate:'>
<arg index='0' name='identificationPredicate' declared_type='NSPredicate*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKErrorMessage'>
<method selector='errorMessage'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setErrorMessage:'>
<arg index='0' name='errorMessage' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg index='0' name='userInfo' declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='RKHTTPRequestOperation'>
<method selector='acceptableContentTypes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='acceptableStatusCodes'>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
<method selector='setAcceptableContentTypes:'>
<arg index='0' name='acceptableContentTypes' declared_type='NSSet*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAcceptableStatusCodes:'>
<arg index='0' name='acceptableStatusCodes' declared_type='NSIndexSet*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='wasNotModified'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='RKISO8601DateFormatter'>
<method selector='dateComponentsFromString:'>
<arg index='0' name='string' declared_type='NSString*' type='@'/>
<retval declared_type='NSDateComponents*' type='@'/>
</method>
<method selector='dateComponentsFromString:timeZone:'>
<arg index='0' name='string' declared_type='NSString*' type='@'/>
<arg index='1' name='outTimeZone' declared_type='NSTimeZone**' type_modifier='o' type='^@'/>
<retval declared_type='NSDateComponents*' type='@'/>
</method>
<method selector='dateComponentsFromString:timeZone:range:'>
<arg index='0' name='string' declared_type='NSString*' type='@'/>
<arg index='1' name='outTimeZone' declared_type='NSTimeZone**' type_modifier='o' type='^@'/>
<arg index='2' name='outRange' declared_type='NSRange*' type_modifier='o' type='^{_NSRange=II}'/>
<retval declared_type='NSDateComponents*' type='@'/>
</method>
<method selector='dateFromString:'>
<arg index='0' name='string' declared_type='NSString*' type='@'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateFromString:timeZone:'>
<arg index='0' name='string' declared_type='NSString*' type='@'/>
<arg index='1' name='outTimeZone' declared_type='NSTimeZone**' type_modifier='o' type='^@'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateFromString:timeZone:range:'>
<arg index='0' name='string' declared_type='NSString*' type='@'/>
<arg index='1' name='outTimeZone' declared_type='NSTimeZone**' type_modifier='o' type='^@'/>
<arg index='2' name='outRange' declared_type='NSRange*' type_modifier='o' type='^{_NSRange=II}'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='defaultTimeZone'>
<retval declared_type='NSTimeZone*' type='@'/>
</method>
<method selector='format'>
<retval declared_type='RKISO8601DateFormat' type='I'/>
</method>
<method selector='includeTime'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='parsesStrictly'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='purgeGlobalCaches' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultTimeZone:'>
<arg index='0' name='defaultTimeZone' declared_type='NSTimeZone*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFormat:'>
<arg index='0' name='format' declared_type='RKISO8601DateFormat' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeTime:'>
<arg index='0' name='includeTime' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParsesStrictly:'>
<arg index='0' name='parsesStrictly' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeSeparator:'>
<arg index='0' name='timeSeparator' declared_type='unichar' type='S'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringFromDate:'>
<arg index='0' name='date' declared_type='NSDate*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringFromDate:timeZone:'>
<arg index='0' name='date' declared_type='NSDate*' type='@'/>
<arg index='1' name='timeZone' declared_type='NSTimeZone*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='timeSeparator'>
<retval declared_type='unichar' type='S'/>
</method>
</class>
<class name='RKInMemoryManagedObjectCache'>
<method selector='initWithManagedObjectContext:'>
<arg index='0' name='managedObjectContext' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKMIMETypeSerialization'>
<method selector='dataFromObject:MIMEType:error:' class_method='true'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='MIMEType' declared_type='NSString*' type='@'/>
<arg index='2' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='objectFromData:MIMEType:error:' class_method='true'>
<arg index='0' name='data' declared_type='NSData*' type='@'/>
<arg index='1' name='MIMEType' declared_type='NSString*' type='@'/>
<arg index='2' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='registerClass:forMIMEType:' class_method='true'>
<arg index='0' name='serializationClass' declared_type='Class*' type='#'/>
<arg index='1' name='MIMETypeStringOrRegularExpression' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registeredMIMETypes' class_method='true'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='serializationClassForMIMEType:' class_method='true'>
<arg index='0' name='MIMEType' declared_type='NSString*' type='@'/>
<retval declared_type='Class*' type='#'/>
</method>
<method selector='unregisterClass:' class_method='true'>
<arg index='0' name='serializationClass' declared_type='Class*' type='#'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKManagedObjectImporter'>
<method selector='finishImporting:'>
<arg index='0' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='importObjectsFromItemAtPath:withMapping:keyPath:error:'>
<arg index='0' name='path' declared_type='NSString*' type='@'/>
<arg index='1' name='mapping' declared_type='RKMapping*' type='@'/>
<arg index='2' name='keyPath' declared_type='NSString*' type='@'/>
<arg index='3' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='initWithManagedObjectModel:storePath:'>
<arg index='0' name='managedObjectModel' declared_type='NSManagedObjectModel*' type='@'/>
<arg index='1' name='storePath' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPersistentStore:'>
<arg index='0' name='persistentStore' declared_type='NSPersistentStore*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='logSeedingInfo'>
<retval declared_type='void' type='v'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='managedObjectModel'>
<retval declared_type='NSManagedObjectModel*' type='@'/>
</method>
<method selector='persistentStore'>
<retval declared_type='NSPersistentStore*' type='@'/>
</method>
<method selector='resetsStoreBeforeImporting'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setManagedObjectContext:'>
<arg index='0' name='managedObjectContext' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectModel:'>
<arg index='0' name='managedObjectModel' declared_type='NSManagedObjectModel*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPersistentStore:'>
<arg index='0' name='persistentStore' declared_type='NSPersistentStore*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResetsStoreBeforeImporting:'>
<arg index='0' name='resetsStoreBeforeImporting' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStorePath:'>
<arg index='0' name='storePath' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='storePath'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='RKManagedObjectMappingOperationDataSource'>
<method selector='initWithManagedObjectContext:cache:'>
<arg index='0' name='managedObjectContext' declared_type='NSManagedObjectContext*' type='@'/>
<arg index='1' name='managedObjectCache' declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='parentOperation'>
<retval declared_type='NSOperation*' type='@'/>
</method>
<method selector='setManagedObjectCache:'>
<arg index='0' name='managedObjectCache' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg index='0' name='managedObjectContext' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOperationQueue:'>
<arg index='0' name='operationQueue' declared_type='NSOperationQueue*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParentOperation:'>
<arg index='0' name='parentOperation' declared_type='NSOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKManagedObjectRequestOperation'>
<method selector='deletesOrphanedObjects'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fetchRequestBlocks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='savesToPersistentStore'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDeletesOrphanedObjects:'>
<arg index='0' name='deletesOrphanedObjects' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFetchRequestBlocks:'>
<arg index='0' name='fetchRequestBlocks' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectCache:'>
<arg index='0' name='managedObjectCache' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg index='0' name='managedObjectContext' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSavesToPersistentStore:'>
<arg index='0' name='savesToPersistentStore' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKManagedObjectResponseMapperOperation'>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='setManagedObjectCache:'>
<arg index='0' name='managedObjectCache' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg index='0' name='managedObjectContext' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetObjectID:'>
<arg index='0' name='targetObjectID' declared_type='NSManagedObjectID*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='targetObjectID'>
<retval declared_type='NSManagedObjectID*' type='@'/>
</method>
</class>
<class name='RKManagedObjectStore'>
<method selector='addInMemoryPersistentStore:'>
<arg index='0' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='NSPersistentStore*' type='@'/>
</method>
<method selector='addSQLitePersistentStoreAtPath:fromSeedDatabaseAtPath:withConfiguration:options:error:'>
<arg index='0' name='storePath' declared_type='NSString*' type='@'/>
<arg index='1' name='seedPath' declared_type='NSString*' type='@'/>
<arg index='2' name='nilOrConfigurationName' declared_type='NSString*' type='@'/>
<arg index='3' name='nilOrOptions' declared_type='NSDictionary*' type='@'/>
<arg index='4' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='NSPersistentStore*' type='@'/>
</method>
<method selector='createManagedObjectContexts'>
<retval declared_type='void' type='v'/>
</method>
<method selector='createPersistentStoreCoordinator'>
<retval declared_type='void' type='v'/>
</method>
<method selector='defaultStore' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithManagedObjectModel:'>
<arg index='0' name='managedObjectModel' declared_type='NSManagedObjectModel*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPersistentStoreCoordinator:'>
<arg index='0' name='persistentStoreCoordinator' declared_type='NSPersistentStoreCoordinator*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mainQueueManagedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectModel'>
<retval declared_type='NSManagedObjectModel*' type='@'/>
</method>
<method selector='migratePersistentStoreOfType:atURL:toModelAtURL:error:configuringModelsWithBlock:' class_method='true'>
<arg index='0' name='storeType' declared_type='NSString*' type='@'/>
<arg index='1' name='storeURL' declared_type='NSURL*' type='@'/>
<arg index='2' name='destinationModelURL' declared_type='NSURL*' type='@'/>
<arg index='3' name='error' declared_type='NSError**' type='^@'/>
<arg index='4' name='block' function_pointer='true' declared_type='void (^)(NSManagedObjectModel *, NSURL *)' type='@?'>
<arg declared_type='NSManagedObjectModel*' type='@'/>
<arg declared_type='NSURL*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='newChildManagedObjectContextWithConcurrencyType:'>
<arg index='0' name='concurrencyType' declared_type='NSManagedObjectContextConcurrencyType' type='I'/>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='persistentStoreCoordinator'>
<retval declared_type='NSPersistentStoreCoordinator*' type='@'/>
</method>
<method selector='persistentStoreManagedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='resetPersistentStores:'>
<arg index='0' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDefaultStore:' class_method='true'>
<arg index='0' name='managedObjectStore' declared_type='RKManagedObjectStore*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMainQueueManagedObjectContext:'>
<arg index='0' name='mainQueueManagedObjectContext' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectCache:'>
<arg index='0' name='managedObjectCache' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectModel:'>
<arg index='0' name='managedObjectModel' declared_type='NSManagedObjectModel*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPersistentStoreCoordinator:'>
<arg index='0' name='persistentStoreCoordinator' declared_type='NSPersistentStoreCoordinator*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPersistentStoreManagedObjectContext:'>
<arg index='0' name='persistentStoreManagedObjectContext' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKMapperOperation'>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='execute:'>
<arg index='0' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithRepresentation:mappingsDictionary:'>
<arg index='0' name='representation' declared_type='id' type='@'/>
<arg index='1' name='mappingsDictionary' declared_type='NSDictionary*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mapRepresentation:atKeyPath:usingMapping:'>
<arg index='0' name='mappableObject' declared_type='id' type='@'/>
<arg index='1' name='keyPath' declared_type='NSString*' type='@'/>
<arg index='2' name='mapping' declared_type='RKMapping*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mapRepresentation:toObject:atKeyPath:usingMapping:metadata:'>
<arg index='0' name='mappableObject' declared_type='id' type='@'/>
<arg index='1' name='destinationObject' declared_type='id' type='@'/>
<arg index='2' name='keyPath' declared_type='NSString*' type='@'/>
<arg index='3' name='mapping' declared_type='RKMapping*' type='@'/>
<arg index='4' name='metadata' declared_type='NSDictionary*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mapRepresentations:atKeyPath:usingMapping:'>
<arg index='0' name='mappableObjects' declared_type='NSArray*' type='@'/>
<arg index='1' name='keyPath' declared_type='NSString*' type='@'/>
<arg index='2' name='mapping' declared_type='RKMapping*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='mappingInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='mappingOperationDataSource'>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingResult'>
<retval declared_type='RKMappingResult*' type='@'/>
</method>
<method selector='mappingsDictionary'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='metadata'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='objectForRepresentation:withMapping:'>
<arg index='0' name='representation' declared_type='id' type='@'/>
<arg index='1' name='mapping' declared_type='RKMapping*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='representation'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDelegate:'>
<arg index='0' name='delegate' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg index='0' name='error' declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingOperationDataSource:'>
<arg index='0' name='mappingOperationDataSource' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingResult:'>
<arg index='0' name='mappingResult' declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingsDictionary:'>
<arg index='0' name='mappingsDictionary' declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMetadata:'>
<arg index='0' name='metadata' declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRepresentation:'>
<arg index='0' name='representation' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetObject:'>
<arg index='0' name='targetObject' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='targetObject'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKMapping'>
<method selector='forceCollectionMapping'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEqualToMapping:'>
<arg index='0' name='otherMapping' declared_type='RKMapping*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setForceCollectionMapping:'>
<arg index='0' name='forceCollectionMapping' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKMappingOperation'>
<method selector='dataSource'>
<retval declared_type='id' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='destinationObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='initWithSourceObject:destinationObject:mapping:'>
<arg index='0' name='sourceObject' declared_type='id' type='@'/>
<arg index='1' name='destinationObject' declared_type='id' type='@'/>
<arg index='2' name='objectOrDynamicMapping' declared_type='RKMapping*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mapping'>
<retval declared_type='RKMapping*' type='@'/>
</method>
<method selector='mappingInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='metadata'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='objectMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='performMapping:'>
<arg index='0' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDataSource:'>
<arg index='0' name='dataSource' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg index='0' name='delegate' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDestinationObject:'>
<arg index='0' name='destinationObject' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg index='0' name='error' declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapping:'>
<arg index='0' name='mapping' declared_type='RKMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMetadata:'>
<arg index='0' name='metadata' declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectMapping:'>
<arg index='0' name='objectMapping' declared_type='RKObjectMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceObject:'>
<arg index='0' name='sourceObject' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceObject'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKMappingResult'>
<method selector='array'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='dictionary'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='firstObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDictionary:'>
<arg index='0' name='dictionary' declared_type='NSDictionary*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='set'>
<retval declared_type='NSSet*' type='@'/>
</method>
</class>
<class name='RKObjectManager'>
<method selector='HTTPClient'>
<retval declared_type='AFHTTPClient*' type='@'/>
</method>
<method selector='addFetchRequestBlock:'>
<arg index='0' name='block' function_pointer='true' declared_type='RKFetchRequestBlock' type='@?'>
<arg declared_type='NSURL*' type='@'/>
<retval declared_type='NSFetchRequest*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRequestDescriptor:'>
<arg index='0' name='requestDescriptor' declared_type='RKRequestDescriptor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRequestDescriptorsFromArray:'>
<arg index='0' name='requestDescriptors' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addResponseDescriptor:'>
<arg index='0' name='responseDescriptor' declared_type='RKResponseDescriptor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addResponseDescriptorsFromArray:'>
<arg index='0' name='responseDescriptors' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appropriateObjectRequestOperationWithObject:method:path:parameters:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='method' declared_type='RKRequestMethod' type='i'/>
<arg index='2' name='path' declared_type='NSString*' type='@'/>
<arg index='3' name='parameters' declared_type='NSDictionary*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='cancelAllObjectRequestOperationsWithMethod:matchingPathPattern:'>
<arg index='0' name='method' declared_type='RKRequestMethod' type='i'/>
<arg index='1' name='pathPattern' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='defaultHeaders'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='deleteObject:path:parameters:success:failure:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='path' declared_type='NSString*' type='@'/>
<arg index='2' name='parameters' declared_type='NSDictionary*' type='@'/>
<arg index='3' name='success' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='4' name='failure' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfObjectRequestOperations:progress:completion:'>
<arg index='0' name='operations' declared_type='NSArray*' type='@'/>
<arg index='1' name='progress' function_pointer='true' declared_type='void (^)(NSUInteger, NSUInteger)' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='2' name='completion' function_pointer='true' declared_type='void (^)(NSArray *)' type='@?'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfObjectRequestOperationsWithRoute:objects:progress:completion:'>
<arg index='0' name='route' declared_type='RKRoute*' type='@'/>
<arg index='1' name='objects' declared_type='NSArray*' type='@'/>
<arg index='2' name='progress' function_pointer='true' declared_type='void (^)(NSUInteger, NSUInteger)' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' name='completion' function_pointer='true' declared_type='void (^)(NSArray *)' type='@?'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueObjectRequestOperation:'>
<arg index='0' name='objectRequestOperation' declared_type='RKObjectRequestOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fetchRequestBlocks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='getObject:path:parameters:success:failure:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='path' declared_type='NSString*' type='@'/>
<arg index='2' name='parameters' declared_type='NSDictionary*' type='@'/>
<arg index='3' name='success' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='4' name='failure' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getObjectsAtPath:parameters:success:failure:'>
<arg index='0' name='path' declared_type='NSString*' type='@'/>
<arg index='1' name='parameters' declared_type='NSDictionary*' type='@'/>
<arg index='2' name='success' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' name='failure' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getObjectsAtPathForRelationship:ofObject:parameters:success:failure:'>
<arg index='0' name='relationshipName' declared_type='NSString*' type='@'/>
<arg index='1' name='object' declared_type='id' type='@'/>
<arg index='2' name='parameters' declared_type='NSDictionary*' type='@'/>
<arg index='3' name='success' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='4' name='failure' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getObjectsAtPathForRouteNamed:object:parameters:success:failure:'>
<arg index='0' name='routeName' declared_type='NSString*' type='@'/>
<arg index='1' name='object' declared_type='id' type='@'/>
<arg index='2' name='parameters' declared_type='NSDictionary*' type='@'/>
<arg index='3' name='success' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='4' name='failure' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithHTTPClient:'>
<arg index='0' name='client' declared_type='AFHTTPClient*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectRequestOperationWithRequest:managedObjectContext:success:failure:'>
<arg index='0' name='request' declared_type='NSURLRequest*' type='@'/>
<arg index='1' name='managedObjectContext' declared_type='NSManagedObjectContext*' type='@'/>
<arg index='2' name='success' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' name='failure' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='RKManagedObjectRequestOperation*' type='@'/>
</method>
<method selector='managedObjectStore'>
<retval declared_type='RKManagedObjectStore*' type='@'/>
</method>
<method selector='managerWithBaseURL:' class_method='true'>
<arg index='0' name='baseURL' declared_type='NSURL*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='multipartFormRequestWithObject:method:path:parameters:constructingBodyWithBlock:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='method' declared_type='RKRequestMethod' type='i'/>
<arg index='2' name='path' declared_type='NSString*' type='@'/>
<arg index='3' name='parameters' declared_type='NSDictionary*' type='@'/>
<arg index='4' name='block' function_pointer='true' declared_type='void (^)(id)' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='objectRequestOperationWithRequest:success:failure:'>
<arg index='0' name='request' declared_type='NSURLRequest*' type='@'/>
<arg index='1' name='success' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='2' name='failure' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='RKObjectRequestOperation*' type='@'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='paginationMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='paginatorWithPathPattern:'>
<arg index='0' name='pathPattern' declared_type='NSString*' type='@'/>
<retval declared_type='RKPaginator*' type='@'/>
</method>
<method selector='patchObject:path:parameters:success:failure:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='path' declared_type='NSString*' type='@'/>
<arg index='2' name='parameters' declared_type='NSDictionary*' type='@'/>
<arg index='3' name='success' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='4' name='failure' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='postObject:path:parameters:success:failure:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='path' declared_type='NSString*' type='@'/>
<arg index='2' name='parameters' declared_type='NSDictionary*' type='@'/>
<arg index='3' name='success' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='4' name='failure' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='putObject:path:parameters:success:failure:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='path' declared_type='NSString*' type='@'/>
<arg index='2' name='parameters' declared_type='NSDictionary*' type='@'/>
<arg index='3' name='success' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='4' name='failure' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerRequestOperationClass:'>
<arg index='0' name='operationClass' declared_type='Class' type='#'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeRequestDescriptor:'>
<arg index='0' name='requestDescriptor' declared_type='RKRequestDescriptor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeResponseDescriptor:'>
<arg index='0' name='responseDescriptor' declared_type='RKResponseDescriptor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='requestSerializationMIMEType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='requestWithObject:method:path:parameters:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='method' declared_type='RKRequestMethod' type='i'/>
<arg index='2' name='path' declared_type='NSString*' type='@'/>
<arg index='3' name='parameters' declared_type='NSDictionary*' type='@'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='requestWithPathForRelationship:ofObject:method:parameters:'>
<arg index='0' name='relationship' declared_type='NSString*' type='@'/>
<arg index='1' name='object' declared_type='id' type='@'/>
<arg index='2' name='method' declared_type='RKRequestMethod' type='i'/>
<arg index='3' name='parameters' declared_type='NSDictionary*' type='@'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='requestWithPathForRouteNamed:object:parameters:'>
<arg index='0' name='routeName' declared_type='NSString*' type='@'/>
<arg index='1' name='object' declared_type='id' type='@'/>
<arg index='2' name='parameters' declared_type='NSDictionary*' type='@'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='responseDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='router'>
<retval declared_type='RKRouter*' type='@'/>
</method>
<method selector='setAcceptHeaderWithMIMEType:'>
<arg index='0' name='MIMEType' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPClient:'>
<arg index='0' name='HTTPClient' declared_type='AFHTTPClient*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectStore:'>
<arg index='0' name='managedObjectStore' declared_type='RKManagedObjectStore*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOperationQueue:'>
<arg index='0' name='operationQueue' declared_type='NSOperationQueue*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPaginationMapping:'>
<arg index='0' name='paginationMapping' declared_type='RKObjectMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequestSerializationMIMEType:'>
<arg index='0' name='requestSerializationMIMEType' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRouter:'>
<arg index='0' name='router' declared_type='RKRouter*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSharedManager:' class_method='true'>
<arg index='0' name='manager' declared_type='RKObjectManager*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedManager' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='unregisterRequestOperationClass:'>
<arg index='0' name='operationClass' declared_type='Class' type='#'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKObjectMapping'>
<method selector='addAttributeMappingFromKeyOfRepresentationToAttribute:'>
<arg index='0' name='attributeName' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAttributeMappingToKeyOfRepresentationFromAttribute:'>
<arg index='0' name='attributeName' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAttributeMappingsFromArray:'>
<arg index='0' name='arrayOfAttributeNamesOrMappings' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAttributeMappingsFromDictionary:'>
<arg index='0' name='keyPathToAttributeNames' declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addDefaultDateFormatter:' class_method='true'>
<arg index='0' name='dateFormatter' declared_type='NSFormatter*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addDefaultDateFormatterForString:inTimeZone:' class_method='true'>
<arg index='0' name='dateFormatString' declared_type='NSString*' type='@'/>
<arg index='1' name='nilOrTimeZone' declared_type='NSTimeZone*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addPropertyMapping:'>
<arg index='0' name='propertyMapping' declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addPropertyMappingsFromArray:'>
<arg index='0' name='arrayOfPropertyMappings' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRelationshipMappingWithSourceKeyPath:mapping:'>
<arg index='0' name='sourceKeyPath' declared_type='NSString*' type='@'/>
<arg index='1' name='mapping' declared_type='RKMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='attributeMappings'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='classForKeyPath:'>
<arg index='0' name='keyPath' declared_type='NSString*' type='@'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='classForProperty:'>
<arg index='0' name='propertyName' declared_type='NSString*' type='@'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='dateFormatters'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='defaultDateFormatters' class_method='true'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='defaultValueForAttribute:'>
<arg index='0' name='attributeName' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithClass:'>
<arg index='0' name='objectClass' declared_type='Class' type='#'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='inverseMapping'>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingForClass:' class_method='true'>
<arg index='0' name='objectClass' declared_type='Class' type='#'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingForDestinationKeyPath:'>
<arg index='0' name='destinationKeyPath' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingForSourceKeyPath:'>
<arg index='0' name='sourceKeyPath' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='performKeyValueValidation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='preferredDateFormatter' class_method='true'>
<retval declared_type='NSFormatter*' type='@'/>
</method>
<method selector='preferredDateFormatter'>
<retval declared_type='NSFormatter*' type='@'/>
</method>
<method selector='propertyMappings'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='propertyMappingsByDestinationKeyPath'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='propertyMappingsBySourceKeyPath'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='relationshipMappings'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removePropertyMapping:'>
<arg index='0' name='propertyMapping' declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestMapping' class_method='true'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='setDateFormatters:'>
<arg index='0' name='dateFormatters' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultDateFormatters:' class_method='true'>
<arg index='0' name='dateFormatters' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultSourceToDestinationKeyTransformationBlock:' class_method='true'>
<arg index='0' name='block' function_pointer='true' declared_type='NSString *(^)(RKObjectMapping *, NSString *)' type='@?'>
<arg declared_type='RKObjectMapping*' type='@'/>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNilForMissingRelationships'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setObjectClass:'>
<arg index='0' name='objectClass' declared_type='Class' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPerformKeyValueValidation:'>
<arg index='0' name='performKeyValueValidation' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredDateFormatter:' class_method='true'>
<arg index='0' name='dateFormatter' declared_type='NSFormatter*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredDateFormatter:'>
<arg index='0' name='preferredDateFormatter' declared_type='NSFormatter*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPropertyMappings:'>
<arg index='0' name='propertyMappings' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSetDefaultValueForMissingAttributes:'>
<arg index='0' name='setDefaultValueForMissingAttributes' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSetNilForMissingRelationships:'>
<arg index='0' name='setNilForMissingRelationships' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceToDestinationKeyTransformationBlock:'>
<arg index='0' name='block' function_pointer='true' declared_type='NSString *(^)(RKObjectMapping *, NSString *)' type='@?'>
<arg declared_type='RKObjectMapping*' type='@'/>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldSetDefaultValueForMissingAttributes'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='RKObjectMappingMatcher'>
<method selector='matcherWithKeyPath:expectedValue:objectMapping:' class_method='true'>
<arg index='0' name='keyPath' declared_type='NSString*' type='@'/>
<arg index='1' name='expectedValue' declared_type='id' type='@'/>
<arg index='2' name='objectMapping' declared_type='RKObjectMapping*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='matcherWithPredicate:objectMapping:' class_method='true'>
<arg index='0' name='predicate' declared_type='NSPredicate*' type='@'/>
<arg index='1' name='objectMapping' declared_type='RKObjectMapping*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='matches:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='setObjectMapping:'>
<arg index='0' name='objectMapping' declared_type='RKObjectMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKObjectParameterization'>
<method selector='parametersWithObject:requestDescriptor:error:' class_method='true'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='requestDescriptor' declared_type='RKRequestDescriptor*' type='@'/>
<arg index='2' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='RKObjectRequestOperation'>
<method selector='HTTPRequestOperation'>
<retval declared_type='RKHTTPRequestOperation*' type='@'/>
</method>
<method selector='canProcessRequest:' class_method='true'>
<arg index='0' name='request' declared_type='NSURLRequest*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='failureCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='initWithHTTPRequestOperation:responseDescriptors:'>
<arg index='0' name='requestOperation' declared_type='RKHTTPRequestOperation*' type='@'/>
<arg index='1' name='responseDescriptors' declared_type='NSArray*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRequest:responseDescriptors:'>
<arg index='0' name='request' declared_type='NSURLRequest*' type='@'/>
<arg index='1' name='responseDescriptors' declared_type='NSArray*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingMetadata'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='mappingResult'>
<retval declared_type='RKMappingResult*' type='@'/>
</method>
<method selector='performMappingOnResponse:'>
<arg index='0' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='RKMappingResult*' type='@'/>
</method>
<method selector='responseDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='responseMappingQueue' class_method='true'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg index='0' name='success' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='1' name='failure' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg index='0' name='error' declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFailureCallbackQueue:'>
<arg index='0' name='failureCallbackQueue' declared_type='dispatch_queue_t' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPRequestOperation:'>
<arg index='0' name='HTTPRequestOperation' declared_type='RKHTTPRequestOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingMetadata:'>
<arg index='0' name='mappingMetadata' declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingResult:'>
<arg index='0' name='mappingResult' declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseDescriptors:'>
<arg index='0' name='responseDescriptors' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSuccessCallbackQueue:'>
<arg index='0' name='successCallbackQueue' declared_type='dispatch_queue_t' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetObject:'>
<arg index='0' name='targetObject' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillMapDeserializedResponseBlock:'>
<arg index='0' name='block' function_pointer='true' declared_type='id (^)(id)' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='successCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='targetObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='willFinish'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKPaginator'>
<method selector='URL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='cancel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='currentPage'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='fetchRequestBlocks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='hasNextPage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasObjectCount'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasPageCount'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasPreviousPage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithRequest:paginationMapping:responseDescriptors:'>
<arg index='0' name='request' declared_type='NSURLRequest*' type='@'/>
<arg index='1' name='paginationMapping' declared_type='RKObjectMapping*' type='@'/>
<arg index='2' name='responseDescriptors' declared_type='NSArray*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadNextPage'>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadPage:'>
<arg index='0' name='pageNumber' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadPreviousPage'>
<retval declared_type='void' type='v'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='mappingResult'>
<retval declared_type='RKMappingResult*' type='@'/>
</method>
<method selector='objectCount'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='pageCount'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='paginationMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='patternURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='perPage'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg index='0' name='success' function_pointer='true' declared_type='void (^)(RKPaginator *, NSArray *, NSUInteger)' type='@?'>
<arg declared_type='RKPaginator*' type='@'/>
<arg declared_type='NSArray*' type='@'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='1' name='failure' function_pointer='true' declared_type='void (^)(RKPaginator *, NSError *)' type='@?'>
<arg declared_type='RKPaginator*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg index='0' name='error' declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFetchRequestBlocks:'>
<arg index='0' name='fetchRequestBlocks' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPOperationClass:'>
<arg index='0' name='operationClass' declared_type='Class' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectCache:'>
<arg index='0' name='managedObjectCache' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg index='0' name='managedObjectContext' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingResult:'>
<arg index='0' name='mappingResult' declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOperationQueue:'>
<arg index='0' name='operationQueue' declared_type='NSOperationQueue*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPaginationMapping:'>
<arg index='0' name='paginationMapping' declared_type='RKObjectMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPerPage:'>
<arg index='0' name='perPage' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKPathMatcher'>
<method selector='matchesPath:tokenizeQueryStrings:parsedArguments:'>
<arg index='0' name='pathString' declared_type='NSString*' type='@'/>
<arg index='1' name='shouldTokenize' declared_type='BOOL' type='B'/>
<arg index='2' name='arguments' declared_type='NSDictionary**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='matchesPattern:tokenizeQueryStrings:parsedArguments:'>
<arg index='0' name='patternString' declared_type='NSString*' type='@'/>
<arg index='1' name='shouldTokenize' declared_type='BOOL' type='B'/>
<arg index='2' name='arguments' declared_type='NSDictionary**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pathFromObject:addingEscapes:interpolatedParameters:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='addEscapes' declared_type='BOOL' type='B'/>
<arg index='2' name='interpolatedParameters' declared_type='NSDictionary**' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='pathMatcherWithPath:' class_method='true'>
<arg index='0' name='pathString' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='pathMatcherWithPattern:' class_method='true'>
<arg index='0' name='patternString' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='queryParameters'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='RKPropertyInspector'>
<method selector='classForPropertyNamed:ofClass:isPrimitive:'>
<arg index='0' name='propertyName' declared_type='NSString*' type='@'/>
<arg index='1' name='objectClass' declared_type='Class' type='#'/>
<arg index='2' name='isPrimitive' declared_type='BOOL*' type='^B'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='classForPropertyNamed:ofEntity:'>
<arg index='0' name='propertyName' declared_type='NSString*' type='@'/>
<arg index='1' name='entity' declared_type='NSEntityDescription*' type='@'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='propertyInspectionForClass:'>
<arg index='0' name='objectClass' declared_type='Class' type='#'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='propertyInspectionForEntity:'>
<arg index='0' name='entity' declared_type='NSEntityDescription*' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='sharedInspector' class_method='true'>
<retval declared_type='RKPropertyInspector*' type='@'/>
</method>
</class>
<class name='RKPropertyMapping'>
<method selector='destinationKeyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='isEqualToMapping:'>
<arg index='0' name='otherMapping' declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='setObjectMapping:'>
<arg index='0' name='objectMapping' declared_type='RKObjectMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceKeyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='RKRelationshipConnectionOperation'>
<method selector='connectedValue'>
<retval declared_type='id' type='@'/>
</method>
<method selector='connection'>
<retval declared_type='RKConnectionDescription*' type='@'/>
</method>
<method selector='initWithManagedObject:connection:managedObjectCache:'>
<arg index='0' name='managedObject' declared_type='NSManagedObject*' type='@'/>
<arg index='1' name='connection' declared_type='RKConnectionDescription*' type='@'/>
<arg index='2' name='managedObjectCache' declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObject'>
<retval declared_type='NSManagedObject*' type='@'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setConnectedValue:'>
<arg index='0' name='connectedValue' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setConnection:'>
<arg index='0' name='connection' declared_type='RKConnectionDescription*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setConnectionBlock:'>
<arg index='0' name='block' function_pointer='true' declared_type='void (^)(RKRelationshipConnectionOperation *, id)' type='@?'>
<arg declared_type='RKRelationshipConnectionOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObject:'>
<arg index='0' name='managedObject' declared_type='NSManagedObject*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectCache:'>
<arg index='0' name='managedObjectCache' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKRelationshipMapping'>
<method selector='assignmentPolicy'>
<retval declared_type='RKAssignmentPolicy' type='i'/>
</method>
<method selector='mapping'>
<retval declared_type='RKMapping*' type='@'/>
</method>
<method selector='relationshipMappingFromKeyPath:toKeyPath:withMapping:' class_method='true'>
<arg index='0' name='sourceKeyPath' declared_type='NSString*' type='@'/>
<arg index='1' name='destinationKeyPath' declared_type='NSString*' type='@'/>
<arg index='2' name='mapping' declared_type='RKMapping*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAssignmentPolicy:'>
<arg index='0' name='assignmentPolicy' declared_type='RKAssignmentPolicy' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapping:'>
<arg index='0' name='mapping' declared_type='RKMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKRequestDescriptor'>
<method selector='mapping'>
<retval declared_type='RKMapping*' type='@'/>
</method>
<method selector='matchesObject:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='requestDescriptorWithMapping:objectClass:rootKeyPath:' class_method='true'>
<arg index='0' name='mapping' declared_type='RKMapping*' type='@'/>
<arg index='1' name='objectClass' declared_type='Class' type='#'/>
<arg index='2' name='rootKeyPath' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='rootKeyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setMapping:'>
<arg index='0' name='mapping' declared_type='RKMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectClass:'>
<arg index='0' name='objectClass' declared_type='Class' type='#'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKResponseDescriptor'>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='keyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='mapping'>
<retval declared_type='RKMapping*' type='@'/>
</method>
<method selector='matchesPath:'>
<arg index='0' name='path' declared_type='NSString*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='matchesResponse:'>
<arg index='0' name='response' declared_type='NSHTTPURLResponse*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='matchesURL:'>
<arg index='0' name='URL' declared_type='NSURL*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pathPattern'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='responseDescriptorWithMapping:pathPattern:keyPath:statusCodes:' class_method='true'>
<arg index='0' name='mapping' declared_type='RKMapping*' type='@'/>
<arg index='1' name='pathPattern' declared_type='NSString*' type='@'/>
<arg index='2' name='keyPath' declared_type='NSString*' type='@'/>
<arg index='3' name='statusCodes' declared_type='NSIndexSet*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setBaseURL:'>
<arg index='0' name='baseURL' declared_type='NSURL*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapping:'>
<arg index='0' name='mapping' declared_type='RKMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='statusCodes'>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
</class>
<class name='RKResponseMapperOperation'>
<method selector='data'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='initWithRequest:response:data:responseDescriptors:'>
<arg index='0' name='request' declared_type='NSURLRequest*' type='@'/>
<arg index='1' name='response' declared_type='NSHTTPURLResponse*' type='@'/>
<arg index='2' name='data' declared_type='NSData*' type='@'/>
<arg index='3' name='responseDescriptors' declared_type='NSArray*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mapperDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingMetadata'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='mappingResult'>
<retval declared_type='RKMappingResult*' type='@'/>
</method>
<method selector='matchingResponseDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='request'>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='response'>
<retval declared_type='NSHTTPURLResponse*' type='@'/>
</method>
<method selector='responseDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='responseMappingsDictionary'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='setData:'>
<arg index='0' name='data' declared_type='NSData*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg index='0' name='error' declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapperDelegate:'>
<arg index='0' name='mapperDelegate' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingMetadata:'>
<arg index='0' name='mappingMetadata' declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingResult:'>
<arg index='0' name='mappingResult' declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMatchingResponseDescriptors:'>
<arg index='0' name='matchingResponseDescriptors' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequest:'>
<arg index='0' name='request' declared_type='NSURLRequest*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponse:'>
<arg index='0' name='response' declared_type='NSHTTPURLResponse*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseDescriptors:'>
<arg index='0' name='responseDescriptors' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseMappingsDictionary:'>
<arg index='0' name='responseMappingsDictionary' declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetObject:'>
<arg index='0' name='targetObject' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTreatsEmptyResponseAsSuccess:'>
<arg index='0' name='treatsEmptyResponseAsSuccess' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillMapDeserializedResponseBlock:'>
<arg index='0' name='block' function_pointer='true' declared_type='id (^)(id)' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='targetObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='treatsEmptyResponseAsSuccess'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='RKRoute'>
<method selector='isClassRoute'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNamedRoute'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRelationshipRoute'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='method'>
<retval declared_type='RKRequestMethod' type='i'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='objectClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='pathPattern'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='routeWithClass:pathPattern:method:' class_method='true'>
<arg index='0' name='objectClass' declared_type='Class' type='#'/>
<arg index='1' name='pathPattern' declared_type='NSString*' type='@'/>
<arg index='2' name='method' declared_type='RKRequestMethod' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='routeWithName:pathPattern:method:' class_method='true'>
<arg index='0' name='name' declared_type='NSString*' type='@'/>
<arg index='1' name='pathPattern' declared_type='NSString*' type='@'/>
<arg index='2' name='method' declared_type='RKRequestMethod' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='routeWithRelationshipName:objectClass:pathPattern:method:' class_method='true'>
<arg index='0' name='name' declared_type='NSString*' type='@'/>
<arg index='1' name='objectClass' declared_type='Class' type='#'/>
<arg index='2' name='pathPattern' declared_type='NSString*' type='@'/>
<arg index='3' name='method' declared_type='RKRequestMethod' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setName:'>
<arg index='0' name='name' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectClass:'>
<arg index='0' name='objectClass' declared_type='Class' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPathPattern:'>
<arg index='0' name='pathPattern' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldEscapePath:'>
<arg index='0' name='shouldEscapePath' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldEscapePath'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='RKRouteSet'>
<method selector='addRoute:'>
<arg index='0' name='route' declared_type='RKRoute*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='allRoutes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='classRoutes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='containsRoute:'>
<arg index='0' name='route' declared_type='RKRoute*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='namedRoutes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='relationshipRoutes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removeRoute:'>
<arg index='0' name='route' declared_type='RKRoute*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='routeForClass:method:'>
<arg index='0' name='objectClass' declared_type='Class' type='#'/>
<arg index='1' name='method' declared_type='RKRequestMethod' type='i'/>
<retval declared_type='RKRoute*' type='@'/>
</method>
<method selector='routeForName:'>
<arg index='0' name='name' declared_type='NSString*' type='@'/>
<retval declared_type='RKRoute*' type='@'/>
</method>
<method selector='routeForObject:method:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='method' declared_type='RKRequestMethod' type='i'/>
<retval declared_type='RKRoute*' type='@'/>
</method>
<method selector='routeForRelationship:ofClass:method:'>
<arg index='0' name='relationship' declared_type='NSString*' type='@'/>
<arg index='1' name='objectClass' declared_type='Class' type='#'/>
<arg index='2' name='method' declared_type='RKRequestMethod' type='i'/>
<retval declared_type='RKRoute*' type='@'/>
</method>
<method selector='routesForClass:'>
<arg index='0' name='objectClass' declared_type='Class' type='#'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='routesForObject:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='routesForRelationship:ofClass:'>
<arg index='0' name='relationshipName' declared_type='NSString*' type='@'/>
<arg index='1' name='objectClass' declared_type='Class' type='#'/>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='RKRouter'>
<method selector='URLForObject:method:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='method' declared_type='RKRequestMethod' type='i'/>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='URLForRelationship:ofObject:method:'>
<arg index='0' name='relationshipName' declared_type='NSString*' type='@'/>
<arg index='1' name='object' declared_type='id' type='@'/>
<arg index='2' name='method' declared_type='RKRequestMethod' type='i'/>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='URLForRouteNamed:method:object:'>
<arg index='0' name='routeName' declared_type='NSString*' type='@'/>
<arg index='1' name='method' declared_type='RKRequestMethod*' type_modifier='o' type='^i'/>
<arg index='2' name='object' declared_type='id' type='@'/>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='URLWithRoute:object:'>
<arg index='0' name='route' declared_type='RKRoute*' type='@'/>
<arg index='1' name='object' declared_type='id' type='@'/>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='initWithBaseURL:'>
<arg index='0' name='baseURL' declared_type='NSURL*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='routeSet'>
<retval declared_type='RKRouteSet*' type='@'/>
</method>
<method selector='setBaseURL:'>
<arg index='0' name='baseURL' declared_type='NSURL*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRouteSet:'>
<arg index='0' name='routeSet' declared_type='RKRouteSet*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SOCPattern'>
<method selector='initWithString:'>
<arg index='0' name='string' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='parameterDictionaryFromSourceString:'>
<arg index='0' name='sourceString' declared_type='NSString*' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='patternWithString:' class_method='true'>
<arg index='0' name='string' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='performSelector:onObject:sourceString:'>
<arg index='0' name='selector' declared_type='SEL' type=':'/>
<arg index='1' name='object' declared_type='id' type='@'/>
<arg index='2' name='sourceString' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='stringFromObject:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringFromObject:withBlock:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='block' function_pointer='true' declared_type='NSString *(^)(NSString *)' type='@?'>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringMatches:'>
<arg index='0' name='string' declared_type='NSString*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='SVProgressHUD'>
<method selector='dismiss' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method selector='hudBackgroundColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='hudFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='hudForegroundColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='hudStatusShadowColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='isVisible' class_method='true'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setHudBackgroundColor:'>
<arg index='0' name='hudBackgroundColor' declared_type='UIColor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHudFont:'>
<arg index='0' name='hudFont' declared_type='UIFont*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHudForegroundColor:'>
<arg index='0' name='hudForegroundColor' declared_type='UIColor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHudStatusShadowColor:'>
<arg index='0' name='hudStatusShadowColor' declared_type='UIColor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStatus:' class_method='true'>
<arg index='0' name='string' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='show' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method selector='showErrorWithStatus:' class_method='true'>
<arg index='0' name='string' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showImage:status:' class_method='true'>
<arg index='0' name='image' declared_type='UIImage*' type='@'/>
<arg index='1' name='status' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showProgress:' class_method='true'>
<arg index='0' name='progress' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showProgress:status:' class_method='true'>
<arg index='0' name='progress' declared_type='CGFloat' type='f'/>
<arg index='1' name='status' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showProgress:status:maskType:' class_method='true'>
<arg index='0' name='progress' declared_type='CGFloat' type='f'/>
<arg index='1' name='status' declared_type='NSString*' type='@'/>
<arg index='2' name='maskType' declared_type='SVProgressHUDMaskType' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showSuccessWithStatus:' class_method='true'>
<arg index='0' name='string' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showWithMaskType:' class_method='true'>
<arg index='0' name='maskType' declared_type='SVProgressHUDMaskType' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showWithStatus:' class_method='true'>
<arg index='0' name='status' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showWithStatus:maskType:' class_method='true'>
<arg index='0' name='status' declared_type='NSString*' type='@'/>
<arg index='1' name='maskType' declared_type='SVProgressHUDMaskType' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIImageView'>
<method selector='cancelImageRequestOperation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:'>
<arg index='0' name='url' declared_type='NSURL*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:'>
<arg index='0' name='url' declared_type='NSURL*' type='@'/>
<arg index='1' name='placeholderImage' declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURLRequest:placeholderImage:success:failure:'>
<arg index='0' name='urlRequest' declared_type='NSURLRequest*' type='@'/>
<arg index='1' name='placeholderImage' declared_type='UIImage*' type='@'/>
<arg index='2' name='success' function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' name='failure' function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='AFMultipartFormData'>
<method selector='appendPartWithFileData:name:fileName:mimeType:' type='v24@0:4@8@12@16@20'>
<arg index='0' name='data' declared_type='NSData*' type='@'/>
<arg index='1' name='name' declared_type='NSString*' type='@'/>
<arg index='2' name='fileName' declared_type='NSString*' type='@'/>
<arg index='3' name='mimeType' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithFileURL:name:error:' type='B20@0:4@8@12^@16'>
<arg index='0' name='fileURL' declared_type='NSURL*' type='@'/>
<arg index='1' name='name' declared_type='NSString*' type='@'/>
<arg index='2' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFormData:name:' type='v16@0:4@8@12'>
<arg index='0' name='data' declared_type='NSData*' type='@'/>
<arg index='1' name='name' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithHeaders:body:' type='v16@0:4@8@12'>
<arg index='0' name='headers' declared_type='NSDictionary*' type='@'/>
<arg index='1' name='body' declared_type='NSData*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='throttleBandwidthWithPacketSize:delay:' type='v20@0:4I8d12'>
<arg index='0' name='numberOfBytes' declared_type='NSUInteger' type='I'/>
<arg index='1' name='delay' declared_type='NSTimeInterval' type='d'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RKManagedObjectCaching'>
<method selector='didCreateObject:' type='v12@0:4@8'>
<arg index='0' name='object' declared_type='NSManagedObject*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didDeleteObject:' type='v12@0:4@8'>
<arg index='0' name='object' declared_type='NSManagedObject*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didFetchObject:' type='v12@0:4@8'>
<arg index='0' name='object' declared_type='NSManagedObject*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='managedObjectsWithEntity:attributeValues:inManagedObjectContext:' type='@20@0:4@8@12@16'>
<arg index='0' name='entity' declared_type='NSEntityDescription*' type='@'/>
<arg index='1' name='attributeValues' declared_type='NSDictionary*' type='@'/>
<arg index='2' name='managedObjectContext' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='NSSet*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='RKMapperOperationDelegate'>
<method selector='mapper:didFailMappingOperation:forKeyPath:withError:' type='v24@0:4@8@12@16@20'>
<arg index='0' name='mapper' declared_type='RKMapperOperation*' type='@'/>
<arg index='1' name='mappingOperation' declared_type='RKMappingOperation*' type='@'/>
<arg index='2' name='keyPath' declared_type='NSString*' type='@'/>
<arg index='3' name='error' declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:didFindRepresentationOrArrayOfRepresentations:atKeyPath:' type='v20@0:4@8@12@16'>
<arg index='0' name='mapper' declared_type='RKMapperOperation*' type='@'/>
<arg index='1' name='dictionaryOrArrayOfDictionaries' declared_type='id' type='@'/>
<arg index='2' name='keyPath' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:didFinishMappingOperation:forKeyPath:' type='v20@0:4@8@12@16'>
<arg index='0' name='mapper' declared_type='RKMapperOperation*' type='@'/>
<arg index='1' name='mappingOperation' declared_type='RKMappingOperation*' type='@'/>
<arg index='2' name='keyPath' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:didNotFindRepresentationOrArrayOfRepresentationsAtKeyPath:' type='v16@0:4@8@12'>
<arg index='0' name='mapper' declared_type='RKMapperOperation*' type='@'/>
<arg index='1' name='keyPath' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:willStartMappingOperation:forKeyPath:' type='v20@0:4@8@12@16'>
<arg index='0' name='mapper' declared_type='RKMapperOperation*' type='@'/>
<arg index='1' name='mappingOperation' declared_type='RKMappingOperation*' type='@'/>
<arg index='2' name='keyPath' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapperDidCancelMapping:' type='v12@0:4@8'>
<arg index='0' name='mapper' declared_type='RKMapperOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapperDidFinishMapping:' type='v12@0:4@8'>
<arg index='0' name='mapper' declared_type='RKMapperOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapperWillStartMapping:' type='v12@0:4@8'>
<arg index='0' name='mapper' declared_type='RKMapperOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RKMappingOperationDataSource'>
<method selector='commitChangesForMappingOperation:error:' type='B16@0:4@8^@12'>
<arg index='0' name='mappingOperation' declared_type='RKMappingOperation*' type='@'/>
<arg index='1' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mappingOperation:deleteExistingValueOfRelationshipWithMapping:error:' type='B20@0:4@8@12^@16'>
<arg index='0' name='mappingOperation' declared_type='RKMappingOperation*' type='@'/>
<arg index='1' name='relationshipMapping' declared_type='RKRelationshipMapping*' type='@'/>
<arg index='2' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mappingOperation:targetObjectForRepresentation:withMapping:inRelationship:' type='@24@0:4@8@12@16@20'>
<arg index='0' name='mappingOperation' declared_type='RKMappingOperation*' type='@'/>
<arg index='1' name='representation' declared_type='NSDictionary*' type='@'/>
<arg index='2' name='mapping' declared_type='RKObjectMapping*' type='@'/>
<arg index='3' name='relationshipMapping' declared_type='RKRelationshipMapping*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='RKMappingOperationDelegate'>
<method selector='mappingOperation:didConnectRelationship:toValue:usingConnection:' type='v24@0:4@8@12@16@20'>
<arg index='0' name='operation' declared_type='RKMappingOperation*' type='@'/>
<arg index='1' name='relationship' declared_type='NSRelationshipDescription*' type='@'/>
<arg index='2' name='value' declared_type='id' type='@'/>
<arg index='3' name='connection' declared_type='RKConnectionDescription*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didFailToConnectRelationship:usingConnection:' type='v20@0:4@8@12@16'>
<arg index='0' name='operation' declared_type='RKMappingOperation*' type='@'/>
<arg index='1' name='relationship' declared_type='NSRelationshipDescription*' type='@'/>
<arg index='2' name='connection' declared_type='RKConnectionDescription*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didFailWithError:' type='v16@0:4@8@12'>
<arg index='0' name='operation' declared_type='RKMappingOperation*' type='@'/>
<arg index='1' name='error' declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didFindValue:forKeyPath:mapping:' type='v24@0:4@8@12@16@20'>
<arg index='0' name='operation' declared_type='RKMappingOperation*' type='@'/>
<arg index='1' name='value' declared_type='id' type='@'/>
<arg index='2' name='keyPath' declared_type='NSString*' type='@'/>
<arg index='3' name='propertyMapping' declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didNotFindValueForKeyPath:mapping:' type='v20@0:4@8@12@16'>
<arg index='0' name='operation' declared_type='RKMappingOperation*' type='@'/>
<arg index='1' name='keyPath' declared_type='NSString*' type='@'/>
<arg index='2' name='propertyMapping' declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didNotSetUnchangedValue:forKeyPath:usingMapping:' type='v24@0:4@8@12@16@20'>
<arg index='0' name='operation' declared_type='RKMappingOperation*' type='@'/>
<arg index='1' name='value' declared_type='id' type='@'/>
<arg index='2' name='keyPath' declared_type='NSString*' type='@'/>
<arg index='3' name='propertyMapping' declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didSelectObjectMapping:forDynamicMapping:' type='v20@0:4@8@12@16'>
<arg index='0' name='operation' declared_type='RKMappingOperation*' type='@'/>
<arg index='1' name='objectMapping' declared_type='RKObjectMapping*' type='@'/>
<arg index='2' name='dynamicMapping' declared_type='RKDynamicMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didSetValue:forKeyPath:usingMapping:' type='v24@0:4@8@12@16@20'>
<arg index='0' name='operation' declared_type='RKMappingOperation*' type='@'/>
<arg index='1' name='value' declared_type='id' type='@'/>
<arg index='2' name='keyPath' declared_type='NSString*' type='@'/>
<arg index='3' name='propertyMapping' declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RKSerialization'>
<method selector='dataFromObject:error:' type='@16@0:4@8^@12' class_method='true'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='objectFromData:error:' type='@16@0:4@8^@12' class_method='true'>
<arg index='0' name='data' declared_type='NSData*' type='@'/>
<arg index='1' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
</signatures>

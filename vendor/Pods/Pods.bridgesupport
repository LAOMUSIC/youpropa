<?xml version='1.0'?>
<signatures version='1.0'>
<constant declared_type='NSString*' type='@' name='AFNetworkingErrorDomain' const='true'/>
<constant declared_type='NSString*' type='@' name='AFNetworkingOperationDidFinishNotification' const='true'/>
<constant declared_type='NSString*' type='@' name='AFNetworkingOperationDidStartNotification' const='true'/>
<constant declared_type='NSString*' type='@' name='AFNetworkingOperationFailingURLRequestErrorKey' const='true'/>
<constant declared_type='NSString*' type='@' name='AFNetworkingOperationFailingURLResponseErrorKey' const='true'/>
<constant declared_type='NSString*' type='@' name='RKDetailedErrorsKey' const='true'/>
<constant declared_type='NSString*' type='@' name='RKEntityDescriptionPrimaryKeyAttributeUserInfoKey' const='true'/>
<constant declared_type='NSString*' type='@' name='RKEntityDescriptionPrimaryKeyAttributeValuePredicateSubstitutionVariable' const='true'/>
<constant declared_type='NSString*' type='@' name='RKErrorDomain' const='true'/>
<constant declared_type='NSString*' type='@' name='RKErrorNotificationErrorKey' const='true'/>
<constant declared_type='unichar' type='S' name='RKISO8601DefaultTimeSeparatorCharacter'/>
<constant declared_type='NSString*' type='@' name='RKMIMETypeErrorKey' const='true'/>
<constant declared_type='NSString*' type='@' name='RKMIMETypeFormURLEncoded' const='true'/>
<constant declared_type='NSString*' type='@' name='RKMIMETypeJSON' const='true'/>
<constant declared_type='NSString*' type='@' name='RKMIMETypeTextXML' const='true'/>
<constant declared_type='NSString*' type='@' name='RKMIMETypeXML' const='true'/>
<constant declared_type='NSString*' type='@' name='RKMappingErrorKeyPathErrorKey' const='true'/>
<constant declared_type='NSString*' type='@' name='RKObjectMapperErrorObjectsKey' const='true'/>
<constant declared_type='RKRequestMethod' type='i' name='RKRequestMethodAny' const='true'/>
<constant declared_type='NSString*' type='@' name='RKSQLitePersistentStoreSeedDatabasePathOption' const='true'/>
<constant declared_type='NSTimeInterval' type='d' name='kAFUploadStream3GSuggestedDelay' const='true'/>
<constant declared_type='NSUInteger' type='I' name='kAFUploadStream3GSuggestedPacketSize' const='true'/>
<enum value='0' name='AFFormURLParameterEncoding'/>
<enum value='1' name='AFJSONParameterEncoding'/>
<enum value='2' name='AFPropertyListParameterEncoding'/>
<enum value='2' name='NVUIGradientButtonStyleBlackOpaque'/>
<enum value='3' name='NVUIGradientButtonStyleBlackTranslucent'/>
<enum value='1' name='NVUIGradientButtonStyleDefault'/>
<enum value='0' name='RKLogComponent'/>
<enum value='1' name='RKLogLevelCritical'/>
<enum value='5' name='RKLogLevelDebug'/>
<enum value='3' name='RKLogLevelDefault'/>
<enum value='2' name='RKLogLevelError'/>
<enum value='4' name='RKLogLevelInfo'/>
<enum value='0' name='RKLogLevelOff'/>
<enum value='6' name='RKLogLevelTrace'/>
<enum value='3' name='RKLogLevelWarning'/>
<enum value='1004' name='RKMappingErrorFromMappingResult'/>
<enum value='1001' name='RKMappingErrorNotFound'/>
<enum value='1002' name='RKMappingErrorTypeMismatch'/>
<enum value='1003' name='RKMappingErrorUnmappableRepresentation'/>
<enum value='1005' name='RKMappingErrorValidationFailure'/>
<enum value='1' name='RKObjectLoaderRemoteSystemError'/>
<enum value='4' name='RKObjectLoaderUnexpectedResponseError'/>
<enum value='7' name='RKParserRegistryEmptyDataError'/>
<enum value='2' name='RKRequestBaseURLOfflineError'/>
<enum value='5' name='RKRequestConnectionTimeoutError'/>
<enum value='3' name='RKRequestMethodDELETE'/>
<enum value='0' name='RKRequestMethodGET'/>
<enum value='4' name='RKRequestMethodHEAD'/>
<enum value='-1' name='RKRequestMethodInvalid'/>
<enum value='6' name='RKRequestMethodOPTIONS'/>
<enum value='5' name='RKRequestMethodPATCH'/>
<enum value='1' name='RKRequestMethodPOST'/>
<enum value='2' name='RKRequestMethodPUT'/>
<enum value='3' name='RKRequestUnexpectedResponseError'/>
<enum value='400' name='RKStatusCodeClassClientError'/>
<enum value='100' name='RKStatusCodeClassInformational'/>
<enum value='300' name='RKStatusCodeClassRedirection'/>
<enum value='500' name='RKStatusCodeClassServerError'/>
<enum value='200' name='RKStatusCodeClassSuccessful'/>
<enum value='6' name='RKUnsupportedMIMETypeError'/>
<enum value='0' name='RKlcl_cApp'/>
<enum value='1' name='RKlcl_cRestKit'/>
<enum value='2' name='RKlcl_cRestKitCoreData'/>
<enum value='3' name='RKlcl_cRestKitCoreDataCache'/>
<enum value='4' name='RKlcl_cRestKitNetwork'/>
<enum value='5' name='RKlcl_cRestKitObjectMapping'/>
<enum value='6' name='RKlcl_cRestKitSearch'/>
<enum value='7' name='RKlcl_cRestKitSupport'/>
<enum value='8' name='RKlcl_cRestKitTesting'/>
<enum value='9' name='RKlcl_cRestKitUI'/>
<enum value='1' name='RKlcl_vCritical'/>
<enum value='5' name='RKlcl_vDebug'/>
<enum value='2' name='RKlcl_vError'/>
<enum value='4' name='RKlcl_vInfo'/>
<enum value='0' name='RKlcl_vOff'/>
<enum value='6' name='RKlcl_vTrace'/>
<enum value='3' name='RKlcl_vWarning'/>
<function name='AFContentTypesFromHTTPHeader'>
<arg declared_type='NSString*' type='@' name='string'/>
<retval declared_type='NSSet*' type='@'/>
</function>
<function name='AFQueryStringFromParametersWithEncoding'>
<arg declared_type='NSDictionary*' type='@' name='parameters'/>
<arg declared_type='NSStringEncoding' type='I' name='encoding'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKApplicationDataDirectory'>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKCachesDirectory'>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKClassIsCollection'>
<arg declared_type='Class' type='#' name='aClass'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKDateFromHTTPDateString'>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='NSDate*' type='@'/>
</function>
<function name='RKDateFromString'>
<arg declared_type='NSString*' type='@' name='dateString'/>
<retval declared_type='NSDate*' type='@'/>
</function>
<function name='RKDictionaryByMergingDictionaryWithDictionary'>
<arg declared_type='NSDictionary*' type='@' name='dict1'/>
<arg declared_type='NSDictionary*' type='@' name='dict2'/>
<retval declared_type='NSDictionary*' type='@'/>
</function>
<function name='RKDictionaryByReplacingPercentEscapesInEntriesFromDictionary'>
<arg declared_type='NSDictionary*' type='@' name='dictionary'/>
<retval declared_type='NSDictionary*' type='@'/>
</function>
<function name='RKDictionaryFromURLEncodedStringWithEncoding'>
<arg declared_type='NSString*' type='@' name='URLEncodedString'/>
<arg declared_type='NSStringEncoding' type='I' name='encoding'/>
<retval declared_type='NSDictionary*' type='@'/>
</function>
<function name='RKEnsureDirectoryExistsAtPath'>
<arg declared_type='NSString*' type='@' name='path'/>
<arg declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKErrorFromMappingResult'>
<arg declared_type='RKMappingResult*' type='@' name='mappingResult'/>
<retval declared_type='NSError*' type='@'/>
</function>
<function name='RKHTTPCacheExpirationDateFromHeadersWithStatusCode'>
<arg declared_type='NSDictionary*' type='@' name='headers'/>
<arg declared_type='NSInteger' type='i' name='statusCode'/>
<retval declared_type='NSDate*' type='@'/>
</function>
<function name='RKLogConfigureFromEnvironment'>
<retval declared_type='void' type='v'/>
</function>
<function name='RKLogCoreDataError'>
<arg declared_type='NSError*' type='@' name='error'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RKLogInitialize'>
<retval declared_type='void' type='v'/>
</function>
<function name='RKLogIntegerAsBinary'>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RKLogValidationError'>
<arg declared_type='NSError*' type='@' name='error'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RKMIMETypeFromPathExtension'>
<arg declared_type='NSString*' type='@' name='path'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKMIMETypeInSet'>
<arg declared_type='NSString*' type='@' name='MIMEType'/>
<arg declared_type='NSSet*' type='@' name='MIMETypes'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKObjectIsCollection'>
<arg declared_type='id' type='@' name='object'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKObjectIsCollectionContainingOnlyManagedObjects'>
<arg declared_type='id' type='@' name='object'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKObjectIsEqualToObject'>
<arg declared_type='id' type='@' name='object'/>
<arg declared_type='id' type='@' name='anotherObject'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKPathAndQueryStringFromURLRelativeToURL'>
<arg declared_type='NSURL*' type='@' name='URL'/>
<arg declared_type='NSURL*' type='@' name='baseURL'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKPathFromPatternWithObject'>
<arg declared_type='NSString*' type='@' name='pathPattern'/>
<arg declared_type='id' type='@' name='object'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKPercentEscapedQueryStringFromStringWithEncoding'>
<arg declared_type='NSString*' type='@' name='string'/>
<arg declared_type='NSStringEncoding' type='I' name='encoding'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKQueryParametersFromStringWithEncoding'>
<arg declared_type='NSString*' type='@' name='string'/>
<arg declared_type='NSStringEncoding' type='I' name='encoding'/>
<retval declared_type='NSDictionary*' type='@'/>
</function>
<function name='RKRequestMethodFromString'>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='RKRequestMethod' type='i'/>
</function>
<function name='RKStatusCodeIndexSetForClass'>
<arg declared_type='RKStatusCodeClass' type='I' name='statusCodeClass'/>
<retval declared_type='NSIndexSet*' type='@'/>
</function>
<function name='RKStatusCodeRangeForClass'>
<arg declared_type='RKStatusCodeClass' type='I' name='statusCodeClass'/>
<retval declared_type='NSRange' type='{_NSRange=II}'/>
</function>
<function name='RKStringFromDate'>
<arg declared_type='NSDate*' type='@' name='date'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKStringFromRequestMethod'>
<arg declared_type='RKRequestMethod' type='i'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKURLEncodedStringFromDictionaryWithEncoding'>
<arg declared_type='NSDictionary*' type='@' name='dictionary'/>
<arg declared_type='NSStringEncoding' type='I' name='encoding'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKURLIsRelativeToURL'>
<arg declared_type='NSURL*' type='@' name='URL'/>
<arg declared_type='NSURL*' type='@' name='baseURL'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKlcl_configure_by_component'>
<arg declared_type='_RKlcl_component_t' type='I' name='component'/>
<arg declared_type='_RKlcl_level_t' type='I' name='level'/>
<retval declared_type='uint32_t' type='I'/>
</function>
<function name='RKlcl_configure_by_header'>
<arg declared_type='char*' type='*' name='header' const='true'/>
<arg declared_type='_RKlcl_level_t' type='I' name='level'/>
<retval declared_type='uint32_t' type='I'/>
</function>
<function name='RKlcl_configure_by_identifier'>
<arg declared_type='char*' type='*' name='identifier' const='true'/>
<arg declared_type='_RKlcl_level_t' type='I' name='level'/>
<retval declared_type='uint32_t' type='I'/>
</function>
<function name='RKlcl_configure_by_name'>
<arg declared_type='char*' type='*' name='name' const='true'/>
<arg declared_type='_RKlcl_level_t' type='I' name='level'/>
<retval declared_type='uint32_t' type='I'/>
</function>
<function name='SOCStringFromStringWithObject'>
<arg declared_type='NSString*' type='@' name='string'/>
<arg declared_type='id' type='@' name='object'/>
<retval declared_type='NSString*' type='@'/>
</function>
<class name='AFHTTPClient'>
<method selector='HTTPRequestOperationWithRequest:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' type='@' name='request'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' index='1' type='@?' name='success' function_pointer='true'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' index='2' type='@?' name='failure' function_pointer='true'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='cancelAllHTTPOperationsWithMethod:path:'>
<arg declared_type='NSString*' index='0' type='@' name='method'/>
<arg declared_type='NSString*' index='1' type='@' name='path'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearAuthorizationHeader'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clientWithBaseURL:' class_method='true'>
<arg declared_type='NSURL*' index='0' type='@' name='url'/>
<retval declared_type='AFHTTPClient*' type='@'/>
</method>
<method selector='defaultHeaders'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='defaultValueForHeader:'>
<arg declared_type='NSString*' index='0' type='@' name='header'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='deletePath:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' type='@' name='path'/>
<arg declared_type='NSDictionary*' index='1' type='@' name='parameters'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' index='2' type='@?' name='success' function_pointer='true'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' index='3' type='@?' name='failure' function_pointer='true'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfHTTPRequestOperations:progressBlock:completionBlock:'>
<arg declared_type='NSArray*' index='0' type='@' name='operations'/>
<arg declared_type='void (^)(NSUInteger, NSUInteger)' index='1' type='@?' name='progressBlock' function_pointer='true'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSArray *)' index='2' type='@?' name='completionBlock' function_pointer='true'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfHTTPRequestOperationsWithRequests:progressBlock:completionBlock:'>
<arg declared_type='NSArray*' index='0' type='@' name='requests'/>
<arg declared_type='void (^)(NSUInteger, NSUInteger)' index='1' type='@?' name='progressBlock' function_pointer='true'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSArray *)' index='2' type='@?' name='completionBlock' function_pointer='true'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueHTTPRequestOperation:'>
<arg declared_type='AFHTTPRequestOperation*' index='0' type='@' name='operation'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getPath:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' type='@' name='path'/>
<arg declared_type='NSDictionary*' index='1' type='@' name='parameters'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' index='2' type='@?' name='success' function_pointer='true'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' index='3' type='@?' name='failure' function_pointer='true'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithBaseURL:'>
<arg declared_type='NSURL*' index='0' type='@' name='url'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='multipartFormRequestWithMethod:path:parameters:constructingBodyWithBlock:'>
<arg declared_type='NSString*' index='0' type='@' name='method'/>
<arg declared_type='NSString*' index='1' type='@' name='path'/>
<arg declared_type='NSDictionary*' index='2' type='@' name='parameters'/>
<arg declared_type='void (^)(id)' index='3' type='@?' name='block' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='parameterEncoding'>
<retval declared_type='AFHTTPClientParameterEncoding' type='i'/>
</method>
<method selector='patchPath:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' type='@' name='path'/>
<arg declared_type='NSDictionary*' index='1' type='@' name='parameters'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' index='2' type='@?' name='success' function_pointer='true'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' index='3' type='@?' name='failure' function_pointer='true'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='postPath:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' type='@' name='path'/>
<arg declared_type='NSDictionary*' index='1' type='@' name='parameters'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' index='2' type='@?' name='success' function_pointer='true'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' index='3' type='@?' name='failure' function_pointer='true'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='putPath:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' type='@' name='path'/>
<arg declared_type='NSDictionary*' index='1' type='@' name='parameters'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' index='2' type='@?' name='success' function_pointer='true'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' index='3' type='@?' name='failure' function_pointer='true'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerHTTPOperationClass:'>
<arg declared_type='Class' index='0' type='#' name='operationClass'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='requestWithMethod:path:parameters:'>
<arg declared_type='NSString*' index='0' type='@' name='method'/>
<arg declared_type='NSString*' index='1' type='@' name='path'/>
<arg declared_type='NSDictionary*' index='2' type='@' name='parameters'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='setAuthorizationHeaderWithToken:'>
<arg declared_type='NSString*' index='0' type='@' name='token'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthorizationHeaderWithUsername:password:'>
<arg declared_type='NSString*' index='0' type='@' name='username'/>
<arg declared_type='NSString*' index='1' type='@' name='password'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultHeader:value:'>
<arg declared_type='NSString*' index='0' type='@' name='header'/>
<arg declared_type='NSString*' index='1' type='@' name='value'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParameterEncoding:'>
<arg declared_type='AFHTTPClientParameterEncoding' index='0' type='i' name='parameterEncoding'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStringEncoding:'>
<arg declared_type='NSStringEncoding' index='0' type='I' name='stringEncoding'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringEncoding'>
<retval declared_type='NSStringEncoding' type='I'/>
</method>
<method selector='unregisterHTTPOperationClass:'>
<arg declared_type='Class' index='0' type='#' name='operationClass'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFHTTPRequestOperation'>
<method selector='acceptableContentTypes' class_method='true'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='acceptableStatusCodes' class_method='true'>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
<method selector='addAcceptableContentTypes:' class_method='true'>
<arg declared_type='NSSet*' index='0' type='@' name='contentTypes'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAcceptableStatusCodes:' class_method='true'>
<arg declared_type='NSIndexSet*' index='0' type='@' name='statusCodes'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='canProcessRequest:' class_method='true'>
<arg declared_type='NSURLRequest*' index='0' type='@' name='urlRequest'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='failureCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='hasAcceptableContentType'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasAcceptableStatusCode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='response'>
<retval declared_type='NSHTTPURLResponse*' type='@'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' index='0' type='@?' name='success' function_pointer='true'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' index='1' type='@?' name='failure' function_pointer='true'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFailureCallbackQueue:'>
<arg declared_type='dispatch_queue_t' index='0' type='@' name='failureCallbackQueue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSuccessCallbackQueue:'>
<arg declared_type='dispatch_queue_t' index='0' type='@' name='successCallbackQueue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='successCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
</class>
<class name='AFImageRequestOperation'>
<method selector='imageRequestOperationWithRequest:imageProcessingBlock:success:failure:' class_method='true'>
<arg declared_type='NSURLRequest*' index='0' type='@' name='urlRequest'/>
<arg declared_type='UIImage *(^)(UIImage *)' index='1' type='@?' name='imageProcessingBlock' function_pointer='true'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</arg>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)' index='2' type='@?' name='success' function_pointer='true'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)' index='3' type='@?' name='failure' function_pointer='true'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFImageRequestOperation*' type='@'/>
</method>
<method selector='imageRequestOperationWithRequest:success:' class_method='true'>
<arg declared_type='NSURLRequest*' index='0' type='@' name='urlRequest'/>
<arg declared_type='void (^)(UIImage *)' index='1' type='@?' name='success' function_pointer='true'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFImageRequestOperation*' type='@'/>
</method>
<method selector='imageScale'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='responseImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='setImageScale:'>
<arg declared_type='CGFloat' index='0' type='f' name='imageScale'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFJSONRequestOperation'>
<method selector='JSONRequestOperationWithRequest:success:failure:' class_method='true'>
<arg declared_type='NSURLRequest*' index='0' type='@' name='urlRequest'/>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, id)' index='1' type='@?' name='success' function_pointer='true'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, id)' index='2' type='@?' name='failure' function_pointer='true'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFJSONRequestOperation*' type='@'/>
</method>
<method selector='responseJSON'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='AFNetworkActivityIndicatorManager'>
<method selector='decrementActivityCount'>
<retval declared_type='void' type='v'/>
</method>
<method selector='incrementActivityCount'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNetworkActivityIndicatorVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' type='B' name='enabled'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedManager' class_method='true'>
<retval declared_type='AFNetworkActivityIndicatorManager*' type='@'/>
</method>
</class>
<class name='AFPropertyListRequestOperation'>
<method selector='propertyListReadOptions'>
<retval declared_type='NSPropertyListReadOptions' type='I'/>
</method>
<method selector='propertyListRequestOperationWithRequest:success:failure:' class_method='true'>
<arg declared_type='NSURLRequest*' index='0' type='@' name='urlRequest'/>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, id)' index='1' type='@?' name='success' function_pointer='true'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, id)' index='2' type='@?' name='failure' function_pointer='true'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFPropertyListRequestOperation*' type='@'/>
</method>
<method selector='responsePropertyList'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setPropertyListReadOptions:'>
<arg declared_type='NSPropertyListReadOptions' index='0' type='I' name='propertyListReadOptions'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFURLConnectionOperation'>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='initWithRequest:'>
<arg declared_type='NSURLRequest*' index='0' type='@' name='urlRequest'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='inputStream'>
<retval declared_type='NSInputStream*' type='@'/>
</method>
<method selector='isPaused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outputStream'>
<retval declared_type='NSOutputStream*' type='@'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='request'>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='response'>
<retval declared_type='NSURLResponse*' type='@'/>
</method>
<method selector='responseData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='responseString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='resume'>
<retval declared_type='void' type='v'/>
</method>
<method selector='runLoopModes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='setAuthenticationAgainstProtectionSpaceBlock:'>
<arg declared_type='BOOL (^)(NSURLConnection *, NSURLProtectionSpace *)' index='0' type='@?' name='block' function_pointer='true'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLProtectionSpace*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthenticationChallengeBlock:'>
<arg declared_type='void (^)(NSURLConnection *, NSURLAuthenticationChallenge *)' index='0' type='@?' name='block' function_pointer='true'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLAuthenticationChallenge*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheResponseBlock:'>
<arg declared_type='NSCachedURLResponse *(^)(NSURLConnection *, NSCachedURLResponse *)' index='0' type='@?' name='block' function_pointer='true'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSCachedURLResponse*' type='@'/>
<retval declared_type='NSCachedURLResponse*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadProgressBlock:'>
<arg declared_type='void (^)(NSUInteger, long long, long long)' index='0' type='@?' name='block' function_pointer='true'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInputStream:'>
<arg declared_type='NSInputStream*' index='0' type='@' name='inputStream'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOutputStream:'>
<arg declared_type='NSOutputStream*' index='0' type='@' name='outputStream'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRedirectResponseBlock:'>
<arg declared_type='NSURLRequest *(^)(NSURLConnection *, NSURLRequest *, NSURLResponse *)' index='0' type='@?' name='block' function_pointer='true'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<retval declared_type='NSURLRequest*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRunLoopModes:'>
<arg declared_type='NSSet*' index='0' type='@' name='runLoopModes'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldExecuteAsBackgroundTaskWithExpirationHandler:'>
<arg declared_type='void (^)(void)' index='0' type='@?' name='handler' function_pointer='true'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUploadProgressBlock:'>
<arg declared_type='void (^)(NSUInteger, long long, long long)' index='0' type='@?' name='block' function_pointer='true'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFXMLRequestOperation'>
<method selector='XMLParserRequestOperationWithRequest:success:failure:' class_method='true'>
<arg declared_type='NSURLRequest*' index='0' type='@' name='urlRequest'/>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSXMLParser *)' index='1' type='@?' name='success' function_pointer='true'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSXMLParser*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, NSXMLParser *)' index='2' type='@?' name='failure' function_pointer='true'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='NSXMLParser*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFXMLRequestOperation*' type='@'/>
</method>
<method selector='responseXMLParser'>
<retval declared_type='NSXMLParser*' type='@'/>
</method>
</class>
<class name='NSEntityDescription'>
<method selector='coerceValueForPrimaryKey:'>
<arg declared_type='id' index='0' type='@' name='primaryKeyValue'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='predicateForPrimaryKeyAttribute'>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method selector='predicateForPrimaryKeyAttributeWithValue:'>
<arg declared_type='id' index='0' type='@' name='value'/>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method selector='primaryKeyAttribute'>
<retval declared_type='NSAttributeDescription*' type='@'/>
</method>
<method selector='primaryKeyAttributeClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='primaryKeyAttributeName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setPrimaryKeyAttributeName:'>
<arg declared_type='NSString*' index='0' type='@' name='primaryKeyAttributeName'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSManagedObject'>
<method selector='hasBeenDeleted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNew'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSManagedObjectContext'>
<method selector='countForEntityForName:predicate:error:'>
<arg declared_type='NSString*' index='0' type='@' name='entityName'/>
<arg declared_type='NSPredicate*' index='1' type='@' name='predicate'/>
<arg declared_type='NSError**' index='2' type='^@' name='error'/>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='fetchObjectForEntity:withValueForPrimaryKeyAttribute:'>
<arg declared_type='NSEntityDescription*' index='0' type='@' name='entity'/>
<arg declared_type='id' index='1' type='@' name='primaryKeyValue'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='fetchObjectForEntityForName:withValueForPrimaryKeyAttribute:'>
<arg declared_type='NSString*' index='0' type='@' name='entityName'/>
<arg declared_type='id' index='1' type='@' name='primaryKeyValue'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertNewObjectForEntityForName:'>
<arg declared_type='NSString*' index='0' type='@' name='entityName'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='saveToPersistentStore:'>
<arg declared_type='NSError**' index='0' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSObject'>
<method selector='appendPartWithFileData:name:fileName:mimeType:'>
<arg declared_type='NSData*' index='0' type='@' name='data'/>
<arg declared_type='NSString*' index='1' type='@' name='name'/>
<arg declared_type='NSString*' index='2' type='@' name='fileName'/>
<arg declared_type='NSString*' index='3' type='@' name='mimeType'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithFileURL:name:error:'>
<arg declared_type='NSURL*' index='0' type='@' name='fileURL'/>
<arg declared_type='NSString*' index='1' type='@' name='name'/>
<arg declared_type='NSError**' index='2' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFormData:name:'>
<arg declared_type='NSData*' index='0' type='@' name='data'/>
<arg declared_type='NSString*' index='1' type='@' name='name'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithHeaders:body:'>
<arg declared_type='NSDictionary*' index='0' type='@' name='headers'/>
<arg declared_type='NSData*' index='1' type='@' name='body'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='commitChangesForMappingOperation:'>
<arg declared_type='RKMappingOperation*' index='0' type='@' name='mappingOperation'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dataFromObject:error:' class_method='true'>
<arg declared_type='id' index='0' type='@' name='object'/>
<arg declared_type='NSError**' index='1' type='^@' name='error'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='didCreateObject:'>
<arg declared_type='NSManagedObject*' index='0' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didDeleteObject:'>
<arg declared_type='NSManagedObject*' index='0' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didFetchObject:'>
<arg declared_type='NSManagedObject*' index='0' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='findInstanceOfEntity:withPrimaryKeyAttribute:value:inManagedObjectContext:'>
<arg declared_type='NSEntityDescription*' index='0' type='@' name='entity'/>
<arg declared_type='NSString*' index='1' type='@' name='primaryKeyAttribute'/>
<arg declared_type='id' index='2' type='@' name='primaryKeyValue'/>
<arg declared_type='NSManagedObjectContext*' index='3' type='@' name='managedObjectContext'/>
<retval declared_type='NSManagedObject*' type='@'/>
</method>
<method selector='findInstancesOfEntity:withPrimaryKeyAttribute:value:inManagedObjectContext:'>
<arg declared_type='NSEntityDescription*' index='0' type='@' name='entity'/>
<arg declared_type='NSString*' index='1' type='@' name='primaryKeyAttribute'/>
<arg declared_type='id' index='2' type='@' name='primaryKeyValue'/>
<arg declared_type='NSManagedObjectContext*' index='3' type='@' name='managedObjectContext'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='mapper:didFailMappingOperation:forKeyPath:withError:'>
<arg declared_type='RKMapperOperation*' index='0' type='@' name='mapper'/>
<arg declared_type='RKMappingOperation*' index='1' type='@' name='mappingOperation'/>
<arg declared_type='NSString*' index='2' type='@' name='keyPath'/>
<arg declared_type='NSError*' index='3' type='@' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:didFindRepresentationOrArrayOfRepresentations:atKeyPath:'>
<arg declared_type='RKMapperOperation*' index='0' type='@' name='mapper'/>
<arg declared_type='id' index='1' type='@' name='dictionaryOrArrayOfDictionaries'/>
<arg declared_type='NSString*' index='2' type='@' name='keyPath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:didFinishMappingOperation:forKeyPath:'>
<arg declared_type='RKMapperOperation*' index='0' type='@' name='mapper'/>
<arg declared_type='RKMappingOperation*' index='1' type='@' name='mappingOperation'/>
<arg declared_type='NSString*' index='2' type='@' name='keyPath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:didNotFindRepresentationOrArrayOfRepresentationsAtKeyPath:'>
<arg declared_type='RKMapperOperation*' index='0' type='@' name='mapper'/>
<arg declared_type='NSString*' index='1' type='@' name='keyPath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:willStartMappingOperation:forKeyPath:'>
<arg declared_type='RKMapperOperation*' index='0' type='@' name='mapper'/>
<arg declared_type='RKMappingOperation*' index='1' type='@' name='mappingOperation'/>
<arg declared_type='NSString*' index='2' type='@' name='keyPath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapperDidFinishMapping:'>
<arg declared_type='RKMapperOperation*' index='0' type='@' name='mapper'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapperWillStartMapping:'>
<arg declared_type='RKMapperOperation*' index='0' type='@' name='mapper'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didConnectRelationship:usingMapping:'>
<arg declared_type='RKMappingOperation*' index='0' type='@' name='operation'/>
<arg declared_type='NSRelationshipDescription*' index='1' type='@' name='relationship'/>
<arg declared_type='RKConnectionMapping*' index='2' type='@' name='connectionMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didFailWithError:'>
<arg declared_type='RKMappingOperation*' index='0' type='@' name='operation'/>
<arg declared_type='NSError*' index='1' type='@' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didFindValue:forKeyPath:mapping:'>
<arg declared_type='RKMappingOperation*' index='0' type='@' name='operation'/>
<arg declared_type='id' index='1' type='@' name='value'/>
<arg declared_type='NSString*' index='2' type='@' name='keyPath'/>
<arg declared_type='RKPropertyMapping*' index='3' type='@' name='propertyMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didNotFindValueForKeyPath:mapping:'>
<arg declared_type='RKMappingOperation*' index='0' type='@' name='operation'/>
<arg declared_type='NSString*' index='1' type='@' name='keyPath'/>
<arg declared_type='RKPropertyMapping*' index='2' type='@' name='propertyMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didNotSetUnchangedValue:forKeyPath:usingMapping:'>
<arg declared_type='RKMappingOperation*' index='0' type='@' name='operation'/>
<arg declared_type='id' index='1' type='@' name='value'/>
<arg declared_type='NSString*' index='2' type='@' name='keyPath'/>
<arg declared_type='RKPropertyMapping*' index='3' type='@' name='propertyMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didSelectObjectMapping:forDynamicMapping:'>
<arg declared_type='RKMappingOperation*' index='0' type='@' name='operation'/>
<arg declared_type='RKObjectMapping*' index='1' type='@' name='objectMapping'/>
<arg declared_type='RKDynamicMapping*' index='2' type='@' name='dynamicMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didSetValue:forKeyPath:usingMapping:'>
<arg declared_type='RKMappingOperation*' index='0' type='@' name='operation'/>
<arg declared_type='id' index='1' type='@' name='value'/>
<arg declared_type='NSString*' index='2' type='@' name='keyPath'/>
<arg declared_type='RKPropertyMapping*' index='3' type='@' name='propertyMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:targetObjectForRepresentation:withMapping:'>
<arg declared_type='RKMappingOperation*' index='0' type='@' name='mappingOperation'/>
<arg declared_type='NSDictionary*' index='1' type='@' name='representation'/>
<arg declared_type='RKObjectMapping*' index='2' type='@' name='mapping'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectFromData:error:' class_method='true'>
<arg declared_type='NSData*' index='0' type='@' name='data'/>
<arg declared_type='NSError**' index='1' type='^@' name='error'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='throttleBandwidthWithPacketSize:delay:'>
<arg declared_type='NSUInteger' index='0' type='I' name='numberOfBytes'/>
<arg declared_type='NSTimeInterval' index='1' type='d' name='delay'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NVUIGradientButton'>
<method selector='borderColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='borderWidth'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='cornerRadius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='disabledText'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='highlightedBorderColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='highlightedText'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='highlightedTextColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='highlightedTextShadowColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='highlightedTintColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='initWithFrame:cornerRadius:borderWidth:andText:'>
<arg declared_type='CGRect' index='0' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='frame'/>
<arg declared_type='CGFloat' index='1' type='f' name='cornerRadius'/>
<arg declared_type='CGFloat' index='2' type='f' name='borderWidth'/>
<arg declared_type='NSString*' index='3' type='@' name='text'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFrame:style:'>
<arg declared_type='CGRect' index='0' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='frame'/>
<arg declared_type='NVUIGradientButtonStyle' index='1' type='i' name='style'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFrame:style:cornerRadius:borderWidth:andText:'>
<arg declared_type='CGRect' index='0' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='frame'/>
<arg declared_type='NVUIGradientButtonStyle' index='1' type='i' name='style'/>
<arg declared_type='CGFloat' index='2' type='f' name='cornerRadius'/>
<arg declared_type='CGFloat' index='3' type='f' name='borderWidth'/>
<arg declared_type='NSString*' index='4' type='@' name='text'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isGradientEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rightAccessoryImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='rightHighlightedAccessoryImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='setBorderColor:'>
<arg declared_type='UIColor*' index='0' type='@' name='borderColor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBorderColor:forState:'>
<arg declared_type='UIColor*' index='0' type='@' name='borderColor'/>
<arg declared_type='UIControlState' index='1' type='I' name='state'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBorderWidth:'>
<arg declared_type='CGFloat' index='0' type='f' name='borderWidth'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCornerRadius:'>
<arg declared_type='CGFloat' index='0' type='f' name='cornerRadius'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisabledText:'>
<arg declared_type='NSString*' index='0' type='@' name='disabledText'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGradientEnabled:'>
<arg declared_type='BOOL' index='0' type='B' name='gradientEnabled'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightedBorderColor:'>
<arg declared_type='UIColor*' index='0' type='@' name='highlightedBorderColor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightedText:'>
<arg declared_type='NSString*' index='0' type='@' name='highlightedText'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightedTextColor:'>
<arg declared_type='UIColor*' index='0' type='@' name='highlightedTextColor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightedTextShadowColor:'>
<arg declared_type='UIColor*' index='0' type='@' name='highlightedTextShadowColor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightedTintColor:'>
<arg declared_type='UIColor*' index='0' type='@' name='highlightedTintColor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightAccessoryImage:'>
<arg declared_type='UIImage*' index='0' type='@' name='rightAccessoryImage'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightAccessoryImage:forState:'>
<arg declared_type='UIImage*' index='0' type='@' name='rightAccessoryImage'/>
<arg declared_type='UIControlState' index='1' type='I' name='state'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightHighlightedAccessoryImage:'>
<arg declared_type='UIImage*' index='0' type='@' name='rightHighlightedAccessoryImage'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyle:'>
<arg declared_type='NVUIGradientButtonStyle' index='0' type='i' name='style'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setText:'>
<arg declared_type='NSString*' index='0' type='@' name='text'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setText:forState:'>
<arg declared_type='NSString*' index='0' type='@' name='text'/>
<arg declared_type='UIControlState' index='1' type='I' name='state'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextColor:'>
<arg declared_type='UIColor*' index='0' type='@' name='textColor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextColor:forState:'>
<arg declared_type='UIColor*' index='0' type='@' name='textColor'/>
<arg declared_type='UIControlState' index='1' type='I' name='state'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextShadowColor:'>
<arg declared_type='UIColor*' index='0' type='@' name='textShadowColor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextShadowColor:forState:'>
<arg declared_type='UIColor*' index='0' type='@' name='textShadowColor'/>
<arg declared_type='UIControlState' index='1' type='I' name='state'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTintColor:'>
<arg declared_type='UIColor*' index='0' type='@' name='tintColor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTintColor:forState:'>
<arg declared_type='UIColor*' index='0' type='@' name='tintColor'/>
<arg declared_type='UIControlState' index='1' type='I' name='state'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleLabel:'>
<arg declared_type='UILabel*' index='0' type='@' name='titleLabel'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='style'>
<retval declared_type='NVUIGradientButtonStyle' type='i'/>
</method>
<method selector='text'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='textColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='textShadowColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='tintColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='titleLabel'>
<retval declared_type='UILabel*' type='@'/>
</method>
</class>
<class name='RKAttributeMapping'>
<method selector='attributeMappingFromKeyPath:toKeyPath:' class_method='true'>
<arg declared_type='NSString*' index='0' type='@' name='sourceKeyPath'/>
<arg declared_type='NSString*' index='1' type='@' name='destinationKeyPath'/>
<retval declared_type='RKAttributeMapping*' type='@'/>
</method>
</class>
<class name='RKConnectionMapping'>
<method selector='initWithRelationship:sourceKeyPath:destinationKeyPath:matcher:'>
<arg declared_type='NSRelationshipDescription*' index='0' type='@' name='relationship'/>
<arg declared_type='NSString*' index='1' type='@' name='sourceKeyPath'/>
<arg declared_type='NSString*' index='2' type='@' name='destinationKeyPath'/>
<arg declared_type='RKDynamicMappingMatcher*' index='3' type='@' name='matcher'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isForeignKeyConnection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isKeyPathConnection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='matcher'>
<retval declared_type='RKDynamicMappingMatcher*' type='@'/>
</method>
<method selector='relationship'>
<retval declared_type='NSRelationshipDescription*' type='@'/>
</method>
<method selector='setMatcher:'>
<arg declared_type='RKDynamicMappingMatcher*' index='0' type='@' name='matcher'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRelationship:'>
<arg declared_type='NSRelationshipDescription*' index='0' type='@' name='relationship'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKDotNetDateFormatter'>
<method selector='dateFromString:'>
<arg declared_type='NSString*' index='0' type='@' name='string'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dotNetDateFormatterWithTimeZone:' class_method='true'>
<arg declared_type='NSTimeZone*' index='0' type='@' name='timeZone'/>
<retval declared_type='RKDotNetDateFormatter*' type='@'/>
</method>
<method selector='stringFromDate:'>
<arg declared_type='NSDate*' index='0' type='@' name='date'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='RKDynamicMapping'>
<method selector='objectMappingForRepresentation:'>
<arg declared_type='NSDictionary*' index='0' type='@' name='representation'/>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='setObjectMapping:whenValueOfKeyPath:isEqualTo:'>
<arg declared_type='RKObjectMapping*' index='0' type='@' name='objectMapping'/>
<arg declared_type='NSString*' index='1' type='@' name='keyPath'/>
<arg declared_type='id' index='2' type='@' name='value'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectMappingForDataBlock:'>
<arg declared_type='RKDynamicMappingDelegateBlock' index='0' type='@?' name='block' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='RKObjectMapping*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKDynamicMappingMatcher'>
<method selector='expectedValue'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithKeyPath:expectedValue:objectMapping:'>
<arg declared_type='NSString*' index='0' type='@' name='keyPath'/>
<arg declared_type='id' index='1' type='@' name='expectedValue'/>
<arg declared_type='RKObjectMapping*' index='2' type='@' name='objectMapping'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='keyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='matches:'>
<arg declared_type='id' index='0' type='@' name='object'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='setExpectedValue:'>
<arg declared_type='id' index='0' type='@' name='expectedValue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectMapping:'>
<arg declared_type='RKObjectMapping*' index='0' type='@' name='objectMapping'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKEntityByAttributeCache'>
<method selector='addObject:'>
<arg declared_type='NSManagedObject*' index='0' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='attribute'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='containsObject:'>
<arg declared_type='NSManagedObject*' index='0' type='@' name='object'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='containsObjectWithAttributeValue:'>
<arg declared_type='id' index='0' type='@' name='attributeValue'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='countOfAttributeValues'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='countWithAttributeValue:'>
<arg declared_type='id' index='0' type='@' name='attributeValue'/>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='entity'>
<retval declared_type='NSEntityDescription*' type='@'/>
</method>
<method selector='flush'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithEntity:attribute:managedObjectContext:'>
<arg declared_type='NSEntityDescription*' index='0' type='@' name='entity'/>
<arg declared_type='NSString*' index='1' type='@' name='attributeName'/>
<arg declared_type='NSManagedObjectContext*' index='2' type='@' name='context'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='load'>
<retval declared_type='void' type='v'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='monitorsContextForChanges'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectWithAttributeValue:inContext:'>
<arg declared_type='id' index='0' type='@' name='attributeValue'/>
<arg declared_type='NSManagedObjectContext*' index='1' type='@' name='context'/>
<retval declared_type='NSManagedObject*' type='@'/>
</method>
<method selector='objectsWithAttributeValue:inContext:'>
<arg declared_type='id' index='0' type='@' name='attributeValue'/>
<arg declared_type='NSManagedObjectContext*' index='1' type='@' name='context'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removeObject:'>
<arg declared_type='NSManagedObject*' index='0' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMonitorsContextForChanges:'>
<arg declared_type='BOOL' index='0' type='B' name='monitorsContextForChanges'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKEntityCache'>
<method selector='addObject:'>
<arg declared_type='NSManagedObject*' index='0' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='attributeCacheForEntity:attribute:'>
<arg declared_type='NSEntityDescription*' index='0' type='@' name='entity'/>
<arg declared_type='NSString*' index='1' type='@' name='attributeName'/>
<retval declared_type='RKEntityByAttributeCache*' type='@'/>
</method>
<method selector='attributeCachesForEntity:'>
<arg declared_type='NSEntityDescription*' index='0' type='@' name='entity'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='cacheObjectsForEntity:byAttribute:'>
<arg declared_type='NSEntityDescription*' index='0' type='@' name='entity'/>
<arg declared_type='NSString*' index='1' type='@' name='attributeName'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='flush'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithManagedObjectContext:'>
<arg declared_type='NSManagedObjectContext*' index='0' type='@' name='context'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEntity:cachedByAttribute:'>
<arg declared_type='NSEntityDescription*' index='0' type='@' name='entity'/>
<arg declared_type='NSString*' index='1' type='@' name='attributeName'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='objectForEntity:withAttribute:value:inContext:'>
<arg declared_type='NSEntityDescription*' index='0' type='@' name='entity'/>
<arg declared_type='NSString*' index='1' type='@' name='attributeName'/>
<arg declared_type='id' index='2' type='@' name='attributeValue'/>
<arg declared_type='NSManagedObjectContext*' index='3' type='@' name='context'/>
<retval declared_type='NSManagedObject*' type='@'/>
</method>
<method selector='objectsForEntity:withAttribute:value:inContext:'>
<arg declared_type='NSEntityDescription*' index='0' type='@' name='entity'/>
<arg declared_type='NSString*' index='1' type='@' name='attributeName'/>
<arg declared_type='id' index='2' type='@' name='attributeValue'/>
<arg declared_type='NSManagedObjectContext*' index='3' type='@' name='context'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removeObject:'>
<arg declared_type='NSManagedObject*' index='0' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg declared_type='NSManagedObjectContext*' index='0' type='@' name='managedObjectContext'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKEntityMapping'>
<method selector='addConnectionMapping:'>
<arg declared_type='RKConnectionMapping*' index='0' type='@' name='connectionMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addConnectionMappingForRelationshipForName:fromSourceKeyPath:toKeyPath:matcher:'>
<arg declared_type='NSString*' index='0' type='@' name='relationshipName'/>
<arg declared_type='NSString*' index='1' type='@' name='sourceKeyPath'/>
<arg declared_type='NSString*' index='2' type='@' name='destinationKeyPath'/>
<arg declared_type='RKDynamicMappingMatcher*' index='3' type='@' name='matcher'/>
<retval declared_type='RKConnectionMapping*' type='@'/>
</method>
<method selector='addConnectionMappingsFromArray:'>
<arg declared_type='NSArray*' index='0' type='@' name='arrayOfConnectionMappings'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='connectionMappings'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='defaultValueForMissingAttribute:'>
<arg declared_type='NSString*' index='0' type='@' name='attributeName'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='entity'>
<retval declared_type='NSEntityDescription*' type='@'/>
</method>
<method selector='initWithEntity:'>
<arg declared_type='NSEntityDescription*' index='0' type='@' name='entity'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingForEntityForName:inManagedObjectStore:' class_method='true'>
<arg declared_type='NSString*' index='0' type='@' name='entityName'/>
<arg declared_type='RKManagedObjectStore*' index='1' type='@' name='managedObjectStore'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='primaryKeyAttribute'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='removeConnectionMapping:'>
<arg declared_type='RKConnectionMapping*' index='0' type='@' name='connectionMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setConnectionMappings:'>
<arg declared_type='NSArray*' index='0' type='@' name='connectionMappings'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEntity:'>
<arg declared_type='NSEntityDescription*' index='0' type='@' name='entity'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrimaryKeyAttribute:'>
<arg declared_type='NSString*' index='0' type='@' name='primaryKeyAttribute'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKErrorMessage'>
<method selector='errorMessage'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setErrorMessage:'>
<arg declared_type='NSString*' index='0' type='@' name='errorMessage'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg declared_type='NSDictionary*' index='0' type='@' name='userInfo'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='RKHTTPRequestOperation'>
<method selector='acceptableContentTypes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='acceptableStatusCodes'>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
<method selector='setAcceptableContentTypes:'>
<arg declared_type='NSSet*' index='0' type='@' name='acceptableContentTypes'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAcceptableStatusCodes:'>
<arg declared_type='NSIndexSet*' index='0' type='@' name='acceptableStatusCodes'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='wasNotModified'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='RKISO8601DateFormatter'>
<method selector='dateComponentsFromString:'>
<arg declared_type='NSString*' index='0' type='@' name='string'/>
<retval declared_type='NSDateComponents*' type='@'/>
</method>
<method selector='dateComponentsFromString:timeZone:'>
<arg declared_type='NSString*' index='0' type='@' name='string'/>
<arg declared_type='NSTimeZone**' type_modifier='o' index='1' type='^@' name='outTimeZone'/>
<retval declared_type='NSDateComponents*' type='@'/>
</method>
<method selector='dateComponentsFromString:timeZone:range:'>
<arg declared_type='NSString*' index='0' type='@' name='string'/>
<arg declared_type='NSTimeZone**' type_modifier='o' index='1' type='^@' name='outTimeZone'/>
<arg declared_type='NSRange*' type_modifier='o' index='2' type='^{_NSRange=II}' name='outRange'/>
<retval declared_type='NSDateComponents*' type='@'/>
</method>
<method selector='dateFromString:'>
<arg declared_type='NSString*' index='0' type='@' name='string'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateFromString:timeZone:'>
<arg declared_type='NSString*' index='0' type='@' name='string'/>
<arg declared_type='NSTimeZone**' type_modifier='o' index='1' type='^@' name='outTimeZone'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateFromString:timeZone:range:'>
<arg declared_type='NSString*' index='0' type='@' name='string'/>
<arg declared_type='NSTimeZone**' type_modifier='o' index='1' type='^@' name='outTimeZone'/>
<arg declared_type='NSRange*' type_modifier='o' index='2' type='^{_NSRange=II}' name='outRange'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='defaultTimeZone'>
<retval declared_type='NSTimeZone*' type='@'/>
</method>
<method selector='format'>
<retval declared_type='RKISO8601DateFormat' type='I'/>
</method>
<method selector='includeTime'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='parsesStrictly'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='purgeGlobalCaches' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultTimeZone:'>
<arg declared_type='NSTimeZone*' index='0' type='@' name='defaultTimeZone'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFormat:'>
<arg declared_type='RKISO8601DateFormat' index='0' type='I' name='format'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeTime:'>
<arg declared_type='BOOL' index='0' type='B' name='includeTime'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParsesStrictly:'>
<arg declared_type='BOOL' index='0' type='B' name='parsesStrictly'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeSeparator:'>
<arg declared_type='unichar' index='0' type='S' name='timeSeparator'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringFromDate:'>
<arg declared_type='NSDate*' index='0' type='@' name='date'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringFromDate:timeZone:'>
<arg declared_type='NSDate*' index='0' type='@' name='date'/>
<arg declared_type='NSTimeZone*' index='1' type='@' name='timeZone'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='timeSeparator'>
<retval declared_type='unichar' type='S'/>
</method>
</class>
<class name='RKInMemoryManagedObjectCache'>
<method selector='initWithManagedObjectContext:'>
<arg declared_type='NSManagedObjectContext*' index='0' type='@' name='managedObjectContext'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKMIMETypeSerialization'>
<method selector='dataFromObject:MIMEType:error:' class_method='true'>
<arg declared_type='id' index='0' type='@' name='object'/>
<arg declared_type='NSString*' index='1' type='@' name='MIMEType'/>
<arg declared_type='NSError**' index='2' type='^@' name='error'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='objectFromData:MIMEType:error:' class_method='true'>
<arg declared_type='NSData*' index='0' type='@' name='data'/>
<arg declared_type='NSString*' index='1' type='@' name='MIMEType'/>
<arg declared_type='NSError**' index='2' type='^@' name='error'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='registerClass:forMIMEType:' class_method='true'>
<arg declared_type='Class*' index='0' type='#' name='serializationClass'/>
<arg declared_type='id' index='1' type='@' name='MIMETypeStringOrRegularExpression'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registeredMIMETypes' class_method='true'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='serializationClassForMIMEType:' class_method='true'>
<arg declared_type='NSString*' index='0' type='@' name='MIMEType'/>
<retval declared_type='Class*' type='#'/>
</method>
<method selector='unregisterClass:' class_method='true'>
<arg declared_type='Class*' index='0' type='#' name='serializationClass'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKManagedObjectImporter'>
<method selector='finishImporting:'>
<arg declared_type='NSError**' index='0' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='importObjectsFromItemAtPath:withMapping:keyPath:error:'>
<arg declared_type='NSString*' index='0' type='@' name='path'/>
<arg declared_type='RKMapping*' index='1' type='@' name='mapping'/>
<arg declared_type='NSString*' index='2' type='@' name='keyPath'/>
<arg declared_type='NSError**' index='3' type='^@' name='error'/>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='initWithManagedObjectModel:storePath:'>
<arg declared_type='NSManagedObjectModel*' index='0' type='@' name='managedObjectModel'/>
<arg declared_type='NSString*' index='1' type='@' name='storePath'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPersistentStore:'>
<arg declared_type='NSPersistentStore*' index='0' type='@' name='persistentStore'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='logSeedingInfo'>
<retval declared_type='void' type='v'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='managedObjectModel'>
<retval declared_type='NSManagedObjectModel*' type='@'/>
</method>
<method selector='persistentStore'>
<retval declared_type='NSPersistentStore*' type='@'/>
</method>
<method selector='resetsStoreBeforeImporting'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setManagedObjectContext:'>
<arg declared_type='NSManagedObjectContext*' index='0' type='@' name='managedObjectContext'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectModel:'>
<arg declared_type='NSManagedObjectModel*' index='0' type='@' name='managedObjectModel'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPersistentStore:'>
<arg declared_type='NSPersistentStore*' index='0' type='@' name='persistentStore'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResetsStoreBeforeImporting:'>
<arg declared_type='BOOL' index='0' type='B' name='resetsStoreBeforeImporting'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStorePath:'>
<arg declared_type='NSString*' index='0' type='@' name='storePath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='storePath'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='RKManagedObjectMappingOperationDataSource'>
<method selector='initWithManagedObjectContext:cache:'>
<arg declared_type='NSManagedObjectContext*' index='0' type='@' name='managedObjectContext'/>
<arg declared_type='id' index='1' type='@' name='managedObjectCache'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='setManagedObjectCache:'>
<arg declared_type='id' index='0' type='@' name='managedObjectCache'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg declared_type='NSManagedObjectContext*' index='0' type='@' name='managedObjectContext'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOperationQueue:'>
<arg declared_type='NSOperationQueue*' index='0' type='@' name='operationQueue'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKManagedObjectRequestOperation'>
<method selector='deletesOrphanedObjects'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fetchRequestBlocks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='savesToPersistentStore'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDeletesOrphanedObjects:'>
<arg declared_type='BOOL' index='0' type='B' name='deletesOrphanedObjects'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFetchRequestBlocks:'>
<arg declared_type='NSArray*' index='0' type='@' name='fetchRequestBlocks'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectCache:'>
<arg declared_type='id' index='0' type='@' name='managedObjectCache'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg declared_type='NSManagedObjectContext*' index='0' type='@' name='managedObjectContext'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSavesToPersistentStore:'>
<arg declared_type='BOOL' index='0' type='B' name='savesToPersistentStore'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKManagedObjectResponseMapperOperation'>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='setManagedObjectCache:'>
<arg declared_type='id' index='0' type='@' name='managedObjectCache'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg declared_type='NSManagedObjectContext*' index='0' type='@' name='managedObjectContext'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetObjectID:'>
<arg declared_type='NSManagedObjectID*' index='0' type='@' name='targetObjectID'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='targetObjectID'>
<retval declared_type='NSManagedObjectID*' type='@'/>
</method>
</class>
<class name='RKManagedObjectStore'>
<method selector='addInMemoryPersistentStore:'>
<arg declared_type='NSError**' index='0' type='^@' name='error'/>
<retval declared_type='NSPersistentStore*' type='@'/>
</method>
<method selector='addSQLitePersistentStoreAtPath:fromSeedDatabaseAtPath:error:'>
<arg declared_type='NSString*' index='0' type='@' name='storePath'/>
<arg declared_type='NSString*' index='1' type='@' name='seedPath'/>
<arg declared_type='NSError**' index='2' type='^@' name='error'/>
<retval declared_type='NSPersistentStore*' type='@'/>
</method>
<method selector='createManagedObjectContexts'>
<retval declared_type='void' type='v'/>
</method>
<method selector='createPersistentStoreCoordinator'>
<retval declared_type='void' type='v'/>
</method>
<method selector='defaultStore' class_method='true'>
<retval declared_type='RKManagedObjectStore*' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithManagedObjectModel:'>
<arg declared_type='NSManagedObjectModel*' index='0' type='@' name='managedObjectModel'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPersistentStoreCoordinator:'>
<arg declared_type='NSPersistentStoreCoordinator*' index='0' type='@' name='persistentStoreCoordinator'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mainQueueManagedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectModel'>
<retval declared_type='NSManagedObjectModel*' type='@'/>
</method>
<method selector='newChildManagedObjectContextWithConcurrencyType:'>
<arg declared_type='NSManagedObjectContextConcurrencyType' index='0' type='I' name='concurrencyType'/>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='persistentStoreCoordinator'>
<retval declared_type='NSPersistentStoreCoordinator*' type='@'/>
</method>
<method selector='persistentStoreManagedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='resetPersistentStores:'>
<arg declared_type='NSError**' index='0' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDefaultStore:' class_method='true'>
<arg declared_type='RKManagedObjectStore*' index='0' type='@' name='managedObjectStore'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMainQueueManagedObjectContext:'>
<arg declared_type='NSManagedObjectContext*' index='0' type='@' name='mainQueueManagedObjectContext'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectCache:'>
<arg declared_type='id' index='0' type='@' name='managedObjectCache'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectModel:'>
<arg declared_type='NSManagedObjectModel*' index='0' type='@' name='managedObjectModel'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPersistentStoreCoordinator:'>
<arg declared_type='NSPersistentStoreCoordinator*' index='0' type='@' name='persistentStoreCoordinator'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPersistentStoreManagedObjectContext:'>
<arg declared_type='NSManagedObjectContext*' index='0' type='@' name='persistentStoreManagedObjectContext'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKManagedObjectThreadSafeInvocation'>
<method selector='invocationWithMethodSignature:' class_method='true'>
<arg declared_type='NSMethodSignature*' index='0' type='@' name='methodSignature'/>
<retval declared_type='RKManagedObjectThreadSafeInvocation*' type='@'/>
</method>
<method selector='invokeOnMainThread'>
<retval declared_type='void' type='v'/>
</method>
<method selector='mainQueueManagedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='privateQueueManagedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='setMainQueueManagedObjectContext:'>
<arg declared_type='NSManagedObjectContext*' index='0' type='@' name='mainQueueManagedObjectContext'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectKeyPaths:forArgument:'>
<arg declared_type='NSSet*' index='0' type='@' name='keyPaths'/>
<arg declared_type='NSInteger' index='1' type='i' name='index'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrivateQueueManagedObjectContext:'>
<arg declared_type='NSManagedObjectContext*' index='0' type='@' name='privateQueueManagedObjectContext'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKMapperOperation'>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='initWithObject:mappingsDictionary:'>
<arg declared_type='id' index='0' type='@' name='object'/>
<arg declared_type='NSDictionary*' index='1' type='@' name='mappingsDictionary'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mapCollection:atKeyPath:usingMapping:'>
<arg declared_type='NSArray*' index='0' type='@' name='mappableObjects'/>
<arg declared_type='NSString*' index='1' type='@' name='keyPath'/>
<arg declared_type='RKMapping*' index='2' type='@' name='mapping'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='mapFromObject:toObject:atKeyPath:usingMapping:'>
<arg declared_type='id' index='0' type='@' name='mappableObject'/>
<arg declared_type='id' index='1' type='@' name='destinationObject'/>
<arg declared_type='NSString*' index='2' type='@' name='keyPath'/>
<arg declared_type='RKMapping*' index='3' type='@' name='mapping'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mapObject:atKeyPath:usingMapping:'>
<arg declared_type='id' index='0' type='@' name='mappableObject'/>
<arg declared_type='NSString*' index='1' type='@' name='keyPath'/>
<arg declared_type='RKMapping*' index='2' type='@' name='mapping'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingOperationDataSource'>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingResult'>
<retval declared_type='RKMappingResult*' type='@'/>
</method>
<method selector='mappingsDictionary'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='objectWithMapping:andData:'>
<arg declared_type='RKMapping*' index='0' type='@' name='objectMapping'/>
<arg declared_type='id' index='1' type='@' name='mappableData'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' type='@' name='delegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg declared_type='NSError*' index='0' type='@' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingOperationDataSource:'>
<arg declared_type='id' index='0' type='@' name='mappingOperationDataSource'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingResult:'>
<arg declared_type='RKMappingResult*' index='0' type='@' name='mappingResult'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingsDictionary:'>
<arg declared_type='NSDictionary*' index='0' type='@' name='mappingsDictionary'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceObject:'>
<arg declared_type='id' index='0' type='@' name='sourceObject'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetObject:'>
<arg declared_type='id' index='0' type='@' name='targetObject'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='targetObject'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKMapping'>
<method selector='forceCollectionMapping'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEqualToMapping:'>
<arg declared_type='RKMapping*' index='0' type='@' name='otherMapping'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setForceCollectionMapping:'>
<arg declared_type='BOOL' index='0' type='B' name='forceCollectionMapping'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKMappingOperation'>
<method selector='dataSource'>
<retval declared_type='id' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='destinationObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='initWithSourceObject:destinationObject:mapping:'>
<arg declared_type='id' index='0' type='@' name='sourceObject'/>
<arg declared_type='id' index='1' type='@' name='destinationObject'/>
<arg declared_type='RKMapping*' index='2' type='@' name='objectOrDynamicMapping'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mapping'>
<retval declared_type='RKMapping*' type='@'/>
</method>
<method selector='performMapping:'>
<arg declared_type='NSError**' index='0' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDataSource:'>
<arg declared_type='id' index='0' type='@' name='dataSource'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' type='@' name='delegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDestinationObject:'>
<arg declared_type='id' index='0' type='@' name='destinationObject'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg declared_type='NSError*' index='0' type='@' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapping:'>
<arg declared_type='RKMapping*' index='0' type='@' name='mapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceObject:'>
<arg declared_type='id' index='0' type='@' name='sourceObject'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceObject'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKMappingResult'>
<method selector='array'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='dictionary'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='firstObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDictionary:'>
<arg declared_type='NSDictionary*' index='0' type='@' name='dictionary'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='set'>
<retval declared_type='NSSet*' type='@'/>
</method>
</class>
<class name='RKObjectManager'>
<method selector='HTTPClient'>
<retval declared_type='AFHTTPClient*' type='@'/>
</method>
<method selector='addFetchRequestBlock:'>
<arg declared_type='RKFetchRequestBlock' index='0' type='@?' name='block' function_pointer='true'>
<arg declared_type='NSURL*' type='@'/>
<retval declared_type='NSFetchRequest*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRequestDescriptor:'>
<arg declared_type='RKRequestDescriptor*' index='0' type='@' name='requestDescriptor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRequestDescriptorsFromArray:'>
<arg declared_type='NSArray*' index='0' type='@' name='requestDescriptors'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addResponseDescriptor:'>
<arg declared_type='RKResponseDescriptor*' index='0' type='@' name='responseDescriptor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addResponseDescriptorsFromArray:'>
<arg declared_type='NSArray*' index='0' type='@' name='responseDescriptors'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appropriateObjectRequestOperationWithObject:method:path:parameters:'>
<arg declared_type='id' index='0' type='@' name='object'/>
<arg declared_type='RKRequestMethod' index='1' type='i' name='method'/>
<arg declared_type='NSString*' index='2' type='@' name='path'/>
<arg declared_type='NSDictionary*' index='3' type='@' name='parameters'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='cancelAllObjectRequestOperationsWithMethod:matchingPathPattern:'>
<arg declared_type='RKRequestMethod' index='0' type='i' name='method'/>
<arg declared_type='NSString*' index='1' type='@' name='pathPattern'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='defaultHeaders'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='deleteObject:path:parameters:success:failure:'>
<arg declared_type='id' index='0' type='@' name='object'/>
<arg declared_type='NSString*' index='1' type='@' name='path'/>
<arg declared_type='NSDictionary*' index='2' type='@' name='parameters'/>
<arg declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' index='3' type='@?' name='success' function_pointer='true'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(RKObjectRequestOperation *, NSError *)' index='4' type='@?' name='failure' function_pointer='true'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfObjectRequestOperations:progress:completion:'>
<arg declared_type='NSArray*' index='0' type='@' name='operations'/>
<arg declared_type='void (^)(NSUInteger, NSUInteger)' index='1' type='@?' name='progress' function_pointer='true'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSArray *)' index='2' type='@?' name='completion' function_pointer='true'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfObjectRequestOperationsWithRoute:objects:progress:completion:'>
<arg declared_type='RKRoute*' index='0' type='@' name='route'/>
<arg declared_type='NSArray*' index='1' type='@' name='objects'/>
<arg declared_type='void (^)(NSUInteger, NSUInteger)' index='2' type='@?' name='progress' function_pointer='true'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSArray *)' index='3' type='@?' name='completion' function_pointer='true'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueObjectRequestOperation:'>
<arg declared_type='RKObjectRequestOperation*' index='0' type='@' name='objectRequestOperation'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fetchRequestBlocks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='getObject:path:parameters:success:failure:'>
<arg declared_type='id' index='0' type='@' name='object'/>
<arg declared_type='NSString*' index='1' type='@' name='path'/>
<arg declared_type='NSDictionary*' index='2' type='@' name='parameters'/>
<arg declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' index='3' type='@?' name='success' function_pointer='true'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(RKObjectRequestOperation *, NSError *)' index='4' type='@?' name='failure' function_pointer='true'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getObjectsAtPath:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' type='@' name='path'/>
<arg declared_type='NSDictionary*' index='1' type='@' name='parameters'/>
<arg declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' index='2' type='@?' name='success' function_pointer='true'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(RKObjectRequestOperation *, NSError *)' index='3' type='@?' name='failure' function_pointer='true'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getObjectsAtPathForRelationship:ofObject:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' type='@' name='relationshipName'/>
<arg declared_type='id' index='1' type='@' name='object'/>
<arg declared_type='NSDictionary*' index='2' type='@' name='parameters'/>
<arg declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' index='3' type='@?' name='success' function_pointer='true'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(RKObjectRequestOperation *, NSError *)' index='4' type='@?' name='failure' function_pointer='true'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getObjectsAtPathForRouteNamed:object:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' type='@' name='routeName'/>
<arg declared_type='id' index='1' type='@' name='object'/>
<arg declared_type='NSDictionary*' index='2' type='@' name='parameters'/>
<arg declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' index='3' type='@?' name='success' function_pointer='true'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(RKObjectRequestOperation *, NSError *)' index='4' type='@?' name='failure' function_pointer='true'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithHTTPClient:'>
<arg declared_type='AFHTTPClient*' index='0' type='@' name='client'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectRequestOperationWithRequest:managedObjectContext:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' type='@' name='request'/>
<arg declared_type='NSManagedObjectContext*' index='1' type='@' name='managedObjectContext'/>
<arg declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' index='2' type='@?' name='success' function_pointer='true'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(RKObjectRequestOperation *, NSError *)' index='3' type='@?' name='failure' function_pointer='true'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='RKManagedObjectRequestOperation*' type='@'/>
</method>
<method selector='managedObjectStore'>
<retval declared_type='RKManagedObjectStore*' type='@'/>
</method>
<method selector='managerWithBaseURL:' class_method='true'>
<arg declared_type='NSURL*' index='0' type='@' name='baseURL'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='multipartFormRequestWithObject:method:path:parameters:constructingBodyWithBlock:'>
<arg declared_type='id' index='0' type='@' name='object'/>
<arg declared_type='RKRequestMethod' index='1' type='i' name='method'/>
<arg declared_type='NSString*' index='2' type='@' name='path'/>
<arg declared_type='NSDictionary*' index='3' type='@' name='parameters'/>
<arg declared_type='void (^)(id)' index='4' type='@?' name='block' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='objectRequestOperationWithRequest:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' type='@' name='request'/>
<arg declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' index='1' type='@?' name='success' function_pointer='true'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(RKObjectRequestOperation *, NSError *)' index='2' type='@?' name='failure' function_pointer='true'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='RKObjectRequestOperation*' type='@'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='patchObject:path:parameters:success:failure:'>
<arg declared_type='id' index='0' type='@' name='object'/>
<arg declared_type='NSString*' index='1' type='@' name='path'/>
<arg declared_type='NSDictionary*' index='2' type='@' name='parameters'/>
<arg declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' index='3' type='@?' name='success' function_pointer='true'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(RKObjectRequestOperation *, NSError *)' index='4' type='@?' name='failure' function_pointer='true'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='postObject:path:parameters:success:failure:'>
<arg declared_type='id' index='0' type='@' name='object'/>
<arg declared_type='NSString*' index='1' type='@' name='path'/>
<arg declared_type='NSDictionary*' index='2' type='@' name='parameters'/>
<arg declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' index='3' type='@?' name='success' function_pointer='true'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(RKObjectRequestOperation *, NSError *)' index='4' type='@?' name='failure' function_pointer='true'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='putObject:path:parameters:success:failure:'>
<arg declared_type='id' index='0' type='@' name='object'/>
<arg declared_type='NSString*' index='1' type='@' name='path'/>
<arg declared_type='NSDictionary*' index='2' type='@' name='parameters'/>
<arg declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' index='3' type='@?' name='success' function_pointer='true'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(RKObjectRequestOperation *, NSError *)' index='4' type='@?' name='failure' function_pointer='true'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeRequestDescriptor:'>
<arg declared_type='RKRequestDescriptor*' index='0' type='@' name='requestDescriptor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeResponseDescriptor:'>
<arg declared_type='RKResponseDescriptor*' index='0' type='@' name='responseDescriptor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='requestSerializationMIMEType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='requestWithObject:method:path:parameters:'>
<arg declared_type='id' index='0' type='@' name='object'/>
<arg declared_type='RKRequestMethod' index='1' type='i' name='method'/>
<arg declared_type='NSString*' index='2' type='@' name='path'/>
<arg declared_type='NSDictionary*' index='3' type='@' name='parameters'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='requestWithPathForRelationship:ofObject:method:parameters:'>
<arg declared_type='NSString*' index='0' type='@' name='relationship'/>
<arg declared_type='id' index='1' type='@' name='object'/>
<arg declared_type='RKRequestMethod' index='2' type='i' name='method'/>
<arg declared_type='NSDictionary*' index='3' type='@' name='parameters'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='requestWithPathForRouteNamed:object:parameters:'>
<arg declared_type='NSString*' index='0' type='@' name='routeName'/>
<arg declared_type='id' index='1' type='@' name='object'/>
<arg declared_type='NSDictionary*' index='2' type='@' name='parameters'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='responseDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='router'>
<retval declared_type='RKRouter*' type='@'/>
</method>
<method selector='setAcceptHeaderWithMIMEType:'>
<arg declared_type='NSString*' index='0' type='@' name='MIMEType'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPClient:'>
<arg declared_type='AFHTTPClient*' index='0' type='@' name='HTTPClient'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectStore:'>
<arg declared_type='RKManagedObjectStore*' index='0' type='@' name='managedObjectStore'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOperationQueue:'>
<arg declared_type='NSOperationQueue*' index='0' type='@' name='operationQueue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequestSerializationMIMEType:'>
<arg declared_type='NSString*' index='0' type='@' name='requestSerializationMIMEType'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRouter:'>
<arg declared_type='RKRouter*' index='0' type='@' name='router'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSharedManager:' class_method='true'>
<arg declared_type='RKObjectManager*' index='0' type='@' name='manager'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedManager' class_method='true'>
<retval declared_type='RKObjectManager*' type='@'/>
</method>
</class>
<class name='RKObjectMapping'>
<method selector='addAttributeMappingsFromArray:'>
<arg declared_type='NSArray*' index='0' type='@' name='arrayOfAttributeNamesOrMappings'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAttributeMappingsFromDictionary:'>
<arg declared_type='NSDictionary*' index='0' type='@' name='keyPathToAttributeNames'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addDefaultDateFormatter:' class_method='true'>
<arg declared_type='NSFormatter*' index='0' type='@' name='dateFormatter'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addDefaultDateFormatterForString:inTimeZone:' class_method='true'>
<arg declared_type='NSString*' index='0' type='@' name='dateFormatString'/>
<arg declared_type='NSTimeZone*' index='1' type='@' name='nilOrTimeZone'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addPropertyMapping:'>
<arg declared_type='RKPropertyMapping*' index='0' type='@' name='propertyMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addPropertyMappingsFromArray:'>
<arg declared_type='NSArray*' index='0' type='@' name='arrayOfPropertyMappings'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='attributeMappingForKeyOfNestedDictionary'>
<retval declared_type='RKAttributeMapping*' type='@'/>
</method>
<method selector='attributeMappings'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='classForKeyPath:'>
<arg declared_type='NSString*' index='0' type='@' name='keyPath'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='classForProperty:'>
<arg declared_type='NSString*' index='0' type='@' name='propertyName'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='dateFormatters'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='defaultDateFormatters' class_method='true'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='defaultValueForMissingAttribute:'>
<arg declared_type='NSString*' index='0' type='@' name='attributeName'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='ignoreUnknownKeyPaths'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithClass:'>
<arg declared_type='Class' index='0' type='#' name='objectClass'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='inverseMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='mapKeyOfNestedDictionaryToAttribute:'>
<arg declared_type='NSString*' index='0' type='@' name='attributeName'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingForClass:' class_method='true'>
<arg declared_type='Class' index='0' type='#' name='objectClass'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='performKeyValueValidation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='preferredDateFormatter' class_method='true'>
<retval declared_type='NSFormatter*' type='@'/>
</method>
<method selector='preferredDateFormatter'>
<retval declared_type='NSFormatter*' type='@'/>
</method>
<method selector='propertyMappings'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='propertyMappingsByDestinationKeyPath'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='propertyMappingsBySourceKeyPath'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='relationshipMappings'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removePropertyMapping:'>
<arg declared_type='RKPropertyMapping*' index='0' type='@' name='propertyMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestMapping' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDateFormatters:'>
<arg declared_type='NSArray*' index='0' type='@' name='dateFormatters'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultDateFormatters:' class_method='true'>
<arg declared_type='NSArray*' index='0' type='@' name='dateFormatters'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIgnoreUnknownKeyPaths:'>
<arg declared_type='BOOL' index='0' type='B' name='ignoreUnknownKeyPaths'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNilForMissingRelationships'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setObjectClass:'>
<arg declared_type='Class' index='0' type='#' name='objectClass'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPerformKeyValueValidation:'>
<arg declared_type='BOOL' index='0' type='B' name='performKeyValueValidation'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredDateFormatter:' class_method='true'>
<arg declared_type='NSFormatter*' index='0' type='@' name='dateFormatter'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredDateFormatter:'>
<arg declared_type='NSFormatter*' index='0' type='@' name='preferredDateFormatter'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPropertyMappings:'>
<arg declared_type='NSArray*' index='0' type='@' name='propertyMappings'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSetDefaultValueForMissingAttributes:'>
<arg declared_type='BOOL' index='0' type='B' name='setDefaultValueForMissingAttributes'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSetNilForMissingRelationships:'>
<arg declared_type='BOOL' index='0' type='B' name='setNilForMissingRelationships'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldSetDefaultValueForMissingAttributes'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='RKObjectParameterization'>
<method selector='parametersWithObject:requestDescriptor:error:' class_method='true'>
<arg declared_type='id' index='0' type='@' name='object'/>
<arg declared_type='RKRequestDescriptor*' index='1' type='@' name='requestDescriptor'/>
<arg declared_type='NSError**' index='2' type='^@' name='error'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='RKObjectRequestOperation'>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='failureCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='initWithRequest:responseDescriptors:'>
<arg declared_type='NSURLRequest*' index='0' type='@' name='request'/>
<arg declared_type='NSArray*' index='1' type='@' name='responseDescriptors'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingResult'>
<retval declared_type='RKMappingResult*' type='@'/>
</method>
<method selector='performMappingOnResponse:'>
<arg declared_type='NSError**' index='0' type='^@' name='error'/>
<retval declared_type='RKMappingResult*' type='@'/>
</method>
<method selector='request'>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='response'>
<retval declared_type='NSHTTPURLResponse*' type='@'/>
</method>
<method selector='responseData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='responseDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' index='0' type='@?' name='success' function_pointer='true'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(RKObjectRequestOperation *, NSError *)' index='1' type='@?' name='failure' function_pointer='true'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg declared_type='NSError*' index='0' type='@' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFailureCallbackQueue:'>
<arg declared_type='dispatch_queue_t' index='0' type='@' name='failureCallbackQueue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingResult:'>
<arg declared_type='RKMappingResult*' index='0' type='@' name='mappingResult'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequest:'>
<arg declared_type='NSURLRequest*' index='0' type='@' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseDescriptors:'>
<arg declared_type='NSArray*' index='0' type='@' name='responseDescriptors'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSuccessCallbackQueue:'>
<arg declared_type='dispatch_queue_t' index='0' type='@' name='successCallbackQueue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetObject:'>
<arg declared_type='id' index='0' type='@' name='targetObject'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='successCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='targetObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='willFinish'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKPathMatcher'>
<method selector='matchesPath:tokenizeQueryStrings:parsedArguments:'>
<arg declared_type='NSString*' index='0' type='@' name='pathString'/>
<arg declared_type='BOOL' index='1' type='B' name='shouldTokenize'/>
<arg declared_type='NSDictionary**' index='2' type='^@' name='arguments'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='matchesPattern:tokenizeQueryStrings:parsedArguments:'>
<arg declared_type='NSString*' index='0' type='@' name='patternString'/>
<arg declared_type='BOOL' index='1' type='B' name='shouldTokenize'/>
<arg declared_type='NSDictionary**' index='2' type='^@' name='arguments'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pathFromObject:'>
<arg declared_type='id' index='0' type='@' name='object'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='pathFromObject:addingEscapes:'>
<arg declared_type='id' index='0' type='@' name='object'/>
<arg declared_type='BOOL' index='1' type='B' name='addEscapes'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='pathMatcherWithPath:' class_method='true'>
<arg declared_type='NSString*' index='0' type='@' name='pathString'/>
<retval declared_type='RKPathMatcher*' type='@'/>
</method>
<method selector='pathMatcherWithPattern:' class_method='true'>
<arg declared_type='NSString*' index='0' type='@' name='patternString'/>
<retval declared_type='RKPathMatcher*' type='@'/>
</method>
<method selector='queryParameters'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='RKPropertyInspector'>
<method selector='propertyNamesAndTypesForClass:'>
<arg declared_type='Class' index='0' type='#' name='objectClass'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='propertyNamesAndTypesForEntity:'>
<arg declared_type='NSEntityDescription*' index='0' type='@' name='entity'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='propertyTypeFromAttributeString:' class_method='true'>
<arg declared_type='NSString*' index='0' type='@' name='attributeString'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='sharedInspector' class_method='true'>
<retval declared_type='RKPropertyInspector*' type='@'/>
</method>
<method selector='typeForProperty:ofClass:'>
<arg declared_type='NSString*' index='0' type='@' name='propertyName'/>
<arg declared_type='Class' index='1' type='#' name='objectClass'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='typeForProperty:ofEntity:'>
<arg declared_type='NSString*' index='0' type='@' name='propertyName'/>
<arg declared_type='NSEntityDescription*' index='1' type='@' name='entity'/>
<retval declared_type='Class' type='#'/>
</method>
</class>
<class name='RKPropertyMapping'>
<method selector='destinationKeyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='isEqualToMapping:'>
<arg declared_type='RKPropertyMapping*' index='0' type='@' name='otherMapping'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDestinationKeyPath:'>
<arg declared_type='NSString*' index='0' type='@' name='destinationKeyPath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceKeyPath:'>
<arg declared_type='NSString*' index='0' type='@' name='sourceKeyPath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceKeyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='RKRelationshipConnectionOperation'>
<method selector='connectionMapping'>
<retval declared_type='RKConnectionMapping*' type='@'/>
</method>
<method selector='initWithManagedObject:connectionMapping:managedObjectCache:'>
<arg declared_type='NSManagedObject*' index='0' type='@' name='managedObject'/>
<arg declared_type='RKConnectionMapping*' index='1' type='@' name='connectionMapping'/>
<arg declared_type='id' index='2' type='@' name='managedObjectCache'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObject'>
<retval declared_type='NSManagedObject*' type='@'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setConnectionMapping:'>
<arg declared_type='RKConnectionMapping*' index='0' type='@' name='connectionMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObject:'>
<arg declared_type='NSManagedObject*' index='0' type='@' name='managedObject'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectCache:'>
<arg declared_type='id' index='0' type='@' name='managedObjectCache'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKRelationshipMapping'>
<method selector='mapping'>
<retval declared_type='RKMapping*' type='@'/>
</method>
<method selector='relationshipMappingFromKeyPath:toKeyPath:withMapping:' class_method='true'>
<arg declared_type='NSString*' index='0' type='@' name='sourceKeyPath'/>
<arg declared_type='NSString*' index='1' type='@' name='destinationKeyPath'/>
<arg declared_type='RKMapping*' index='2' type='@' name='mapping'/>
<retval declared_type='RKRelationshipMapping*' type='@'/>
</method>
<method selector='setMapping:'>
<arg declared_type='RKMapping*' index='0' type='@' name='mapping'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKRequestDescriptor'>
<method selector='mapping'>
<retval declared_type='RKMapping*' type='@'/>
</method>
<method selector='matchesObject:'>
<arg declared_type='id' index='0' type='@' name='object'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='requestDescriptorWithMapping:objectClass:rootKeyPath:' class_method='true'>
<arg declared_type='RKMapping*' index='0' type='@' name='mapping'/>
<arg declared_type='Class' index='1' type='#' name='objectClass'/>
<arg declared_type='NSString*' index='2' type='@' name='rootKeyPath'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='rootKeyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setMapping:'>
<arg declared_type='RKMapping*' index='0' type='@' name='mapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectClass:'>
<arg declared_type='Class' index='0' type='#' name='objectClass'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKResponseDescriptor'>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='keyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='mapping'>
<retval declared_type='RKMapping*' type='@'/>
</method>
<method selector='matchesPath:'>
<arg declared_type='NSString*' index='0' type='@' name='path'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='matchesResponse:'>
<arg declared_type='NSHTTPURLResponse*' index='0' type='@' name='response'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='matchesURL:'>
<arg declared_type='NSURL*' index='0' type='@' name='URL'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pathPattern'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='responseDescriptorWithMapping:pathPattern:keyPath:statusCodes:' class_method='true'>
<arg declared_type='RKMapping*' index='0' type='@' name='mapping'/>
<arg declared_type='NSString*' index='1' type='@' name='pathPattern'/>
<arg declared_type='NSString*' index='2' type='@' name='keyPath'/>
<arg declared_type='NSIndexSet*' index='3' type='@' name='statusCodes'/>
<retval declared_type='RKResponseDescriptor*' type='@'/>
</method>
<method selector='setBaseURL:'>
<arg declared_type='NSURL*' index='0' type='@' name='baseURL'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapping:'>
<arg declared_type='RKMapping*' index='0' type='@' name='mapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='statusCodes'>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
</class>
<class name='RKResponseMapperOperation'>
<method selector='data'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='initWithResponse:data:responseDescriptors:'>
<arg declared_type='NSHTTPURLResponse*' index='0' type='@' name='response'/>
<arg declared_type='NSData*' index='1' type='@' name='data'/>
<arg declared_type='NSArray*' index='2' type='@' name='responseDescriptors'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mapperDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingOperationDataSource'>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingResult'>
<retval declared_type='RKMappingResult*' type='@'/>
</method>
<method selector='response'>
<retval declared_type='NSHTTPURLResponse*' type='@'/>
</method>
<method selector='responseDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='responseMappingsDictionary'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='setData:'>
<arg declared_type='NSData*' index='0' type='@' name='data'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg declared_type='NSError*' index='0' type='@' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapperDelegate:'>
<arg declared_type='id' index='0' type='@' name='mapperDelegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingOperationDataSource:'>
<arg declared_type='id' index='0' type='@' name='mappingOperationDataSource'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingResult:'>
<arg declared_type='RKMappingResult*' index='0' type='@' name='mappingResult'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponse:'>
<arg declared_type='NSHTTPURLResponse*' index='0' type='@' name='response'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseDescriptors:'>
<arg declared_type='NSArray*' index='0' type='@' name='responseDescriptors'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseMappingsDictionary:'>
<arg declared_type='NSDictionary*' index='0' type='@' name='responseMappingsDictionary'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetObject:'>
<arg declared_type='id' index='0' type='@' name='targetObject'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTreatsEmptyResponseAsSuccess:'>
<arg declared_type='BOOL' index='0' type='B' name='treatsEmptyResponseAsSuccess'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='targetObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='treatsEmptyResponseAsSuccess'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='RKRoute'>
<method selector='isClassRoute'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNamedRoute'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRelationshipRoute'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='method'>
<retval declared_type='RKRequestMethod' type='i'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='objectClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='pathPattern'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='routeWithClass:pathPattern:method:' class_method='true'>
<arg declared_type='Class' index='0' type='#' name='objectClass'/>
<arg declared_type='NSString*' index='1' type='@' name='pathPattern'/>
<arg declared_type='RKRequestMethod' index='2' type='i' name='method'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='routeWithName:pathPattern:method:' class_method='true'>
<arg declared_type='NSString*' index='0' type='@' name='name'/>
<arg declared_type='NSString*' index='1' type='@' name='pathPattern'/>
<arg declared_type='RKRequestMethod' index='2' type='i' name='method'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='routeWithRelationshipName:objectClass:pathPattern:method:' class_method='true'>
<arg declared_type='NSString*' index='0' type='@' name='name'/>
<arg declared_type='Class' index='1' type='#' name='objectClass'/>
<arg declared_type='NSString*' index='2' type='@' name='pathPattern'/>
<arg declared_type='RKRequestMethod' index='3' type='i' name='method'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString*' index='0' type='@' name='name'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectClass:'>
<arg declared_type='Class' index='0' type='#' name='objectClass'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPathPattern:'>
<arg declared_type='NSString*' index='0' type='@' name='pathPattern'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldEscapePath:'>
<arg declared_type='BOOL' index='0' type='B' name='shouldEscapePath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldEscapePath'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='RKRouteSet'>
<method selector='addRoute:'>
<arg declared_type='RKRoute*' index='0' type='@' name='route'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='allRoutes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='classRoutes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='containsRoute:'>
<arg declared_type='RKRoute*' index='0' type='@' name='route'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='namedRoutes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='relationshipRoutes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removeRoute:'>
<arg declared_type='RKRoute*' index='0' type='@' name='route'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='routeForClass:method:'>
<arg declared_type='Class' index='0' type='#' name='objectClass'/>
<arg declared_type='RKRequestMethod' index='1' type='i' name='method'/>
<retval declared_type='RKRoute*' type='@'/>
</method>
<method selector='routeForName:'>
<arg declared_type='NSString*' index='0' type='@' name='name'/>
<retval declared_type='RKRoute*' type='@'/>
</method>
<method selector='routeForObject:method:'>
<arg declared_type='id' index='0' type='@' name='object'/>
<arg declared_type='RKRequestMethod' index='1' type='i' name='method'/>
<retval declared_type='RKRoute*' type='@'/>
</method>
<method selector='routeForRelationship:ofClass:method:'>
<arg declared_type='NSString*' index='0' type='@' name='relationship'/>
<arg declared_type='Class' index='1' type='#' name='objectClass'/>
<arg declared_type='RKRequestMethod' index='2' type='i' name='method'/>
<retval declared_type='RKRoute*' type='@'/>
</method>
<method selector='routesForClass:'>
<arg declared_type='Class' index='0' type='#' name='objectClass'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='routesForObject:'>
<arg declared_type='id' index='0' type='@' name='object'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='routesForRelationship:ofClass:'>
<arg declared_type='NSString*' index='0' type='@' name='relationshipName'/>
<arg declared_type='Class' index='1' type='#' name='objectClass'/>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='RKRouter'>
<method selector='URLForObject:method:'>
<arg declared_type='id' index='0' type='@' name='object'/>
<arg declared_type='RKRequestMethod' index='1' type='i' name='method'/>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='URLForRelationship:ofObject:method:'>
<arg declared_type='NSString*' index='0' type='@' name='relationshipName'/>
<arg declared_type='id' index='1' type='@' name='object'/>
<arg declared_type='RKRequestMethod' index='2' type='i' name='method'/>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='URLForRouteNamed:method:object:'>
<arg declared_type='NSString*' index='0' type='@' name='routeName'/>
<arg declared_type='RKRequestMethod*' type_modifier='o' index='1' type='^i' name='method'/>
<arg declared_type='id' index='2' type='@' name='object'/>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='URLWithRoute:object:'>
<arg declared_type='RKRoute*' index='0' type='@' name='route'/>
<arg declared_type='id' index='1' type='@' name='object'/>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='initWithBaseURL:'>
<arg declared_type='NSURL*' index='0' type='@' name='baseURL'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='routeSet'>
<retval declared_type='RKRouteSet*' type='@'/>
</method>
<method selector='setBaseURL:'>
<arg declared_type='NSURL*' index='0' type='@' name='baseURL'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRouteSet:'>
<arg declared_type='RKRouteSet*' index='0' type='@' name='routeSet'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SOCPattern'>
<method selector='initWithString:'>
<arg declared_type='NSString*' index='0' type='@' name='string'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='parameterDictionaryFromSourceString:'>
<arg declared_type='NSString*' index='0' type='@' name='sourceString'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='patternWithString:' class_method='true'>
<arg declared_type='NSString*' index='0' type='@' name='string'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='performSelector:onObject:sourceString:'>
<arg declared_type='SEL' index='0' type=':' name='selector'/>
<arg declared_type='id' index='1' type='@' name='object'/>
<arg declared_type='NSString*' index='2' type='@' name='sourceString'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='stringFromObject:'>
<arg declared_type='id' index='0' type='@' name='object'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringFromObject:withBlock:'>
<arg declared_type='id' index='0' type='@' name='object'/>
<arg declared_type='NSString *(^)(NSString *)' index='1' type='@?' name='block' function_pointer='true'>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringMatches:'>
<arg declared_type='NSString*' index='0' type='@' name='string'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UIImageView'>
<method selector='cancelImageRequestOperation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:'>
<arg declared_type='NSURL*' index='0' type='@' name='url'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:'>
<arg declared_type='NSURL*' index='0' type='@' name='url'/>
<arg declared_type='UIImage*' index='1' type='@' name='placeholderImage'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURLRequest:placeholderImage:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' type='@' name='urlRequest'/>
<arg declared_type='UIImage*' index='1' type='@' name='placeholderImage'/>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)' index='2' type='@?' name='success' function_pointer='true'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)' index='3' type='@?' name='failure' function_pointer='true'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='AFMultipartFormData'>
<method type='v24@0:4@8@12@16@20' selector='appendPartWithFileData:name:fileName:mimeType:'>
<arg declared_type='NSData*' index='0' type='@' name='data'/>
<arg declared_type='NSString*' index='1' type='@' name='name'/>
<arg declared_type='NSString*' index='2' type='@' name='fileName'/>
<arg declared_type='NSString*' index='3' type='@' name='mimeType'/>
<retval declared_type='void' type='v'/>
</method>
<method type='B20@0:4@8@12^@16' selector='appendPartWithFileURL:name:error:'>
<arg declared_type='NSURL*' index='0' type='@' name='fileURL'/>
<arg declared_type='NSString*' index='1' type='@' name='name'/>
<arg declared_type='NSError**' index='2' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='v16@0:4@8@12' selector='appendPartWithFormData:name:'>
<arg declared_type='NSData*' index='0' type='@' name='data'/>
<arg declared_type='NSString*' index='1' type='@' name='name'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='appendPartWithHeaders:body:'>
<arg declared_type='NSDictionary*' index='0' type='@' name='headers'/>
<arg declared_type='NSData*' index='1' type='@' name='body'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4I8d12' selector='throttleBandwidthWithPacketSize:delay:'>
<arg declared_type='NSUInteger' index='0' type='I' name='numberOfBytes'/>
<arg declared_type='NSTimeInterval' index='1' type='d' name='delay'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RKManagedObjectCaching'>
<method type='v12@0:4@8' selector='didCreateObject:'>
<arg declared_type='NSManagedObject*' index='0' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='didDeleteObject:'>
<arg declared_type='NSManagedObject*' index='0' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='didFetchObject:'>
<arg declared_type='NSManagedObject*' index='0' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</method>
<method type='@24@0:4@8@12@16@20' selector='findInstanceOfEntity:withPrimaryKeyAttribute:value:inManagedObjectContext:'>
<arg declared_type='NSEntityDescription*' index='0' type='@' name='entity'/>
<arg declared_type='NSString*' index='1' type='@' name='primaryKeyAttribute'/>
<arg declared_type='id' index='2' type='@' name='primaryKeyValue'/>
<arg declared_type='NSManagedObjectContext*' index='3' type='@' name='managedObjectContext'/>
<retval declared_type='NSManagedObject*' type='@'/>
</method>
<method type='@24@0:4@8@12@16@20' selector='findInstancesOfEntity:withPrimaryKeyAttribute:value:inManagedObjectContext:'>
<arg declared_type='NSEntityDescription*' index='0' type='@' name='entity'/>
<arg declared_type='NSString*' index='1' type='@' name='primaryKeyAttribute'/>
<arg declared_type='id' index='2' type='@' name='primaryKeyValue'/>
<arg declared_type='NSManagedObjectContext*' index='3' type='@' name='managedObjectContext'/>
<retval declared_type='NSArray*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='RKMapperOperationDelegate'>
<method type='v24@0:4@8@12@16@20' selector='mapper:didFailMappingOperation:forKeyPath:withError:'>
<arg declared_type='RKMapperOperation*' index='0' type='@' name='mapper'/>
<arg declared_type='RKMappingOperation*' index='1' type='@' name='mappingOperation'/>
<arg declared_type='NSString*' index='2' type='@' name='keyPath'/>
<arg declared_type='NSError*' index='3' type='@' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' selector='mapper:didFindRepresentationOrArrayOfRepresentations:atKeyPath:'>
<arg declared_type='RKMapperOperation*' index='0' type='@' name='mapper'/>
<arg declared_type='id' index='1' type='@' name='dictionaryOrArrayOfDictionaries'/>
<arg declared_type='NSString*' index='2' type='@' name='keyPath'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' selector='mapper:didFinishMappingOperation:forKeyPath:'>
<arg declared_type='RKMapperOperation*' index='0' type='@' name='mapper'/>
<arg declared_type='RKMappingOperation*' index='1' type='@' name='mappingOperation'/>
<arg declared_type='NSString*' index='2' type='@' name='keyPath'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='mapper:didNotFindRepresentationOrArrayOfRepresentationsAtKeyPath:'>
<arg declared_type='RKMapperOperation*' index='0' type='@' name='mapper'/>
<arg declared_type='NSString*' index='1' type='@' name='keyPath'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' selector='mapper:willStartMappingOperation:forKeyPath:'>
<arg declared_type='RKMapperOperation*' index='0' type='@' name='mapper'/>
<arg declared_type='RKMappingOperation*' index='1' type='@' name='mappingOperation'/>
<arg declared_type='NSString*' index='2' type='@' name='keyPath'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='mapperDidFinishMapping:'>
<arg declared_type='RKMapperOperation*' index='0' type='@' name='mapper'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='mapperWillStartMapping:'>
<arg declared_type='RKMapperOperation*' index='0' type='@' name='mapper'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RKMappingOperationDataSource'>
<method type='v12@0:4@8' selector='commitChangesForMappingOperation:'>
<arg declared_type='RKMappingOperation*' index='0' type='@' name='mappingOperation'/>
<retval declared_type='void' type='v'/>
</method>
<method type='@20@0:4@8@12@16' selector='mappingOperation:targetObjectForRepresentation:withMapping:'>
<arg declared_type='RKMappingOperation*' index='0' type='@' name='mappingOperation'/>
<arg declared_type='NSDictionary*' index='1' type='@' name='representation'/>
<arg declared_type='RKObjectMapping*' index='2' type='@' name='mapping'/>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='RKMappingOperationDelegate'>
<method type='v20@0:4@8@12@16' selector='mappingOperation:didConnectRelationship:usingMapping:'>
<arg declared_type='RKMappingOperation*' index='0' type='@' name='operation'/>
<arg declared_type='NSRelationshipDescription*' index='1' type='@' name='relationship'/>
<arg declared_type='RKConnectionMapping*' index='2' type='@' name='connectionMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='mappingOperation:didFailWithError:'>
<arg declared_type='RKMappingOperation*' index='0' type='@' name='operation'/>
<arg declared_type='NSError*' index='1' type='@' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v24@0:4@8@12@16@20' selector='mappingOperation:didFindValue:forKeyPath:mapping:'>
<arg declared_type='RKMappingOperation*' index='0' type='@' name='operation'/>
<arg declared_type='id' index='1' type='@' name='value'/>
<arg declared_type='NSString*' index='2' type='@' name='keyPath'/>
<arg declared_type='RKPropertyMapping*' index='3' type='@' name='propertyMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' selector='mappingOperation:didNotFindValueForKeyPath:mapping:'>
<arg declared_type='RKMappingOperation*' index='0' type='@' name='operation'/>
<arg declared_type='NSString*' index='1' type='@' name='keyPath'/>
<arg declared_type='RKPropertyMapping*' index='2' type='@' name='propertyMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v24@0:4@8@12@16@20' selector='mappingOperation:didNotSetUnchangedValue:forKeyPath:usingMapping:'>
<arg declared_type='RKMappingOperation*' index='0' type='@' name='operation'/>
<arg declared_type='id' index='1' type='@' name='value'/>
<arg declared_type='NSString*' index='2' type='@' name='keyPath'/>
<arg declared_type='RKPropertyMapping*' index='3' type='@' name='propertyMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' selector='mappingOperation:didSelectObjectMapping:forDynamicMapping:'>
<arg declared_type='RKMappingOperation*' index='0' type='@' name='operation'/>
<arg declared_type='RKObjectMapping*' index='1' type='@' name='objectMapping'/>
<arg declared_type='RKDynamicMapping*' index='2' type='@' name='dynamicMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v24@0:4@8@12@16@20' selector='mappingOperation:didSetValue:forKeyPath:usingMapping:'>
<arg declared_type='RKMappingOperation*' index='0' type='@' name='operation'/>
<arg declared_type='id' index='1' type='@' name='value'/>
<arg declared_type='NSString*' index='2' type='@' name='keyPath'/>
<arg declared_type='RKPropertyMapping*' index='3' type='@' name='propertyMapping'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RKSerialization'>
<method type='@16@0:4@8^@12' selector='dataFromObject:error:' class_method='true'>
<arg declared_type='id' index='0' type='@' name='object'/>
<arg declared_type='NSError**' index='1' type='^@' name='error'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method type='@16@0:4@8^@12' selector='objectFromData:error:' class_method='true'>
<arg declared_type='NSData*' index='0' type='@' name='data'/>
<arg declared_type='NSError**' index='1' type='^@' name='error'/>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
</signatures>

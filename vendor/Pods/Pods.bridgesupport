<?xml version='1.0'?>
<signatures version='1.0'>
<constant const='true' name='AFNetworkingErrorDomain' type='@' declared_type='NSString*'/>
<constant const='true' name='AFNetworkingOperationDidFinishNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='AFNetworkingOperationDidStartNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='AFNetworkingOperationFailingURLRequestErrorKey' type='@' declared_type='NSString*'/>
<constant const='true' name='AFNetworkingOperationFailingURLResponseErrorKey' type='@' declared_type='NSString*'/>
<constant const='true' name='RKDetailedErrorsKey' type='@' declared_type='NSString*'/>
<constant const='true' name='RKEntityDescriptionPrimaryKeyAttributeUserInfoKey' type='@' declared_type='NSString*'/>
<constant const='true' name='RKEntityDescriptionPrimaryKeyAttributeValuePredicateSubstitutionVariable' type='@' declared_type='NSString*'/>
<constant const='true' name='RKErrorDomain' type='@' declared_type='NSString*'/>
<constant const='true' name='RKErrorNotificationErrorKey' type='@' declared_type='NSString*'/>
<constant name='RKISO8601DefaultTimeSeparatorCharacter' type='S' declared_type='unichar'/>
<constant const='true' name='RKMIMETypeErrorKey' type='@' declared_type='NSString*'/>
<constant const='true' name='RKMIMETypeFormURLEncoded' type='@' declared_type='NSString*'/>
<constant const='true' name='RKMIMETypeJSON' type='@' declared_type='NSString*'/>
<constant const='true' name='RKMIMETypeTextXML' type='@' declared_type='NSString*'/>
<constant const='true' name='RKMIMETypeXML' type='@' declared_type='NSString*'/>
<constant const='true' name='RKMappingErrorKeyPathErrorKey' type='@' declared_type='NSString*'/>
<constant const='true' name='RKObjectMapperErrorObjectsKey' type='@' declared_type='NSString*'/>
<constant const='true' name='RKRequestMethodAny' type='i' declared_type='RKRequestMethod'/>
<constant const='true' name='RKSQLitePersistentStoreSeedDatabasePathOption' type='@' declared_type='NSString*'/>
<constant const='true' name='kAFUploadStream3GSuggestedDelay' type='d' declared_type='NSTimeInterval'/>
<constant const='true' name='kAFUploadStream3GSuggestedPacketSize' type='I' declared_type='NSUInteger'/>
<enum value='0' name='AFFormURLParameterEncoding'/>
<enum value='1' name='AFJSONParameterEncoding'/>
<enum value='2' name='AFPropertyListParameterEncoding'/>
<enum value='2' name='NVUIGradientButtonStyleBlackOpaque'/>
<enum value='3' name='NVUIGradientButtonStyleBlackTranslucent'/>
<enum value='1' name='NVUIGradientButtonStyleDefault'/>
<enum value='0' name='RKLogComponent'/>
<enum value='1' name='RKLogLevelCritical'/>
<enum value='5' name='RKLogLevelDebug'/>
<enum value='3' name='RKLogLevelDefault'/>
<enum value='2' name='RKLogLevelError'/>
<enum value='4' name='RKLogLevelInfo'/>
<enum value='0' name='RKLogLevelOff'/>
<enum value='6' name='RKLogLevelTrace'/>
<enum value='3' name='RKLogLevelWarning'/>
<enum value='1004' name='RKMappingErrorFromMappingResult'/>
<enum value='1001' name='RKMappingErrorNotFound'/>
<enum value='1002' name='RKMappingErrorTypeMismatch'/>
<enum value='1003' name='RKMappingErrorUnmappableRepresentation'/>
<enum value='1005' name='RKMappingErrorValidationFailure'/>
<enum value='1' name='RKObjectLoaderRemoteSystemError'/>
<enum value='4' name='RKObjectLoaderUnexpectedResponseError'/>
<enum value='7' name='RKParserRegistryEmptyDataError'/>
<enum value='2' name='RKRequestBaseURLOfflineError'/>
<enum value='5' name='RKRequestConnectionTimeoutError'/>
<enum value='3' name='RKRequestMethodDELETE'/>
<enum value='0' name='RKRequestMethodGET'/>
<enum value='4' name='RKRequestMethodHEAD'/>
<enum value='-1' name='RKRequestMethodInvalid'/>
<enum value='6' name='RKRequestMethodOPTIONS'/>
<enum value='5' name='RKRequestMethodPATCH'/>
<enum value='1' name='RKRequestMethodPOST'/>
<enum value='2' name='RKRequestMethodPUT'/>
<enum value='3' name='RKRequestUnexpectedResponseError'/>
<enum value='400' name='RKStatusCodeClassClientError'/>
<enum value='100' name='RKStatusCodeClassInformational'/>
<enum value='300' name='RKStatusCodeClassRedirection'/>
<enum value='500' name='RKStatusCodeClassServerError'/>
<enum value='200' name='RKStatusCodeClassSuccessful'/>
<enum value='6' name='RKUnsupportedMIMETypeError'/>
<enum value='0' name='RKlcl_cApp'/>
<enum value='1' name='RKlcl_cRestKit'/>
<enum value='2' name='RKlcl_cRestKitCoreData'/>
<enum value='3' name='RKlcl_cRestKitCoreDataCache'/>
<enum value='4' name='RKlcl_cRestKitNetwork'/>
<enum value='5' name='RKlcl_cRestKitObjectMapping'/>
<enum value='6' name='RKlcl_cRestKitSearch'/>
<enum value='7' name='RKlcl_cRestKitSupport'/>
<enum value='8' name='RKlcl_cRestKitTesting'/>
<enum value='9' name='RKlcl_cRestKitUI'/>
<enum value='1' name='RKlcl_vCritical'/>
<enum value='5' name='RKlcl_vDebug'/>
<enum value='2' name='RKlcl_vError'/>
<enum value='4' name='RKlcl_vInfo'/>
<enum value='0' name='RKlcl_vOff'/>
<enum value='6' name='RKlcl_vTrace'/>
<enum value='3' name='RKlcl_vWarning'/>
<function name='AFContentTypesFromHTTPHeader'>
<arg name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSSet*'/>
</function>
<function name='AFQueryStringFromParametersWithEncoding'>
<arg name='parameters' type='@' declared_type='NSDictionary*'/>
<arg name='encoding' type='I' declared_type='NSStringEncoding'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKApplicationDataDirectory'>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKCachesDirectory'>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKClassIsCollection'>
<arg name='aClass' type='#' declared_type='Class'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKDateFromHTTPDateString'>
<arg type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSDate*'/>
</function>
<function name='RKDateFromString'>
<arg name='dateString' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSDate*'/>
</function>
<function name='RKDictionaryByMergingDictionaryWithDictionary'>
<arg name='dict1' type='@' declared_type='NSDictionary*'/>
<arg name='dict2' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSDictionary*'/>
</function>
<function name='RKDictionaryByReplacingPercentEscapesInEntriesFromDictionary'>
<arg name='dictionary' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSDictionary*'/>
</function>
<function name='RKDictionaryFromURLEncodedStringWithEncoding'>
<arg name='URLEncodedString' type='@' declared_type='NSString*'/>
<arg name='encoding' type='I' declared_type='NSStringEncoding'/>
<retval type='@' declared_type='NSDictionary*'/>
</function>
<function name='RKEnsureDirectoryExistsAtPath'>
<arg name='path' type='@' declared_type='NSString*'/>
<arg name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKErrorFromMappingResult'>
<arg name='mappingResult' type='@' declared_type='RKMappingResult*'/>
<retval type='@' declared_type='NSError*'/>
</function>
<function name='RKHTTPCacheExpirationDateFromHeadersWithStatusCode'>
<arg name='headers' type='@' declared_type='NSDictionary*'/>
<arg name='statusCode' type='i' declared_type='NSInteger'/>
<retval type='@' declared_type='NSDate*'/>
</function>
<function name='RKLogConfigureFromEnvironment'>
<retval type='v' declared_type='void'/>
</function>
<function name='RKLogCoreDataError'>
<arg name='error' type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='RKLogInitialize'>
<retval type='v' declared_type='void'/>
</function>
<function name='RKLogIntegerAsBinary'>
<arg type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='RKLogValidationError'>
<arg name='error' type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='RKMIMETypeFromPathExtension'>
<arg name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKMIMETypeInSet'>
<arg name='MIMEType' type='@' declared_type='NSString*'/>
<arg name='MIMETypes' type='@' declared_type='NSSet*'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKObjectIsCollection'>
<arg name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKObjectIsCollectionContainingOnlyManagedObjects'>
<arg name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKObjectIsEqualToObject'>
<arg name='object' type='@' declared_type='id'/>
<arg name='anotherObject' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKPathAndQueryStringFromURLRelativeToURL'>
<arg name='URL' type='@' declared_type='NSURL*'/>
<arg name='baseURL' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKPathFromPatternWithObject'>
<arg name='pathPattern' type='@' declared_type='NSString*'/>
<arg name='object' type='@' declared_type='id'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKPercentEscapedQueryStringFromStringWithEncoding'>
<arg name='string' type='@' declared_type='NSString*'/>
<arg name='encoding' type='I' declared_type='NSStringEncoding'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKQueryParametersFromStringWithEncoding'>
<arg name='string' type='@' declared_type='NSString*'/>
<arg name='encoding' type='I' declared_type='NSStringEncoding'/>
<retval type='@' declared_type='NSDictionary*'/>
</function>
<function name='RKRequestMethodFromString'>
<arg type='@' declared_type='NSString*'/>
<retval type='i' declared_type='RKRequestMethod'/>
</function>
<function name='RKStatusCodeIndexSetForClass'>
<arg name='statusCodeClass' type='I' declared_type='RKStatusCodeClass'/>
<retval type='@' declared_type='NSIndexSet*'/>
</function>
<function name='RKStatusCodeRangeForClass'>
<arg name='statusCodeClass' type='I' declared_type='RKStatusCodeClass'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</function>
<function name='RKStringFromDate'>
<arg name='date' type='@' declared_type='NSDate*'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKStringFromRequestMethod'>
<arg type='i' declared_type='RKRequestMethod'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKURLEncodedStringFromDictionaryWithEncoding'>
<arg name='dictionary' type='@' declared_type='NSDictionary*'/>
<arg name='encoding' type='I' declared_type='NSStringEncoding'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKURLIsRelativeToURL'>
<arg name='URL' type='@' declared_type='NSURL*'/>
<arg name='baseURL' type='@' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKlcl_configure_by_component'>
<arg name='component' type='I' declared_type='_RKlcl_component_t'/>
<arg name='level' type='I' declared_type='_RKlcl_level_t'/>
<retval type='I' declared_type='uint32_t'/>
</function>
<function name='RKlcl_configure_by_header'>
<arg const='true' name='header' type='*' declared_type='char*'/>
<arg name='level' type='I' declared_type='_RKlcl_level_t'/>
<retval type='I' declared_type='uint32_t'/>
</function>
<function name='RKlcl_configure_by_identifier'>
<arg const='true' name='identifier' type='*' declared_type='char*'/>
<arg name='level' type='I' declared_type='_RKlcl_level_t'/>
<retval type='I' declared_type='uint32_t'/>
</function>
<function name='RKlcl_configure_by_name'>
<arg const='true' name='name' type='*' declared_type='char*'/>
<arg name='level' type='I' declared_type='_RKlcl_level_t'/>
<retval type='I' declared_type='uint32_t'/>
</function>
<function name='SOCStringFromStringWithObject'>
<arg name='string' type='@' declared_type='NSString*'/>
<arg name='object' type='@' declared_type='id'/>
<retval type='@' declared_type='NSString*'/>
</function>
<class name='AFHTTPClient'>
<method selector='HTTPRequestOperationWithRequest:success:failure:'>
<arg index='0' name='request' type='@' declared_type='NSURLRequest*'/>
<arg index='1' function_pointer='true' name='success' type='@?' declared_type='void (^)(AFHTTPRequestOperation *, id)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='2' function_pointer='true' name='failure' type='@?' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='AFHTTPRequestOperation*'/>
</method>
<method selector='baseURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='cancelAllHTTPOperationsWithMethod:path:'>
<arg index='0' name='method' type='@' declared_type='NSString*'/>
<arg index='1' name='path' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='clearAuthorizationHeader'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='clientWithBaseURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='AFHTTPClient*'/>
</method>
<method selector='defaultHeaders'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='defaultValueForHeader:'>
<arg index='0' name='header' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='deletePath:parameters:success:failure:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='parameters' type='@' declared_type='NSDictionary*'/>
<arg index='2' function_pointer='true' name='success' type='@?' declared_type='void (^)(AFHTTPRequestOperation *, id)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='3' function_pointer='true' name='failure' type='@?' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueBatchOfHTTPRequestOperations:progressBlock:completionBlock:'>
<arg index='0' name='operations' type='@' declared_type='NSArray*'/>
<arg index='1' function_pointer='true' name='progressBlock' type='@?' declared_type='void (^)(NSUInteger, NSUInteger)'>
<arg type='I' declared_type='NSUInteger'/>
<arg type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='2' function_pointer='true' name='completionBlock' type='@?' declared_type='void (^)(NSArray *)'>
<arg type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueBatchOfHTTPRequestOperationsWithRequests:progressBlock:completionBlock:'>
<arg index='0' name='requests' type='@' declared_type='NSArray*'/>
<arg index='1' function_pointer='true' name='progressBlock' type='@?' declared_type='void (^)(NSUInteger, NSUInteger)'>
<arg type='I' declared_type='NSUInteger'/>
<arg type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='2' function_pointer='true' name='completionBlock' type='@?' declared_type='void (^)(NSArray *)'>
<arg type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueHTTPRequestOperation:'>
<arg index='0' name='operation' type='@' declared_type='AFHTTPRequestOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getPath:parameters:success:failure:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='parameters' type='@' declared_type='NSDictionary*'/>
<arg index='2' function_pointer='true' name='success' type='@?' declared_type='void (^)(AFHTTPRequestOperation *, id)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='3' function_pointer='true' name='failure' type='@?' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBaseURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='multipartFormRequestWithMethod:path:parameters:constructingBodyWithBlock:'>
<arg index='0' name='method' type='@' declared_type='NSString*'/>
<arg index='1' name='path' type='@' declared_type='NSString*'/>
<arg index='2' name='parameters' type='@' declared_type='NSDictionary*'/>
<arg index='3' function_pointer='true' name='block' type='@?' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='NSMutableURLRequest*'/>
</method>
<method selector='operationQueue'>
<retval type='@' declared_type='NSOperationQueue*'/>
</method>
<method selector='parameterEncoding'>
<retval type='i' declared_type='AFHTTPClientParameterEncoding'/>
</method>
<method selector='patchPath:parameters:success:failure:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='parameters' type='@' declared_type='NSDictionary*'/>
<arg index='2' function_pointer='true' name='success' type='@?' declared_type='void (^)(AFHTTPRequestOperation *, id)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='3' function_pointer='true' name='failure' type='@?' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='postPath:parameters:success:failure:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='parameters' type='@' declared_type='NSDictionary*'/>
<arg index='2' function_pointer='true' name='success' type='@?' declared_type='void (^)(AFHTTPRequestOperation *, id)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='3' function_pointer='true' name='failure' type='@?' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='putPath:parameters:success:failure:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='parameters' type='@' declared_type='NSDictionary*'/>
<arg index='2' function_pointer='true' name='success' type='@?' declared_type='void (^)(AFHTTPRequestOperation *, id)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='3' function_pointer='true' name='failure' type='@?' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='registerHTTPOperationClass:'>
<arg index='0' name='operationClass' type='#' declared_type='Class'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='requestWithMethod:path:parameters:'>
<arg index='0' name='method' type='@' declared_type='NSString*'/>
<arg index='1' name='path' type='@' declared_type='NSString*'/>
<arg index='2' name='parameters' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSMutableURLRequest*'/>
</method>
<method selector='setAuthorizationHeaderWithToken:'>
<arg index='0' name='token' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAuthorizationHeaderWithUsername:password:'>
<arg index='0' name='username' type='@' declared_type='NSString*'/>
<arg index='1' name='password' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultHeader:value:'>
<arg index='0' name='header' type='@' declared_type='NSString*'/>
<arg index='1' name='value' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParameterEncoding:'>
<arg index='0' name='parameterEncoding' type='i' declared_type='AFHTTPClientParameterEncoding'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStringEncoding:'>
<arg index='0' name='stringEncoding' type='I' declared_type='NSStringEncoding'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringEncoding'>
<retval type='I' declared_type='NSStringEncoding'/>
</method>
<method selector='unregisterHTTPOperationClass:'>
<arg index='0' name='operationClass' type='#' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='AFHTTPRequestOperation'>
<method class_method='true' selector='acceptableContentTypes'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method class_method='true' selector='acceptableStatusCodes'>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method class_method='true' selector='addAcceptableContentTypes:'>
<arg index='0' name='contentTypes' type='@' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='addAcceptableStatusCodes:'>
<arg index='0' name='statusCodes' type='@' declared_type='NSIndexSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='canProcessRequest:'>
<arg index='0' name='urlRequest' type='@' declared_type='NSURLRequest*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='failureCallbackQueue'>
<retval type='@' declared_type='dispatch_queue_t'/>
</method>
<method selector='hasAcceptableContentType'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasAcceptableStatusCode'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='response'>
<retval type='@' declared_type='NSHTTPURLResponse*'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg index='0' function_pointer='true' name='success' type='@?' declared_type='void (^)(AFHTTPRequestOperation *, id)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='1' function_pointer='true' name='failure' type='@?' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFailureCallbackQueue:'>
<arg index='0' name='failureCallbackQueue' type='@' declared_type='dispatch_queue_t'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSuccessCallbackQueue:'>
<arg index='0' name='successCallbackQueue' type='@' declared_type='dispatch_queue_t'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='successCallbackQueue'>
<retval type='@' declared_type='dispatch_queue_t'/>
</method>
</class>
<class name='AFImageRequestOperation'>
<method class_method='true' selector='imageRequestOperationWithRequest:imageProcessingBlock:success:failure:'>
<arg index='0' name='urlRequest' type='@' declared_type='NSURLRequest*'/>
<arg index='1' function_pointer='true' name='imageProcessingBlock' type='@?' declared_type='UIImage *(^)(UIImage *)'>
<arg type='@' declared_type='UIImage*'/>
<retval type='@' declared_type='UIImage*'/>
</arg>
<arg index='2' function_pointer='true' name='success' type='@?' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='3' function_pointer='true' name='failure' type='@?' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='AFImageRequestOperation*'/>
</method>
<method class_method='true' selector='imageRequestOperationWithRequest:success:'>
<arg index='0' name='urlRequest' type='@' declared_type='NSURLRequest*'/>
<arg index='1' function_pointer='true' name='success' type='@?' declared_type='void (^)(UIImage *)'>
<arg type='@' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='AFImageRequestOperation*'/>
</method>
<method selector='imageScale'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='responseImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='setImageScale:'>
<arg index='0' name='imageScale' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='AFJSONRequestOperation'>
<method class_method='true' selector='JSONRequestOperationWithRequest:success:failure:'>
<arg index='0' name='urlRequest' type='@' declared_type='NSURLRequest*'/>
<arg index='1' function_pointer='true' name='success' type='@?' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, id)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='2' function_pointer='true' name='failure' type='@?' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, id)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='NSError*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='AFJSONRequestOperation*'/>
</method>
<method selector='responseJSON'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='AFNetworkActivityIndicatorManager'>
<method selector='decrementActivityCount'>
<retval type='v' declared_type='void'/>
</method>
<method selector='incrementActivityCount'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isNetworkActivityIndicatorVisible'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setEnabled:'>
<arg index='0' name='enabled' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedManager'>
<retval type='@' declared_type='AFNetworkActivityIndicatorManager*'/>
</method>
</class>
<class name='AFPropertyListRequestOperation'>
<method selector='propertyListReadOptions'>
<retval type='I' declared_type='NSPropertyListReadOptions'/>
</method>
<method class_method='true' selector='propertyListRequestOperationWithRequest:success:failure:'>
<arg index='0' name='urlRequest' type='@' declared_type='NSURLRequest*'/>
<arg index='1' function_pointer='true' name='success' type='@?' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, id)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='2' function_pointer='true' name='failure' type='@?' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, id)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='NSError*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='AFPropertyListRequestOperation*'/>
</method>
<method selector='responsePropertyList'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setPropertyListReadOptions:'>
<arg index='0' name='propertyListReadOptions' type='I' declared_type='NSPropertyListReadOptions'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='AFURLConnectionOperation'>
<method selector='error'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='initWithRequest:'>
<arg index='0' name='urlRequest' type='@' declared_type='NSURLRequest*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='inputStream'>
<retval type='@' declared_type='NSInputStream*'/>
</method>
<method selector='isPaused'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='outputStream'>
<retval type='@' declared_type='NSOutputStream*'/>
</method>
<method selector='pause'>
<retval type='v' declared_type='void'/>
</method>
<method selector='request'>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method selector='response'>
<retval type='@' declared_type='NSURLResponse*'/>
</method>
<method selector='responseData'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='responseString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='resume'>
<retval type='v' declared_type='void'/>
</method>
<method selector='runLoopModes'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='setAuthenticationAgainstProtectionSpaceBlock:'>
<arg index='0' function_pointer='true' name='block' type='@?' declared_type='BOOL (^)(NSURLConnection *, NSURLProtectionSpace *)'>
<arg type='@' declared_type='NSURLConnection*'/>
<arg type='@' declared_type='NSURLProtectionSpace*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAuthenticationChallengeBlock:'>
<arg index='0' function_pointer='true' name='block' type='@?' declared_type='void (^)(NSURLConnection *, NSURLAuthenticationChallenge *)'>
<arg type='@' declared_type='NSURLConnection*'/>
<arg type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCacheResponseBlock:'>
<arg index='0' function_pointer='true' name='block' type='@?' declared_type='NSCachedURLResponse *(^)(NSURLConnection *, NSCachedURLResponse *)'>
<arg type='@' declared_type='NSURLConnection*'/>
<arg type='@' declared_type='NSCachedURLResponse*'/>
<retval type='@' declared_type='NSCachedURLResponse*'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDownloadProgressBlock:'>
<arg index='0' function_pointer='true' name='block' type='@?' declared_type='void (^)(NSUInteger, long long, long long)'>
<arg type='I' declared_type='NSUInteger'/>
<arg type='q' declared_type='long long'/>
<arg type='q' declared_type='long long'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInputStream:'>
<arg index='0' name='inputStream' type='@' declared_type='NSInputStream*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOutputStream:'>
<arg index='0' name='outputStream' type='@' declared_type='NSOutputStream*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRedirectResponseBlock:'>
<arg index='0' function_pointer='true' name='block' type='@?' declared_type='NSURLRequest *(^)(NSURLConnection *, NSURLRequest *, NSURLResponse *)'>
<arg type='@' declared_type='NSURLConnection*'/>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSURLResponse*'/>
<retval type='@' declared_type='NSURLRequest*'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRunLoopModes:'>
<arg index='0' name='runLoopModes' type='@' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldExecuteAsBackgroundTaskWithExpirationHandler:'>
<arg index='0' function_pointer='true' name='handler' type='@?' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUploadProgressBlock:'>
<arg index='0' function_pointer='true' name='block' type='@?' declared_type='void (^)(NSUInteger, long long, long long)'>
<arg type='I' declared_type='NSUInteger'/>
<arg type='q' declared_type='long long'/>
<arg type='q' declared_type='long long'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='AFXMLRequestOperation'>
<method class_method='true' selector='XMLParserRequestOperationWithRequest:success:failure:'>
<arg index='0' name='urlRequest' type='@' declared_type='NSURLRequest*'/>
<arg index='1' function_pointer='true' name='success' type='@?' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSXMLParser *)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='NSXMLParser*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='2' function_pointer='true' name='failure' type='@?' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, NSXMLParser *)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='NSError*'/>
<arg type='@' declared_type='NSXMLParser*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='AFXMLRequestOperation*'/>
</method>
<method selector='responseXMLParser'>
<retval type='@' declared_type='NSXMLParser*'/>
</method>
</class>
<class name='CustomBadge'>
<method selector='autoBadgeSizeWithString:'>
<arg index='0' name='badgeString' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='badgeCornerRoundness'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='badgeFrame'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='badgeFrameColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='badgeInsetColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='badgeScaleFactor'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='badgeShining'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='badgeText'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='badgeTextColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='customBadgeWithString:'>
<arg index='0' name='badgeString' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='CustomBadge*'/>
</method>
<method class_method='true' selector='customBadgeWithString:withStringColor:withInsetColor:withBadgeFrame:withBadgeFrameColor:withScale:withShining:'>
<arg index='0' name='badgeString' type='@' declared_type='NSString*'/>
<arg index='1' name='stringColor' type='@' declared_type='UIColor*'/>
<arg index='2' name='insetColor' type='@' declared_type='UIColor*'/>
<arg index='3' name='badgeFrameYesNo' type='B' declared_type='BOOL'/>
<arg index='4' name='frameColor' type='@' declared_type='UIColor*'/>
<arg index='5' name='scale' type='f' declared_type='CGFloat'/>
<arg index='6' name='shining' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='CustomBadge*'/>
</method>
<method selector='setBadgeCornerRoundness:'>
<arg index='0' name='badgeCornerRoundness' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBadgeFrame:'>
<arg index='0' name='badgeFrame' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBadgeFrameColor:'>
<arg index='0' name='badgeFrameColor' type='@' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBadgeInsetColor:'>
<arg index='0' name='badgeInsetColor' type='@' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBadgeScaleFactor:'>
<arg index='0' name='badgeScaleFactor' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBadgeShining:'>
<arg index='0' name='badgeShining' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBadgeText:'>
<arg index='0' name='badgeText' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBadgeTextColor:'>
<arg index='0' name='badgeTextColor' type='@' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSEntityDescription'>
<method selector='coerceValueForPrimaryKey:'>
<arg index='0' name='primaryKeyValue' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='predicateForPrimaryKeyAttribute'>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='predicateForPrimaryKeyAttributeWithValue:'>
<arg index='0' name='value' type='@' declared_type='id'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='primaryKeyAttribute'>
<retval type='@' declared_type='NSAttributeDescription*'/>
</method>
<method selector='primaryKeyAttributeClass'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='primaryKeyAttributeName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setPrimaryKeyAttributeName:'>
<arg index='0' name='primaryKeyAttributeName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSManagedObject'>
<method selector='hasBeenDeleted'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isNew'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSManagedObjectContext'>
<method selector='countForEntityForName:predicate:error:'>
<arg index='0' name='entityName' type='@' declared_type='NSString*'/>
<arg index='1' name='predicate' type='@' declared_type='NSPredicate*'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='fetchObjectForEntity:withValueForPrimaryKeyAttribute:'>
<arg index='0' name='entity' type='@' declared_type='NSEntityDescription*'/>
<arg index='1' name='primaryKeyValue' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='fetchObjectForEntityForName:withValueForPrimaryKeyAttribute:'>
<arg index='0' name='entityName' type='@' declared_type='NSString*'/>
<arg index='1' name='primaryKeyValue' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertNewObjectForEntityForName:'>
<arg index='0' name='entityName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='saveToPersistentStore:'>
<arg index='0' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSObject'>
<method selector='appendPartWithFileData:name:fileName:mimeType:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='fileName' type='@' declared_type='NSString*'/>
<arg index='3' name='mimeType' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendPartWithFileURL:name:error:'>
<arg index='0' name='fileURL' type='@' declared_type='NSURL*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='appendPartWithFormData:name:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendPartWithHeaders:body:'>
<arg index='0' name='headers' type='@' declared_type='NSDictionary*'/>
<arg index='1' name='body' type='@' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='commitChangesForMappingOperation:'>
<arg index='0' name='mappingOperation' type='@' declared_type='RKMappingOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='dataFromObject:error:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<arg index='1' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='didCreateObject:'>
<arg index='0' name='object' type='@' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='didDeleteObject:'>
<arg index='0' name='object' type='@' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='didFetchObject:'>
<arg index='0' name='object' type='@' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='findInstanceOfEntity:withPrimaryKeyAttribute:value:inManagedObjectContext:'>
<arg index='0' name='entity' type='@' declared_type='NSEntityDescription*'/>
<arg index='1' name='primaryKeyAttribute' type='@' declared_type='NSString*'/>
<arg index='2' name='primaryKeyValue' type='@' declared_type='id'/>
<arg index='3' name='managedObjectContext' type='@' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='NSManagedObject*'/>
</method>
<method selector='findInstancesOfEntity:withPrimaryKeyAttribute:value:inManagedObjectContext:'>
<arg index='0' name='entity' type='@' declared_type='NSEntityDescription*'/>
<arg index='1' name='primaryKeyAttribute' type='@' declared_type='NSString*'/>
<arg index='2' name='primaryKeyValue' type='@' declared_type='id'/>
<arg index='3' name='managedObjectContext' type='@' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='mapper:didFailMappingOperation:forKeyPath:withError:'>
<arg index='0' name='mapper' type='@' declared_type='RKMapperOperation*'/>
<arg index='1' name='mappingOperation' type='@' declared_type='RKMappingOperation*'/>
<arg index='2' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='3' name='error' type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapper:didFindRepresentationOrArrayOfRepresentations:atKeyPath:'>
<arg index='0' name='mapper' type='@' declared_type='RKMapperOperation*'/>
<arg index='1' name='dictionaryOrArrayOfDictionaries' type='@' declared_type='id'/>
<arg index='2' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapper:didFinishMappingOperation:forKeyPath:'>
<arg index='0' name='mapper' type='@' declared_type='RKMapperOperation*'/>
<arg index='1' name='mappingOperation' type='@' declared_type='RKMappingOperation*'/>
<arg index='2' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapper:didNotFindRepresentationOrArrayOfRepresentationsAtKeyPath:'>
<arg index='0' name='mapper' type='@' declared_type='RKMapperOperation*'/>
<arg index='1' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapper:willStartMappingOperation:forKeyPath:'>
<arg index='0' name='mapper' type='@' declared_type='RKMapperOperation*'/>
<arg index='1' name='mappingOperation' type='@' declared_type='RKMappingOperation*'/>
<arg index='2' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapperDidFinishMapping:'>
<arg index='0' name='mapper' type='@' declared_type='RKMapperOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapperWillStartMapping:'>
<arg index='0' name='mapper' type='@' declared_type='RKMapperOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didConnectRelationship:usingMapping:'>
<arg index='0' name='operation' type='@' declared_type='RKMappingOperation*'/>
<arg index='1' name='relationship' type='@' declared_type='NSRelationshipDescription*'/>
<arg index='2' name='connectionMapping' type='@' declared_type='RKConnectionMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didFailWithError:'>
<arg index='0' name='operation' type='@' declared_type='RKMappingOperation*'/>
<arg index='1' name='error' type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didFindValue:forKeyPath:mapping:'>
<arg index='0' name='operation' type='@' declared_type='RKMappingOperation*'/>
<arg index='1' name='value' type='@' declared_type='id'/>
<arg index='2' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='3' name='propertyMapping' type='@' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didNotFindValueForKeyPath:mapping:'>
<arg index='0' name='operation' type='@' declared_type='RKMappingOperation*'/>
<arg index='1' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='2' name='propertyMapping' type='@' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didNotSetUnchangedValue:forKeyPath:usingMapping:'>
<arg index='0' name='operation' type='@' declared_type='RKMappingOperation*'/>
<arg index='1' name='value' type='@' declared_type='id'/>
<arg index='2' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='3' name='propertyMapping' type='@' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didSelectObjectMapping:forDynamicMapping:'>
<arg index='0' name='operation' type='@' declared_type='RKMappingOperation*'/>
<arg index='1' name='objectMapping' type='@' declared_type='RKObjectMapping*'/>
<arg index='2' name='dynamicMapping' type='@' declared_type='RKDynamicMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didSetValue:forKeyPath:usingMapping:'>
<arg index='0' name='operation' type='@' declared_type='RKMappingOperation*'/>
<arg index='1' name='value' type='@' declared_type='id'/>
<arg index='2' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='3' name='propertyMapping' type='@' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:targetObjectForRepresentation:withMapping:'>
<arg index='0' name='mappingOperation' type='@' declared_type='RKMappingOperation*'/>
<arg index='1' name='representation' type='@' declared_type='NSDictionary*'/>
<arg index='2' name='mapping' type='@' declared_type='RKObjectMapping*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='objectFromData:error:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<arg index='1' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='throttleBandwidthWithPacketSize:delay:'>
<arg index='0' name='numberOfBytes' type='I' declared_type='NSUInteger'/>
<arg index='1' name='delay' type='d' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NVUIGradientButton'>
<method selector='borderColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='borderWidth'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='cornerRadius'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='disabledText'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='highlightedBorderColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='highlightedText'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='highlightedTextColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='highlightedTextShadowColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='highlightedTintColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='initWithFrame:cornerRadius:borderWidth:andText:'>
<arg index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
<arg index='1' name='cornerRadius' type='f' declared_type='CGFloat'/>
<arg index='2' name='borderWidth' type='f' declared_type='CGFloat'/>
<arg index='3' name='text' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFrame:style:'>
<arg index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
<arg index='1' name='style' type='i' declared_type='NVUIGradientButtonStyle'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFrame:style:cornerRadius:borderWidth:andText:'>
<arg index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
<arg index='1' name='style' type='i' declared_type='NVUIGradientButtonStyle'/>
<arg index='2' name='cornerRadius' type='f' declared_type='CGFloat'/>
<arg index='3' name='borderWidth' type='f' declared_type='CGFloat'/>
<arg index='4' name='text' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isGradientEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='rightAccessoryImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='rightHighlightedAccessoryImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='setBorderColor:'>
<arg index='0' name='borderColor' type='@' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBorderColor:forState:'>
<arg index='0' name='borderColor' type='@' declared_type='UIColor*'/>
<arg index='1' name='state' type='I' declared_type='UIControlState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBorderWidth:'>
<arg index='0' name='borderWidth' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCornerRadius:'>
<arg index='0' name='cornerRadius' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisabledText:'>
<arg index='0' name='disabledText' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGradientEnabled:'>
<arg index='0' name='gradientEnabled' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHighlightedBorderColor:'>
<arg index='0' name='highlightedBorderColor' type='@' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHighlightedText:'>
<arg index='0' name='highlightedText' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHighlightedTextColor:'>
<arg index='0' name='highlightedTextColor' type='@' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHighlightedTextShadowColor:'>
<arg index='0' name='highlightedTextShadowColor' type='@' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHighlightedTintColor:'>
<arg index='0' name='highlightedTintColor' type='@' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRightAccessoryImage:'>
<arg index='0' name='rightAccessoryImage' type='@' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRightAccessoryImage:forState:'>
<arg index='0' name='rightAccessoryImage' type='@' declared_type='UIImage*'/>
<arg index='1' name='state' type='I' declared_type='UIControlState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRightHighlightedAccessoryImage:'>
<arg index='0' name='rightHighlightedAccessoryImage' type='@' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStyle:'>
<arg index='0' name='style' type='i' declared_type='NVUIGradientButtonStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setText:'>
<arg index='0' name='text' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setText:forState:'>
<arg index='0' name='text' type='@' declared_type='NSString*'/>
<arg index='1' name='state' type='I' declared_type='UIControlState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextColor:'>
<arg index='0' name='textColor' type='@' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextColor:forState:'>
<arg index='0' name='textColor' type='@' declared_type='UIColor*'/>
<arg index='1' name='state' type='I' declared_type='UIControlState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextShadowColor:'>
<arg index='0' name='textShadowColor' type='@' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextShadowColor:forState:'>
<arg index='0' name='textShadowColor' type='@' declared_type='UIColor*'/>
<arg index='1' name='state' type='I' declared_type='UIControlState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTintColor:'>
<arg index='0' name='tintColor' type='@' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTintColor:forState:'>
<arg index='0' name='tintColor' type='@' declared_type='UIColor*'/>
<arg index='1' name='state' type='I' declared_type='UIControlState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleLabel:'>
<arg index='0' name='titleLabel' type='@' declared_type='UILabel*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='style'>
<retval type='i' declared_type='NVUIGradientButtonStyle'/>
</method>
<method selector='text'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='textColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='textShadowColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='tintColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='titleLabel'>
<retval type='@' declared_type='UILabel*'/>
</method>
</class>
<class name='RKAttributeMapping'>
<method class_method='true' selector='attributeMappingFromKeyPath:toKeyPath:'>
<arg index='0' name='sourceKeyPath' type='@' declared_type='NSString*'/>
<arg index='1' name='destinationKeyPath' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='RKAttributeMapping*'/>
</method>
</class>
<class name='RKConnectionMapping'>
<method selector='initWithRelationship:sourceKeyPath:destinationKeyPath:matcher:'>
<arg index='0' name='relationship' type='@' declared_type='NSRelationshipDescription*'/>
<arg index='1' name='sourceKeyPath' type='@' declared_type='NSString*'/>
<arg index='2' name='destinationKeyPath' type='@' declared_type='NSString*'/>
<arg index='3' name='matcher' type='@' declared_type='RKDynamicMappingMatcher*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isForeignKeyConnection'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isKeyPathConnection'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='matcher'>
<retval type='@' declared_type='RKDynamicMappingMatcher*'/>
</method>
<method selector='relationship'>
<retval type='@' declared_type='NSRelationshipDescription*'/>
</method>
<method selector='setMatcher:'>
<arg index='0' name='matcher' type='@' declared_type='RKDynamicMappingMatcher*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRelationship:'>
<arg index='0' name='relationship' type='@' declared_type='NSRelationshipDescription*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKDotNetDateFormatter'>
<method selector='dateFromString:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method class_method='true' selector='dotNetDateFormatterWithTimeZone:'>
<arg index='0' name='timeZone' type='@' declared_type='NSTimeZone*'/>
<retval type='@' declared_type='RKDotNetDateFormatter*'/>
</method>
<method selector='stringFromDate:'>
<arg index='0' name='date' type='@' declared_type='NSDate*'/>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='RKDynamicMapping'>
<method selector='objectMappingForRepresentation:'>
<arg index='0' name='representation' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='RKObjectMapping*'/>
</method>
<method selector='setObjectMapping:whenValueOfKeyPath:isEqualTo:'>
<arg index='0' name='objectMapping' type='@' declared_type='RKObjectMapping*'/>
<arg index='1' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='2' name='value' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectMappingForDataBlock:'>
<arg index='0' function_pointer='true' name='block' type='@?' declared_type='RKDynamicMappingDelegateBlock'>
<arg type='@' declared_type='id'/>
<retval type='@' declared_type='RKObjectMapping*'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKDynamicMappingMatcher'>
<method selector='expectedValue'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithKeyPath:expectedValue:objectMapping:'>
<arg index='0' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='1' name='expectedValue' type='@' declared_type='id'/>
<arg index='2' name='objectMapping' type='@' declared_type='RKObjectMapping*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='keyPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='matches:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='objectMapping'>
<retval type='@' declared_type='RKObjectMapping*'/>
</method>
<method selector='setExpectedValue:'>
<arg index='0' name='expectedValue' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectMapping:'>
<arg index='0' name='objectMapping' type='@' declared_type='RKObjectMapping*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKEntityByAttributeCache'>
<method selector='addObject:'>
<arg index='0' name='object' type='@' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='attribute'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='containsObject:'>
<arg index='0' name='object' type='@' declared_type='NSManagedObject*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='containsObjectWithAttributeValue:'>
<arg index='0' name='attributeValue' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='count'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='countOfAttributeValues'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='countWithAttributeValue:'>
<arg index='0' name='attributeValue' type='@' declared_type='id'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='entity'>
<retval type='@' declared_type='NSEntityDescription*'/>
</method>
<method selector='flush'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithEntity:attribute:managedObjectContext:'>
<arg index='0' name='entity' type='@' declared_type='NSEntityDescription*'/>
<arg index='1' name='attributeName' type='@' declared_type='NSString*'/>
<arg index='2' name='context' type='@' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isLoaded'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='load'>
<retval type='v' declared_type='void'/>
</method>
<method selector='managedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='monitorsContextForChanges'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='objectWithAttributeValue:inContext:'>
<arg index='0' name='attributeValue' type='@' declared_type='id'/>
<arg index='1' name='context' type='@' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='NSManagedObject*'/>
</method>
<method selector='objectsWithAttributeValue:inContext:'>
<arg index='0' name='attributeValue' type='@' declared_type='id'/>
<arg index='1' name='context' type='@' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='removeObject:'>
<arg index='0' name='object' type='@' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMonitorsContextForChanges:'>
<arg index='0' name='monitorsContextForChanges' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKEntityCache'>
<method selector='addObject:'>
<arg index='0' name='object' type='@' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='attributeCacheForEntity:attribute:'>
<arg index='0' name='entity' type='@' declared_type='NSEntityDescription*'/>
<arg index='1' name='attributeName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='RKEntityByAttributeCache*'/>
</method>
<method selector='attributeCachesForEntity:'>
<arg index='0' name='entity' type='@' declared_type='NSEntityDescription*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='cacheObjectsForEntity:byAttribute:'>
<arg index='0' name='entity' type='@' declared_type='NSEntityDescription*'/>
<arg index='1' name='attributeName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='flush'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithManagedObjectContext:'>
<arg index='0' name='context' type='@' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEntity:cachedByAttribute:'>
<arg index='0' name='entity' type='@' declared_type='NSEntityDescription*'/>
<arg index='1' name='attributeName' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='managedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='objectForEntity:withAttribute:value:inContext:'>
<arg index='0' name='entity' type='@' declared_type='NSEntityDescription*'/>
<arg index='1' name='attributeName' type='@' declared_type='NSString*'/>
<arg index='2' name='attributeValue' type='@' declared_type='id'/>
<arg index='3' name='context' type='@' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='NSManagedObject*'/>
</method>
<method selector='objectsForEntity:withAttribute:value:inContext:'>
<arg index='0' name='entity' type='@' declared_type='NSEntityDescription*'/>
<arg index='1' name='attributeName' type='@' declared_type='NSString*'/>
<arg index='2' name='attributeValue' type='@' declared_type='id'/>
<arg index='3' name='context' type='@' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='removeObject:'>
<arg index='0' name='object' type='@' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectContext:'>
<arg index='0' name='managedObjectContext' type='@' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKEntityMapping'>
<method selector='addConnectionMapping:'>
<arg index='0' name='connectionMapping' type='@' declared_type='RKConnectionMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addConnectionMappingForRelationshipForName:fromSourceKeyPath:toKeyPath:matcher:'>
<arg index='0' name='relationshipName' type='@' declared_type='NSString*'/>
<arg index='1' name='sourceKeyPath' type='@' declared_type='NSString*'/>
<arg index='2' name='destinationKeyPath' type='@' declared_type='NSString*'/>
<arg index='3' name='matcher' type='@' declared_type='RKDynamicMappingMatcher*'/>
<retval type='@' declared_type='RKConnectionMapping*'/>
</method>
<method selector='addConnectionMappingsFromArray:'>
<arg index='0' name='arrayOfConnectionMappings' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connectionMappings'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='defaultValueForMissingAttribute:'>
<arg index='0' name='attributeName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='entity'>
<retval type='@' declared_type='NSEntityDescription*'/>
</method>
<method selector='initWithEntity:'>
<arg index='0' name='entity' type='@' declared_type='NSEntityDescription*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='mappingForEntityForName:inManagedObjectStore:'>
<arg index='0' name='entityName' type='@' declared_type='NSString*'/>
<arg index='1' name='managedObjectStore' type='@' declared_type='RKManagedObjectStore*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='primaryKeyAttribute'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='removeConnectionMapping:'>
<arg index='0' name='connectionMapping' type='@' declared_type='RKConnectionMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setConnectionMappings:'>
<arg index='0' name='connectionMappings' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEntity:'>
<arg index='0' name='entity' type='@' declared_type='NSEntityDescription*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPrimaryKeyAttribute:'>
<arg index='0' name='primaryKeyAttribute' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKErrorMessage'>
<method selector='errorMessage'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setErrorMessage:'>
<arg index='0' name='errorMessage' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserInfo:'>
<arg index='0' name='userInfo' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='RKHTTPRequestOperation'>
<method selector='acceptableContentTypes'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='acceptableStatusCodes'>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='setAcceptableContentTypes:'>
<arg index='0' name='acceptableContentTypes' type='@' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAcceptableStatusCodes:'>
<arg index='0' name='acceptableStatusCodes' type='@' declared_type='NSIndexSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='wasNotModified'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='RKISO8601DateFormatter'>
<method selector='dateComponentsFromString:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSDateComponents*'/>
</method>
<method selector='dateComponentsFromString:timeZone:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='outTimeZone' type='^@' type_modifier='o' declared_type='NSTimeZone**'/>
<retval type='@' declared_type='NSDateComponents*'/>
</method>
<method selector='dateComponentsFromString:timeZone:range:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='outTimeZone' type='^@' type_modifier='o' declared_type='NSTimeZone**'/>
<arg index='2' name='outRange' type='^{_NSRange=II}' type_modifier='o' declared_type='NSRange*'/>
<retval type='@' declared_type='NSDateComponents*'/>
</method>
<method selector='dateFromString:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='dateFromString:timeZone:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='outTimeZone' type='^@' type_modifier='o' declared_type='NSTimeZone**'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='dateFromString:timeZone:range:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='outTimeZone' type='^@' type_modifier='o' declared_type='NSTimeZone**'/>
<arg index='2' name='outRange' type='^{_NSRange=II}' type_modifier='o' declared_type='NSRange*'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='defaultTimeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
<method selector='format'>
<retval type='I' declared_type='RKISO8601DateFormat'/>
</method>
<method selector='includeTime'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='parsesStrictly'>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='purgeGlobalCaches'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultTimeZone:'>
<arg index='0' name='defaultTimeZone' type='@' declared_type='NSTimeZone*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFormat:'>
<arg index='0' name='format' type='I' declared_type='RKISO8601DateFormat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIncludeTime:'>
<arg index='0' name='includeTime' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParsesStrictly:'>
<arg index='0' name='parsesStrictly' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeSeparator:'>
<arg index='0' name='timeSeparator' type='S' declared_type='unichar'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringFromDate:'>
<arg index='0' name='date' type='@' declared_type='NSDate*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringFromDate:timeZone:'>
<arg index='0' name='date' type='@' declared_type='NSDate*'/>
<arg index='1' name='timeZone' type='@' declared_type='NSTimeZone*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='timeSeparator'>
<retval type='S' declared_type='unichar'/>
</method>
</class>
<class name='RKInMemoryManagedObjectCache'>
<method selector='initWithManagedObjectContext:'>
<arg index='0' name='managedObjectContext' type='@' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='RKMIMETypeSerialization'>
<method class_method='true' selector='dataFromObject:MIMEType:error:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<arg index='1' name='MIMEType' type='@' declared_type='NSString*'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method class_method='true' selector='objectFromData:MIMEType:error:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<arg index='1' name='MIMEType' type='@' declared_type='NSString*'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='registerClass:forMIMEType:'>
<arg index='0' name='serializationClass' type='#' declared_type='Class*'/>
<arg index='1' name='MIMETypeStringOrRegularExpression' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='registeredMIMETypes'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method class_method='true' selector='serializationClassForMIMEType:'>
<arg index='0' name='MIMEType' type='@' declared_type='NSString*'/>
<retval type='#' declared_type='Class*'/>
</method>
<method class_method='true' selector='unregisterClass:'>
<arg index='0' name='serializationClass' type='#' declared_type='Class*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKManagedObjectImporter'>
<method selector='finishImporting:'>
<arg index='0' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='importObjectsFromItemAtPath:withMapping:keyPath:error:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='mapping' type='@' declared_type='RKMapping*'/>
<arg index='2' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='3' name='error' type='^@' declared_type='NSError**'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='initWithManagedObjectModel:storePath:'>
<arg index='0' name='managedObjectModel' type='@' declared_type='NSManagedObjectModel*'/>
<arg index='1' name='storePath' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPersistentStore:'>
<arg index='0' name='persistentStore' type='@' declared_type='NSPersistentStore*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='logSeedingInfo'>
<retval type='v' declared_type='void'/>
</method>
<method selector='managedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='managedObjectModel'>
<retval type='@' declared_type='NSManagedObjectModel*'/>
</method>
<method selector='persistentStore'>
<retval type='@' declared_type='NSPersistentStore*'/>
</method>
<method selector='resetsStoreBeforeImporting'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setManagedObjectContext:'>
<arg index='0' name='managedObjectContext' type='@' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectModel:'>
<arg index='0' name='managedObjectModel' type='@' declared_type='NSManagedObjectModel*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPersistentStore:'>
<arg index='0' name='persistentStore' type='@' declared_type='NSPersistentStore*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResetsStoreBeforeImporting:'>
<arg index='0' name='resetsStoreBeforeImporting' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStorePath:'>
<arg index='0' name='storePath' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='storePath'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='RKManagedObjectMappingOperationDataSource'>
<method selector='initWithManagedObjectContext:cache:'>
<arg index='0' name='managedObjectContext' type='@' declared_type='NSManagedObjectContext*'/>
<arg index='1' name='managedObjectCache' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='managedObjectCache'>
<retval type='@' declared_type='id'/>
</method>
<method selector='managedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='operationQueue'>
<retval type='@' declared_type='NSOperationQueue*'/>
</method>
<method selector='setManagedObjectCache:'>
<arg index='0' name='managedObjectCache' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectContext:'>
<arg index='0' name='managedObjectContext' type='@' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOperationQueue:'>
<arg index='0' name='operationQueue' type='@' declared_type='NSOperationQueue*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKManagedObjectRequestOperation'>
<method selector='deletesOrphanedObjects'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fetchRequestBlocks'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='managedObjectCache'>
<retval type='@' declared_type='id'/>
</method>
<method selector='managedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='savesToPersistentStore'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setDeletesOrphanedObjects:'>
<arg index='0' name='deletesOrphanedObjects' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFetchRequestBlocks:'>
<arg index='0' name='fetchRequestBlocks' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectCache:'>
<arg index='0' name='managedObjectCache' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectContext:'>
<arg index='0' name='managedObjectContext' type='@' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSavesToPersistentStore:'>
<arg index='0' name='savesToPersistentStore' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKManagedObjectResponseMapperOperation'>
<method selector='managedObjectCache'>
<retval type='@' declared_type='id'/>
</method>
<method selector='managedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='setManagedObjectCache:'>
<arg index='0' name='managedObjectCache' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectContext:'>
<arg index='0' name='managedObjectContext' type='@' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTargetObjectID:'>
<arg index='0' name='targetObjectID' type='@' declared_type='NSManagedObjectID*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='targetObjectID'>
<retval type='@' declared_type='NSManagedObjectID*'/>
</method>
</class>
<class name='RKManagedObjectStore'>
<method selector='addInMemoryPersistentStore:'>
<arg index='0' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSPersistentStore*'/>
</method>
<method selector='addSQLitePersistentStoreAtPath:fromSeedDatabaseAtPath:error:'>
<arg index='0' name='storePath' type='@' declared_type='NSString*'/>
<arg index='1' name='seedPath' type='@' declared_type='NSString*'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSPersistentStore*'/>
</method>
<method selector='createManagedObjectContexts'>
<retval type='v' declared_type='void'/>
</method>
<method selector='createPersistentStoreCoordinator'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='defaultStore'>
<retval type='@' declared_type='RKManagedObjectStore*'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithManagedObjectModel:'>
<arg index='0' name='managedObjectModel' type='@' declared_type='NSManagedObjectModel*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPersistentStoreCoordinator:'>
<arg index='0' name='persistentStoreCoordinator' type='@' declared_type='NSPersistentStoreCoordinator*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mainQueueManagedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='managedObjectCache'>
<retval type='@' declared_type='id'/>
</method>
<method selector='managedObjectModel'>
<retval type='@' declared_type='NSManagedObjectModel*'/>
</method>
<method selector='newChildManagedObjectContextWithConcurrencyType:'>
<arg index='0' name='concurrencyType' type='I' declared_type='NSManagedObjectContextConcurrencyType'/>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='persistentStoreCoordinator'>
<retval type='@' declared_type='NSPersistentStoreCoordinator*'/>
</method>
<method selector='persistentStoreManagedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='resetPersistentStores:'>
<arg index='0' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='setDefaultStore:'>
<arg index='0' name='managedObjectStore' type='@' declared_type='RKManagedObjectStore*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMainQueueManagedObjectContext:'>
<arg index='0' name='mainQueueManagedObjectContext' type='@' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectCache:'>
<arg index='0' name='managedObjectCache' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectModel:'>
<arg index='0' name='managedObjectModel' type='@' declared_type='NSManagedObjectModel*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPersistentStoreCoordinator:'>
<arg index='0' name='persistentStoreCoordinator' type='@' declared_type='NSPersistentStoreCoordinator*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPersistentStoreManagedObjectContext:'>
<arg index='0' name='persistentStoreManagedObjectContext' type='@' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKManagedObjectThreadSafeInvocation'>
<method class_method='true' selector='invocationWithMethodSignature:'>
<arg index='0' name='methodSignature' type='@' declared_type='NSMethodSignature*'/>
<retval type='@' declared_type='RKManagedObjectThreadSafeInvocation*'/>
</method>
<method selector='invokeOnMainThread'>
<retval type='v' declared_type='void'/>
</method>
<method selector='mainQueueManagedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='privateQueueManagedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='setMainQueueManagedObjectContext:'>
<arg index='0' name='mainQueueManagedObjectContext' type='@' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectKeyPaths:forArgument:'>
<arg index='0' name='keyPaths' type='@' declared_type='NSSet*'/>
<arg index='1' name='index' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPrivateQueueManagedObjectContext:'>
<arg index='0' name='privateQueueManagedObjectContext' type='@' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKMapperOperation'>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='error'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='initWithObject:mappingsDictionary:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<arg index='1' name='mappingsDictionary' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mapCollection:atKeyPath:usingMapping:'>
<arg index='0' name='mappableObjects' type='@' declared_type='NSArray*'/>
<arg index='1' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='2' name='mapping' type='@' declared_type='RKMapping*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='mapFromObject:toObject:atKeyPath:usingMapping:'>
<arg index='0' name='mappableObject' type='@' declared_type='id'/>
<arg index='1' name='destinationObject' type='@' declared_type='id'/>
<arg index='2' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='3' name='mapping' type='@' declared_type='RKMapping*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mapObject:atKeyPath:usingMapping:'>
<arg index='0' name='mappableObject' type='@' declared_type='id'/>
<arg index='1' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='2' name='mapping' type='@' declared_type='RKMapping*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mappingOperationDataSource'>
<retval type='@' declared_type='id'/>
</method>
<method selector='mappingResult'>
<retval type='@' declared_type='RKMappingResult*'/>
</method>
<method selector='mappingsDictionary'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='objectWithMapping:andData:'>
<arg index='0' name='objectMapping' type='@' declared_type='RKMapping*'/>
<arg index='1' name='mappableData' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDelegate:'>
<arg index='0' name='delegate' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setError:'>
<arg index='0' name='error' type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMappingOperationDataSource:'>
<arg index='0' name='mappingOperationDataSource' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMappingResult:'>
<arg index='0' name='mappingResult' type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMappingsDictionary:'>
<arg index='0' name='mappingsDictionary' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSourceObject:'>
<arg index='0' name='sourceObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTargetObject:'>
<arg index='0' name='targetObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sourceObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='targetObject'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='RKMapping'>
<method selector='forceCollectionMapping'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqualToMapping:'>
<arg index='0' name='otherMapping' type='@' declared_type='RKMapping*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setForceCollectionMapping:'>
<arg index='0' name='forceCollectionMapping' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKMappingOperation'>
<method selector='dataSource'>
<retval type='@' declared_type='id'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='destinationObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='error'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='initWithSourceObject:destinationObject:mapping:'>
<arg index='0' name='sourceObject' type='@' declared_type='id'/>
<arg index='1' name='destinationObject' type='@' declared_type='id'/>
<arg index='2' name='objectOrDynamicMapping' type='@' declared_type='RKMapping*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mapping'>
<retval type='@' declared_type='RKMapping*'/>
</method>
<method selector='performMapping:'>
<arg index='0' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setDataSource:'>
<arg index='0' name='dataSource' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' name='delegate' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDestinationObject:'>
<arg index='0' name='destinationObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setError:'>
<arg index='0' name='error' type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMapping:'>
<arg index='0' name='mapping' type='@' declared_type='RKMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSourceObject:'>
<arg index='0' name='sourceObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sourceObject'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='RKMappingResult'>
<method selector='array'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='count'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='dictionary'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='firstObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDictionary:'>
<arg index='0' name='dictionary' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='set'>
<retval type='@' declared_type='NSSet*'/>
</method>
</class>
<class name='RKObjectManager'>
<method selector='HTTPClient'>
<retval type='@' declared_type='AFHTTPClient*'/>
</method>
<method selector='addFetchRequestBlock:'>
<arg index='0' function_pointer='true' name='block' type='@?' declared_type='RKFetchRequestBlock'>
<arg type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='NSFetchRequest*'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='addRequestDescriptor:'>
<arg index='0' name='requestDescriptor' type='@' declared_type='RKRequestDescriptor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addRequestDescriptorsFromArray:'>
<arg index='0' name='requestDescriptors' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addResponseDescriptor:'>
<arg index='0' name='responseDescriptor' type='@' declared_type='RKResponseDescriptor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addResponseDescriptorsFromArray:'>
<arg index='0' name='responseDescriptors' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appropriateObjectRequestOperationWithObject:method:path:parameters:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<arg index='1' name='method' type='i' declared_type='RKRequestMethod'/>
<arg index='2' name='path' type='@' declared_type='NSString*'/>
<arg index='3' name='parameters' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='baseURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='cancelAllObjectRequestOperationsWithMethod:matchingPathPattern:'>
<arg index='0' name='method' type='i' declared_type='RKRequestMethod'/>
<arg index='1' name='pathPattern' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='defaultHeaders'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='deleteObject:path:parameters:success:failure:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<arg index='1' name='path' type='@' declared_type='NSString*'/>
<arg index='2' name='parameters' type='@' declared_type='NSDictionary*'/>
<arg index='3' function_pointer='true' name='success' type='@?' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='4' function_pointer='true' name='failure' type='@?' declared_type='void (^)(RKObjectRequestOperation *, NSError *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueBatchOfObjectRequestOperations:progress:completion:'>
<arg index='0' name='operations' type='@' declared_type='NSArray*'/>
<arg index='1' function_pointer='true' name='progress' type='@?' declared_type='void (^)(NSUInteger, NSUInteger)'>
<arg type='I' declared_type='NSUInteger'/>
<arg type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='2' function_pointer='true' name='completion' type='@?' declared_type='void (^)(NSArray *)'>
<arg type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueBatchOfObjectRequestOperationsWithRoute:objects:progress:completion:'>
<arg index='0' name='route' type='@' declared_type='RKRoute*'/>
<arg index='1' name='objects' type='@' declared_type='NSArray*'/>
<arg index='2' function_pointer='true' name='progress' type='@?' declared_type='void (^)(NSUInteger, NSUInteger)'>
<arg type='I' declared_type='NSUInteger'/>
<arg type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='3' function_pointer='true' name='completion' type='@?' declared_type='void (^)(NSArray *)'>
<arg type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueObjectRequestOperation:'>
<arg index='0' name='objectRequestOperation' type='@' declared_type='RKObjectRequestOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fetchRequestBlocks'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='getObject:path:parameters:success:failure:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<arg index='1' name='path' type='@' declared_type='NSString*'/>
<arg index='2' name='parameters' type='@' declared_type='NSDictionary*'/>
<arg index='3' function_pointer='true' name='success' type='@?' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='4' function_pointer='true' name='failure' type='@?' declared_type='void (^)(RKObjectRequestOperation *, NSError *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='getObjectsAtPath:parameters:success:failure:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='parameters' type='@' declared_type='NSDictionary*'/>
<arg index='2' function_pointer='true' name='success' type='@?' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='3' function_pointer='true' name='failure' type='@?' declared_type='void (^)(RKObjectRequestOperation *, NSError *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='getObjectsAtPathForRelationship:ofObject:parameters:success:failure:'>
<arg index='0' name='relationshipName' type='@' declared_type='NSString*'/>
<arg index='1' name='object' type='@' declared_type='id'/>
<arg index='2' name='parameters' type='@' declared_type='NSDictionary*'/>
<arg index='3' function_pointer='true' name='success' type='@?' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='4' function_pointer='true' name='failure' type='@?' declared_type='void (^)(RKObjectRequestOperation *, NSError *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='getObjectsAtPathForRouteNamed:object:parameters:success:failure:'>
<arg index='0' name='routeName' type='@' declared_type='NSString*'/>
<arg index='1' name='object' type='@' declared_type='id'/>
<arg index='2' name='parameters' type='@' declared_type='NSDictionary*'/>
<arg index='3' function_pointer='true' name='success' type='@?' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='4' function_pointer='true' name='failure' type='@?' declared_type='void (^)(RKObjectRequestOperation *, NSError *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithHTTPClient:'>
<arg index='0' name='client' type='@' declared_type='AFHTTPClient*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='managedObjectRequestOperationWithRequest:managedObjectContext:success:failure:'>
<arg index='0' name='request' type='@' declared_type='NSURLRequest*'/>
<arg index='1' name='managedObjectContext' type='@' declared_type='NSManagedObjectContext*'/>
<arg index='2' function_pointer='true' name='success' type='@?' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='3' function_pointer='true' name='failure' type='@?' declared_type='void (^)(RKObjectRequestOperation *, NSError *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='RKManagedObjectRequestOperation*'/>
</method>
<method selector='managedObjectStore'>
<retval type='@' declared_type='RKManagedObjectStore*'/>
</method>
<method class_method='true' selector='managerWithBaseURL:'>
<arg index='0' name='baseURL' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='multipartFormRequestWithObject:method:path:parameters:constructingBodyWithBlock:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<arg index='1' name='method' type='i' declared_type='RKRequestMethod'/>
<arg index='2' name='path' type='@' declared_type='NSString*'/>
<arg index='3' name='parameters' type='@' declared_type='NSDictionary*'/>
<arg index='4' function_pointer='true' name='block' type='@?' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='NSMutableURLRequest*'/>
</method>
<method selector='objectRequestOperationWithRequest:success:failure:'>
<arg index='0' name='request' type='@' declared_type='NSURLRequest*'/>
<arg index='1' function_pointer='true' name='success' type='@?' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='2' function_pointer='true' name='failure' type='@?' declared_type='void (^)(RKObjectRequestOperation *, NSError *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='RKObjectRequestOperation*'/>
</method>
<method selector='operationQueue'>
<retval type='@' declared_type='NSOperationQueue*'/>
</method>
<method selector='patchObject:path:parameters:success:failure:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<arg index='1' name='path' type='@' declared_type='NSString*'/>
<arg index='2' name='parameters' type='@' declared_type='NSDictionary*'/>
<arg index='3' function_pointer='true' name='success' type='@?' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='4' function_pointer='true' name='failure' type='@?' declared_type='void (^)(RKObjectRequestOperation *, NSError *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='postObject:path:parameters:success:failure:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<arg index='1' name='path' type='@' declared_type='NSString*'/>
<arg index='2' name='parameters' type='@' declared_type='NSDictionary*'/>
<arg index='3' function_pointer='true' name='success' type='@?' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='4' function_pointer='true' name='failure' type='@?' declared_type='void (^)(RKObjectRequestOperation *, NSError *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='putObject:path:parameters:success:failure:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<arg index='1' name='path' type='@' declared_type='NSString*'/>
<arg index='2' name='parameters' type='@' declared_type='NSDictionary*'/>
<arg index='3' function_pointer='true' name='success' type='@?' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='4' function_pointer='true' name='failure' type='@?' declared_type='void (^)(RKObjectRequestOperation *, NSError *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeRequestDescriptor:'>
<arg index='0' name='requestDescriptor' type='@' declared_type='RKRequestDescriptor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeResponseDescriptor:'>
<arg index='0' name='responseDescriptor' type='@' declared_type='RKResponseDescriptor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='requestDescriptors'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='requestSerializationMIMEType'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='requestWithObject:method:path:parameters:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<arg index='1' name='method' type='i' declared_type='RKRequestMethod'/>
<arg index='2' name='path' type='@' declared_type='NSString*'/>
<arg index='3' name='parameters' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSMutableURLRequest*'/>
</method>
<method selector='requestWithPathForRelationship:ofObject:method:parameters:'>
<arg index='0' name='relationship' type='@' declared_type='NSString*'/>
<arg index='1' name='object' type='@' declared_type='id'/>
<arg index='2' name='method' type='i' declared_type='RKRequestMethod'/>
<arg index='3' name='parameters' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSMutableURLRequest*'/>
</method>
<method selector='requestWithPathForRouteNamed:object:parameters:'>
<arg index='0' name='routeName' type='@' declared_type='NSString*'/>
<arg index='1' name='object' type='@' declared_type='id'/>
<arg index='2' name='parameters' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSMutableURLRequest*'/>
</method>
<method selector='responseDescriptors'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='router'>
<retval type='@' declared_type='RKRouter*'/>
</method>
<method selector='setAcceptHeaderWithMIMEType:'>
<arg index='0' name='MIMEType' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHTTPClient:'>
<arg index='0' name='HTTPClient' type='@' declared_type='AFHTTPClient*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectStore:'>
<arg index='0' name='managedObjectStore' type='@' declared_type='RKManagedObjectStore*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOperationQueue:'>
<arg index='0' name='operationQueue' type='@' declared_type='NSOperationQueue*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRequestSerializationMIMEType:'>
<arg index='0' name='requestSerializationMIMEType' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRouter:'>
<arg index='0' name='router' type='@' declared_type='RKRouter*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setSharedManager:'>
<arg index='0' name='manager' type='@' declared_type='RKObjectManager*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedManager'>
<retval type='@' declared_type='RKObjectManager*'/>
</method>
</class>
<class name='RKObjectMapping'>
<method selector='addAttributeMappingsFromArray:'>
<arg index='0' name='arrayOfAttributeNamesOrMappings' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addAttributeMappingsFromDictionary:'>
<arg index='0' name='keyPathToAttributeNames' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='addDefaultDateFormatter:'>
<arg index='0' name='dateFormatter' type='@' declared_type='NSFormatter*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='addDefaultDateFormatterForString:inTimeZone:'>
<arg index='0' name='dateFormatString' type='@' declared_type='NSString*'/>
<arg index='1' name='nilOrTimeZone' type='@' declared_type='NSTimeZone*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addPropertyMapping:'>
<arg index='0' name='propertyMapping' type='@' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addPropertyMappingsFromArray:'>
<arg index='0' name='arrayOfPropertyMappings' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='attributeMappingForKeyOfNestedDictionary'>
<retval type='@' declared_type='RKAttributeMapping*'/>
</method>
<method selector='attributeMappings'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='classForKeyPath:'>
<arg index='0' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='classForProperty:'>
<arg index='0' name='propertyName' type='@' declared_type='NSString*'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='dateFormatters'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='defaultDateFormatters'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='defaultValueForMissingAttribute:'>
<arg index='0' name='attributeName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='ignoreUnknownKeyPaths'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithClass:'>
<arg index='0' name='objectClass' type='#' declared_type='Class'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='inverseMapping'>
<retval type='@' declared_type='RKObjectMapping*'/>
</method>
<method selector='mapKeyOfNestedDictionaryToAttribute:'>
<arg index='0' name='attributeName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='mappingForClass:'>
<arg index='0' name='objectClass' type='#' declared_type='Class'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectClass'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='performKeyValueValidation'>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='preferredDateFormatter'>
<retval type='@' declared_type='NSFormatter*'/>
</method>
<method selector='preferredDateFormatter'>
<retval type='@' declared_type='NSFormatter*'/>
</method>
<method selector='propertyMappings'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='propertyMappingsByDestinationKeyPath'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='propertyMappingsBySourceKeyPath'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='relationshipMappings'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='removePropertyMapping:'>
<arg index='0' name='propertyMapping' type='@' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='requestMapping'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDateFormatters:'>
<arg index='0' name='dateFormatters' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setDefaultDateFormatters:'>
<arg index='0' name='dateFormatters' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIgnoreUnknownKeyPaths:'>
<arg index='0' name='ignoreUnknownKeyPaths' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNilForMissingRelationships'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setObjectClass:'>
<arg index='0' name='objectClass' type='#' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPerformKeyValueValidation:'>
<arg index='0' name='performKeyValueValidation' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setPreferredDateFormatter:'>
<arg index='0' name='dateFormatter' type='@' declared_type='NSFormatter*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreferredDateFormatter:'>
<arg index='0' name='preferredDateFormatter' type='@' declared_type='NSFormatter*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPropertyMappings:'>
<arg index='0' name='propertyMappings' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSetDefaultValueForMissingAttributes:'>
<arg index='0' name='setDefaultValueForMissingAttributes' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSetNilForMissingRelationships:'>
<arg index='0' name='setNilForMissingRelationships' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldSetDefaultValueForMissingAttributes'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='RKObjectParameterization'>
<method class_method='true' selector='parametersWithObject:requestDescriptor:error:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<arg index='1' name='requestDescriptor' type='@' declared_type='RKRequestDescriptor*'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='RKObjectRequestOperation'>
<method selector='error'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='failureCallbackQueue'>
<retval type='@' declared_type='dispatch_queue_t'/>
</method>
<method selector='initWithRequest:responseDescriptors:'>
<arg index='0' name='request' type='@' declared_type='NSURLRequest*'/>
<arg index='1' name='responseDescriptors' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mappingResult'>
<retval type='@' declared_type='RKMappingResult*'/>
</method>
<method selector='performMappingOnResponse:'>
<arg index='0' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='RKMappingResult*'/>
</method>
<method selector='request'>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method selector='response'>
<retval type='@' declared_type='NSHTTPURLResponse*'/>
</method>
<method selector='responseData'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='responseDescriptors'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg index='0' function_pointer='true' name='success' type='@?' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='1' function_pointer='true' name='failure' type='@?' declared_type='void (^)(RKObjectRequestOperation *, NSError *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setError:'>
<arg index='0' name='error' type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFailureCallbackQueue:'>
<arg index='0' name='failureCallbackQueue' type='@' declared_type='dispatch_queue_t'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMappingResult:'>
<arg index='0' name='mappingResult' type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRequest:'>
<arg index='0' name='request' type='@' declared_type='NSURLRequest*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResponseDescriptors:'>
<arg index='0' name='responseDescriptors' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSuccessCallbackQueue:'>
<arg index='0' name='successCallbackQueue' type='@' declared_type='dispatch_queue_t'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTargetObject:'>
<arg index='0' name='targetObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='successCallbackQueue'>
<retval type='@' declared_type='dispatch_queue_t'/>
</method>
<method selector='targetObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='willFinish'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKPathMatcher'>
<method selector='matchesPath:tokenizeQueryStrings:parsedArguments:'>
<arg index='0' name='pathString' type='@' declared_type='NSString*'/>
<arg index='1' name='shouldTokenize' type='B' declared_type='BOOL'/>
<arg index='2' name='arguments' type='^@' declared_type='NSDictionary**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='matchesPattern:tokenizeQueryStrings:parsedArguments:'>
<arg index='0' name='patternString' type='@' declared_type='NSString*'/>
<arg index='1' name='shouldTokenize' type='B' declared_type='BOOL'/>
<arg index='2' name='arguments' type='^@' declared_type='NSDictionary**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pathFromObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pathFromObject:addingEscapes:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<arg index='1' name='addEscapes' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='pathMatcherWithPath:'>
<arg index='0' name='pathString' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='RKPathMatcher*'/>
</method>
<method class_method='true' selector='pathMatcherWithPattern:'>
<arg index='0' name='patternString' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='RKPathMatcher*'/>
</method>
<method selector='queryParameters'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='RKPropertyInspector'>
<method selector='propertyNamesAndTypesForClass:'>
<arg index='0' name='objectClass' type='#' declared_type='Class'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='propertyNamesAndTypesForEntity:'>
<arg index='0' name='entity' type='@' declared_type='NSEntityDescription*'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method class_method='true' selector='propertyTypeFromAttributeString:'>
<arg index='0' name='attributeString' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='sharedInspector'>
<retval type='@' declared_type='RKPropertyInspector*'/>
</method>
<method selector='typeForProperty:ofClass:'>
<arg index='0' name='propertyName' type='@' declared_type='NSString*'/>
<arg index='1' name='objectClass' type='#' declared_type='Class'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='typeForProperty:ofEntity:'>
<arg index='0' name='propertyName' type='@' declared_type='NSString*'/>
<arg index='1' name='entity' type='@' declared_type='NSEntityDescription*'/>
<retval type='#' declared_type='Class'/>
</method>
</class>
<class name='RKPropertyMapping'>
<method selector='destinationKeyPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='isEqualToMapping:'>
<arg index='0' name='otherMapping' type='@' declared_type='RKPropertyMapping*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setDestinationKeyPath:'>
<arg index='0' name='destinationKeyPath' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSourceKeyPath:'>
<arg index='0' name='sourceKeyPath' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sourceKeyPath'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='RKRelationshipConnectionOperation'>
<method selector='connectionMapping'>
<retval type='@' declared_type='RKConnectionMapping*'/>
</method>
<method selector='initWithManagedObject:connectionMapping:managedObjectCache:'>
<arg index='0' name='managedObject' type='@' declared_type='NSManagedObject*'/>
<arg index='1' name='connectionMapping' type='@' declared_type='RKConnectionMapping*'/>
<arg index='2' name='managedObjectCache' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='managedObject'>
<retval type='@' declared_type='NSManagedObject*'/>
</method>
<method selector='managedObjectCache'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setConnectionMapping:'>
<arg index='0' name='connectionMapping' type='@' declared_type='RKConnectionMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObject:'>
<arg index='0' name='managedObject' type='@' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectCache:'>
<arg index='0' name='managedObjectCache' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKRelationshipMapping'>
<method selector='mapping'>
<retval type='@' declared_type='RKMapping*'/>
</method>
<method class_method='true' selector='relationshipMappingFromKeyPath:toKeyPath:withMapping:'>
<arg index='0' name='sourceKeyPath' type='@' declared_type='NSString*'/>
<arg index='1' name='destinationKeyPath' type='@' declared_type='NSString*'/>
<arg index='2' name='mapping' type='@' declared_type='RKMapping*'/>
<retval type='@' declared_type='RKRelationshipMapping*'/>
</method>
<method selector='setMapping:'>
<arg index='0' name='mapping' type='@' declared_type='RKMapping*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKRequestDescriptor'>
<method selector='mapping'>
<retval type='@' declared_type='RKMapping*'/>
</method>
<method selector='matchesObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='objectClass'>
<retval type='#' declared_type='Class'/>
</method>
<method class_method='true' selector='requestDescriptorWithMapping:objectClass:rootKeyPath:'>
<arg index='0' name='mapping' type='@' declared_type='RKMapping*'/>
<arg index='1' name='objectClass' type='#' declared_type='Class'/>
<arg index='2' name='rootKeyPath' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rootKeyPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setMapping:'>
<arg index='0' name='mapping' type='@' declared_type='RKMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectClass:'>
<arg index='0' name='objectClass' type='#' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKResponseDescriptor'>
<method selector='baseURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='keyPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='mapping'>
<retval type='@' declared_type='RKMapping*'/>
</method>
<method selector='matchesPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='matchesResponse:'>
<arg index='0' name='response' type='@' declared_type='NSHTTPURLResponse*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='matchesURL:'>
<arg index='0' name='URL' type='@' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pathPattern'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='responseDescriptorWithMapping:pathPattern:keyPath:statusCodes:'>
<arg index='0' name='mapping' type='@' declared_type='RKMapping*'/>
<arg index='1' name='pathPattern' type='@' declared_type='NSString*'/>
<arg index='2' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='3' name='statusCodes' type='@' declared_type='NSIndexSet*'/>
<retval type='@' declared_type='RKResponseDescriptor*'/>
</method>
<method selector='setBaseURL:'>
<arg index='0' name='baseURL' type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMapping:'>
<arg index='0' name='mapping' type='@' declared_type='RKMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='statusCodes'>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
</class>
<class name='RKResponseMapperOperation'>
<method selector='data'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='error'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='initWithResponse:data:responseDescriptors:'>
<arg index='0' name='response' type='@' declared_type='NSHTTPURLResponse*'/>
<arg index='1' name='data' type='@' declared_type='NSData*'/>
<arg index='2' name='responseDescriptors' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mapperDelegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='mappingOperationDataSource'>
<retval type='@' declared_type='id'/>
</method>
<method selector='mappingResult'>
<retval type='@' declared_type='RKMappingResult*'/>
</method>
<method selector='response'>
<retval type='@' declared_type='NSHTTPURLResponse*'/>
</method>
<method selector='responseDescriptors'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='responseMappingsDictionary'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='setData:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setError:'>
<arg index='0' name='error' type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMapperDelegate:'>
<arg index='0' name='mapperDelegate' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMappingOperationDataSource:'>
<arg index='0' name='mappingOperationDataSource' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMappingResult:'>
<arg index='0' name='mappingResult' type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResponse:'>
<arg index='0' name='response' type='@' declared_type='NSHTTPURLResponse*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResponseDescriptors:'>
<arg index='0' name='responseDescriptors' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResponseMappingsDictionary:'>
<arg index='0' name='responseMappingsDictionary' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTargetObject:'>
<arg index='0' name='targetObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTreatsEmptyResponseAsSuccess:'>
<arg index='0' name='treatsEmptyResponseAsSuccess' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='targetObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='treatsEmptyResponseAsSuccess'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='RKRoute'>
<method selector='isClassRoute'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isNamedRoute'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isRelationshipRoute'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='method'>
<retval type='i' declared_type='RKRequestMethod'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='objectClass'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='pathPattern'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='routeWithClass:pathPattern:method:'>
<arg index='0' name='objectClass' type='#' declared_type='Class'/>
<arg index='1' name='pathPattern' type='@' declared_type='NSString*'/>
<arg index='2' name='method' type='i' declared_type='RKRequestMethod'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='routeWithName:pathPattern:method:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='pathPattern' type='@' declared_type='NSString*'/>
<arg index='2' name='method' type='i' declared_type='RKRequestMethod'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='routeWithRelationshipName:objectClass:pathPattern:method:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='objectClass' type='#' declared_type='Class'/>
<arg index='2' name='pathPattern' type='@' declared_type='NSString*'/>
<arg index='3' name='method' type='i' declared_type='RKRequestMethod'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectClass:'>
<arg index='0' name='objectClass' type='#' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPathPattern:'>
<arg index='0' name='pathPattern' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldEscapePath:'>
<arg index='0' name='shouldEscapePath' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldEscapePath'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='RKRouteSet'>
<method selector='addRoute:'>
<arg index='0' name='route' type='@' declared_type='RKRoute*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='allRoutes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='classRoutes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='containsRoute:'>
<arg index='0' name='route' type='@' declared_type='RKRoute*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='namedRoutes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='relationshipRoutes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='removeRoute:'>
<arg index='0' name='route' type='@' declared_type='RKRoute*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='routeForClass:method:'>
<arg index='0' name='objectClass' type='#' declared_type='Class'/>
<arg index='1' name='method' type='i' declared_type='RKRequestMethod'/>
<retval type='@' declared_type='RKRoute*'/>
</method>
<method selector='routeForName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='RKRoute*'/>
</method>
<method selector='routeForObject:method:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<arg index='1' name='method' type='i' declared_type='RKRequestMethod'/>
<retval type='@' declared_type='RKRoute*'/>
</method>
<method selector='routeForRelationship:ofClass:method:'>
<arg index='0' name='relationship' type='@' declared_type='NSString*'/>
<arg index='1' name='objectClass' type='#' declared_type='Class'/>
<arg index='2' name='method' type='i' declared_type='RKRequestMethod'/>
<retval type='@' declared_type='RKRoute*'/>
</method>
<method selector='routesForClass:'>
<arg index='0' name='objectClass' type='#' declared_type='Class'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='routesForObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='routesForRelationship:ofClass:'>
<arg index='0' name='relationshipName' type='@' declared_type='NSString*'/>
<arg index='1' name='objectClass' type='#' declared_type='Class'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='RKRouter'>
<method selector='URLForObject:method:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<arg index='1' name='method' type='i' declared_type='RKRequestMethod'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLForRelationship:ofObject:method:'>
<arg index='0' name='relationshipName' type='@' declared_type='NSString*'/>
<arg index='1' name='object' type='@' declared_type='id'/>
<arg index='2' name='method' type='i' declared_type='RKRequestMethod'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLForRouteNamed:method:object:'>
<arg index='0' name='routeName' type='@' declared_type='NSString*'/>
<arg index='1' name='method' type='^i' type_modifier='o' declared_type='RKRequestMethod*'/>
<arg index='2' name='object' type='@' declared_type='id'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLWithRoute:object:'>
<arg index='0' name='route' type='@' declared_type='RKRoute*'/>
<arg index='1' name='object' type='@' declared_type='id'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='baseURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='initWithBaseURL:'>
<arg index='0' name='baseURL' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='routeSet'>
<retval type='@' declared_type='RKRouteSet*'/>
</method>
<method selector='setBaseURL:'>
<arg index='0' name='baseURL' type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRouteSet:'>
<arg index='0' name='routeSet' type='@' declared_type='RKRouteSet*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='SOCPattern'>
<method selector='initWithString:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='parameterDictionaryFromSourceString:'>
<arg index='0' name='sourceString' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method class_method='true' selector='patternWithString:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='performSelector:onObject:sourceString:'>
<arg index='0' name='selector' type=':' declared_type='SEL'/>
<arg index='1' name='object' type='@' declared_type='id'/>
<arg index='2' name='sourceString' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='stringFromObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringFromObject:withBlock:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<arg index='1' function_pointer='true' name='block' type='@?' declared_type='NSString *(^)(NSString *)'>
<arg type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</arg>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringMatches:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='UIImageView'>
<method selector='cancelImageRequestOperation'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageWithURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageWithURL:placeholderImage:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='placeholderImage' type='@' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageWithURLRequest:placeholderImage:success:failure:'>
<arg index='0' name='urlRequest' type='@' declared_type='NSURLRequest*'/>
<arg index='1' name='placeholderImage' type='@' declared_type='UIImage*'/>
<arg index='2' function_pointer='true' name='success' type='@?' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='3' function_pointer='true' name='failure' type='@?' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<informal_protocol name='AFMultipartFormData'>
<method type='v24@0:4@8@12@16@20' selector='appendPartWithFileData:name:fileName:mimeType:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='fileName' type='@' declared_type='NSString*'/>
<arg index='3' name='mimeType' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B20@0:4@8@12^@16' selector='appendPartWithFileURL:name:error:'>
<arg index='0' name='fileURL' type='@' declared_type='NSURL*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v16@0:4@8@12' selector='appendPartWithFormData:name:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='appendPartWithHeaders:body:'>
<arg index='0' name='headers' type='@' declared_type='NSDictionary*'/>
<arg index='1' name='body' type='@' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4I8d12' selector='throttleBandwidthWithPacketSize:delay:'>
<arg index='0' name='numberOfBytes' type='I' declared_type='NSUInteger'/>
<arg index='1' name='delay' type='d' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='RKManagedObjectCaching'>
<method type='v12@0:4@8' selector='didCreateObject:'>
<arg index='0' name='object' type='@' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='didDeleteObject:'>
<arg index='0' name='object' type='@' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='didFetchObject:'>
<arg index='0' name='object' type='@' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='@24@0:4@8@12@16@20' selector='findInstanceOfEntity:withPrimaryKeyAttribute:value:inManagedObjectContext:'>
<arg index='0' name='entity' type='@' declared_type='NSEntityDescription*'/>
<arg index='1' name='primaryKeyAttribute' type='@' declared_type='NSString*'/>
<arg index='2' name='primaryKeyValue' type='@' declared_type='id'/>
<arg index='3' name='managedObjectContext' type='@' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='NSManagedObject*'/>
</method>
<method type='@24@0:4@8@12@16@20' selector='findInstancesOfEntity:withPrimaryKeyAttribute:value:inManagedObjectContext:'>
<arg index='0' name='entity' type='@' declared_type='NSEntityDescription*'/>
<arg index='1' name='primaryKeyAttribute' type='@' declared_type='NSString*'/>
<arg index='2' name='primaryKeyValue' type='@' declared_type='id'/>
<arg index='3' name='managedObjectContext' type='@' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</informal_protocol>
<informal_protocol name='RKMapperOperationDelegate'>
<method type='v24@0:4@8@12@16@20' selector='mapper:didFailMappingOperation:forKeyPath:withError:'>
<arg index='0' name='mapper' type='@' declared_type='RKMapperOperation*'/>
<arg index='1' name='mappingOperation' type='@' declared_type='RKMappingOperation*'/>
<arg index='2' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='3' name='error' type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12@16' selector='mapper:didFindRepresentationOrArrayOfRepresentations:atKeyPath:'>
<arg index='0' name='mapper' type='@' declared_type='RKMapperOperation*'/>
<arg index='1' name='dictionaryOrArrayOfDictionaries' type='@' declared_type='id'/>
<arg index='2' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12@16' selector='mapper:didFinishMappingOperation:forKeyPath:'>
<arg index='0' name='mapper' type='@' declared_type='RKMapperOperation*'/>
<arg index='1' name='mappingOperation' type='@' declared_type='RKMappingOperation*'/>
<arg index='2' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='mapper:didNotFindRepresentationOrArrayOfRepresentationsAtKeyPath:'>
<arg index='0' name='mapper' type='@' declared_type='RKMapperOperation*'/>
<arg index='1' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12@16' selector='mapper:willStartMappingOperation:forKeyPath:'>
<arg index='0' name='mapper' type='@' declared_type='RKMapperOperation*'/>
<arg index='1' name='mappingOperation' type='@' declared_type='RKMappingOperation*'/>
<arg index='2' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='mapperDidFinishMapping:'>
<arg index='0' name='mapper' type='@' declared_type='RKMapperOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='mapperWillStartMapping:'>
<arg index='0' name='mapper' type='@' declared_type='RKMapperOperation*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='RKMappingOperationDataSource'>
<method type='v12@0:4@8' selector='commitChangesForMappingOperation:'>
<arg index='0' name='mappingOperation' type='@' declared_type='RKMappingOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='@20@0:4@8@12@16' selector='mappingOperation:targetObjectForRepresentation:withMapping:'>
<arg index='0' name='mappingOperation' type='@' declared_type='RKMappingOperation*'/>
<arg index='1' name='representation' type='@' declared_type='NSDictionary*'/>
<arg index='2' name='mapping' type='@' declared_type='RKObjectMapping*'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='RKMappingOperationDelegate'>
<method type='v20@0:4@8@12@16' selector='mappingOperation:didConnectRelationship:usingMapping:'>
<arg index='0' name='operation' type='@' declared_type='RKMappingOperation*'/>
<arg index='1' name='relationship' type='@' declared_type='NSRelationshipDescription*'/>
<arg index='2' name='connectionMapping' type='@' declared_type='RKConnectionMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='mappingOperation:didFailWithError:'>
<arg index='0' name='operation' type='@' declared_type='RKMappingOperation*'/>
<arg index='1' name='error' type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v24@0:4@8@12@16@20' selector='mappingOperation:didFindValue:forKeyPath:mapping:'>
<arg index='0' name='operation' type='@' declared_type='RKMappingOperation*'/>
<arg index='1' name='value' type='@' declared_type='id'/>
<arg index='2' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='3' name='propertyMapping' type='@' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12@16' selector='mappingOperation:didNotFindValueForKeyPath:mapping:'>
<arg index='0' name='operation' type='@' declared_type='RKMappingOperation*'/>
<arg index='1' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='2' name='propertyMapping' type='@' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v24@0:4@8@12@16@20' selector='mappingOperation:didNotSetUnchangedValue:forKeyPath:usingMapping:'>
<arg index='0' name='operation' type='@' declared_type='RKMappingOperation*'/>
<arg index='1' name='value' type='@' declared_type='id'/>
<arg index='2' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='3' name='propertyMapping' type='@' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12@16' selector='mappingOperation:didSelectObjectMapping:forDynamicMapping:'>
<arg index='0' name='operation' type='@' declared_type='RKMappingOperation*'/>
<arg index='1' name='objectMapping' type='@' declared_type='RKObjectMapping*'/>
<arg index='2' name='dynamicMapping' type='@' declared_type='RKDynamicMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v24@0:4@8@12@16@20' selector='mappingOperation:didSetValue:forKeyPath:usingMapping:'>
<arg index='0' name='operation' type='@' declared_type='RKMappingOperation*'/>
<arg index='1' name='value' type='@' declared_type='id'/>
<arg index='2' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='3' name='propertyMapping' type='@' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='RKSerialization'>
<method class_method='true' type='@16@0:4@8^@12' selector='dataFromObject:error:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<arg index='1' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method class_method='true' type='@16@0:4@8^@12' selector='objectFromData:error:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<arg index='1' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
</signatures>
